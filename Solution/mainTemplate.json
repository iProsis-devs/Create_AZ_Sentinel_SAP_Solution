{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata": {
        "author": "Eli Forbes - v-eliforbes@microsoft.com",
        "comments": "Solution template for SAP - System Applications and Products"
    },
    "parameters": {
        "formattedTimeNow": {
            "type": "string",
            "defaultValue": "[utcNow('g')]",
            "metadata": {
                "description": "Appended to workbook displayNames to make them unique"
            }
        },
        "location": {
            "type": "string",
            "minLength": 1,
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Not used, but needed to pass arm-ttk test `Location-Should-Not-Be-Hardcoded`.  We instead use the `workspace-location` which is derived from the LA workspace"
            }
        },
        "workspace-location": {
            "type": "string",
            "minLength": 1,
            "defaultValue": "[parameters('location')]",
            "metadata": {
                "description": "Region to deploy solution resources"
            }
        },
        "workspace": {
            "defaultValue": "<Enter Log Analytics Workspace>",
            "type": "string",
            "minLength": 1,
            "metadata": {
                "description": "Workspace name for Log Analytics where Sentinel is setup"
            }
        },
        "connector1-name": {
            "type": "string",
            "defaultValue": "c1c299f0-3f46-4443-8541-d280b0708fd8"
        },
        "workbook1-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for the workbook"
            }
        },
        "workbook1-name": {
            "type": "string",
            "defaultValue": "SAP - Monitor Workbook",
            "minLength": 1,
            "metadata": {
                "description": "Name for the workbook"
            }
        },
        "analytic1-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for the scheduled alert rule"
            }
        },
        "analytic2-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for the scheduled alert rule"
            }
        },
        "analytic3-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for the scheduled alert rule"
            }
        },
        "analytic4-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for the scheduled alert rule"
            }
        },
        "analytic5-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for the scheduled alert rule"
            }
        },
        "analytic6-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for the scheduled alert rule"
            }
        },
        "analytic7-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for the scheduled alert rule"
            }
        },
        "analytic8-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for the scheduled alert rule"
            }
        },
        "analytic9-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for the scheduled alert rule"
            }
        },
        "analytic10-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for the scheduled alert rule"
            }
        },
        "analytic11-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for the scheduled alert rule"
            }
        },
        "analytic12-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for the scheduled alert rule"
            }
        },
        "analytic13-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for the scheduled alert rule"
            }
        },
        "analytic14-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for the scheduled alert rule"
            }
        },
        "analytic15-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for the scheduled alert rule"
            }
        },
        "analytic16-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for the scheduled alert rule"
            }
        },
        "analytic17-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for the scheduled alert rule"
            }
        },
        "analytic18-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for the scheduled alert rule"
            }
        },
        "analytic19-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for the scheduled alert rule"
            }
        },
        "analytic20-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for the scheduled alert rule"
            }
        },
        "analytic21-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for the scheduled alert rule"
            }
        },
        "analytic22-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for the scheduled alert rule"
            }
        },
        "analytic23-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for the scheduled alert rule"
            }
        },
        "analytic24-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for the scheduled alert rule"
            }
        },
        "analytic25-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for the scheduled alert rule"
            }
        },
        "analytic26-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for the scheduled alert rule"
            }
        },
        "analytic27-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for the scheduled alert rule"
            }
        },
        "analytic28-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for the scheduled alert rule"
            }
        },
        "analytic29-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for the scheduled alert rule"
            }
        },
        "analytic30-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for the scheduled alert rule"
            }
        },
        "analytic31-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for the scheduled alert rule"
            }
        },
        "analytic32-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for the scheduled alert rule"
            }
        },
        "analytic33-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for the scheduled alert rule"
            }
        },
        "analytic34-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for the scheduled alert rule"
            }
        },
        "analytic35-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for the scheduled alert rule"
            }
        },
        "analytic36-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for the scheduled alert rule"
            }
        },
        "analytic37-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for the scheduled alert rule"
            }
        },
        "analytic38-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for the scheduled alert rule"
            }
        },
        "analytic39-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for the scheduled alert rule"
            }
        },
        "analytic40-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for the scheduled alert rule"
            }
        },
        "analytic41-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for the scheduled alert rule"
            }
        },
        "analytic42-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for the scheduled alert rule"
            }
        },
        "analytic43-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for the scheduled alert rule"
            }
        },
        "analytic44-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for the scheduled alert rule"
            }
        },
        "analytic45-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for the scheduled alert rule"
            }
        },
        "analytic46-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for the scheduled alert rule"
            }
        },
        "analytic47-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for the scheduled alert rule"
            }
        },
        "analytic48-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for the scheduled alert rule"
            }
        },
        "analytic49-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for the scheduled alert rule"
            }
        },
        "watchlist1-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for a watchilst"
            }
        },
        "watchlist2-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for a watchilst"
            }
        },
        "watchlist3-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for a watchilst"
            }
        },
        "watchlist4-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for a watchilst"
            }
        },
        "watchlist5-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for a watchilst"
            }
        },
        "watchlist6-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for a watchilst"
            }
        },
        "watchlist7-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for a watchilst"
            }
        },
        "watchlist8-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for a watchilst"
            }
        },
        "watchlist9-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for a watchilst"
            }
        },
        "watchlist10-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for a watchilst"
            }
        },
        "watchlist11-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for a watchilst"
            }
        },
        "watchlist12-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for a watchilst"
            }
        },
        "watchlist13-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for a watchilst"
            }
        },
        "watchlist14-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for a watchilst"
            }
        },
        "watchlist15-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for a watchilst"
            }
        },
        "watchlist16-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for a watchilst"
            }
        }
    },
    "variables": {
        "workbook-source": "[concat(resourceGroup().id, '/providers/Microsoft.OperationalInsights/workspaces/',parameters('workspace'))]",
        "_workbook-source": "[variables('workbook-source')]",
        "connector1-source": "[concat('/subscriptions/',subscription().subscriptionId,'/resourceGroups/',resourceGroup().name,'/providers/Microsoft.OperationalInsights/workspaces/',parameters('workspace'),'/providers/Microsoft.SecurityInsights/dataConnectors/',parameters('connector1-name'))]",
        "_connector1-source": "[variables('connector1-source')]"
    },
    "resources": [
        {
            "id": "[variables('_connector1-source')]",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('connector1-name'))]",
            "apiVersion": "2021-03-01-preview",
            "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
            "kind": "GenericUI",
            "properties": {
                "connectorUiConfig": {
                    "title": "Azure Sentinel Continuous Threat Monitoring for SAP",
                    "publisher": "Microsoft",
                    "descriptionMarkdown": "The Azure Sentinel SAP application layer Logs connector is integral part of Azure Sentinel Continuous Threat Monitoring for SAP Solution. The connector ingests SAP logs to Azure Sentinel workspaces, raw data can be accessed by both built-in Continuous Threat Monitoring Solution content as well as by custom, user created content. SAP logs ingestion leverages SAP NetWeaver (RFC) in order to ingest ABAP 7.4+ application layer logs including Security Audit logs, Application logs, ChangeDocuments, Spool Logs, Change Request data, Table Changes and more.",
                    "graphQueriesTableName": "ABAPAuditLog_CL",
                    "graphQueries": [
                        {
                            "metricName": "Total data received",
                            "legend": "AIVectraDetect",
                            "baseQuery": "ABAPAuditLog_CL | summarize Users_count=dcount(User_s) by bin(TimeGenerated,1d)"
                        }
                    ],
                    "sampleQueries": [
                        {
                            "description": "Total data received",
                            "query": "ABAPAuditLog_CL | summarize Users_count=dcount(User_s) by bin(TimeGenerated,1d)"
                        }
                    ],
                    "dataTypes": [
                        {
                            "name": "ABAPAuditLog_CL",
                            "lastDataReceivedQuery": "ABAPAuditLog_CL | summarize Time = max(TimeGenerated) | where isnotempty(Time)"
                        }
                    ],
                    "connectivityCriterias": [
                        {
                            "type": "IsConnectedQuery",
                            "value": [
                                "ABAPAuditLog_CL | summarize LastLogReceived = max(TimeGenerated) | project IsConnected = LastLogReceived > ago(30d)"
                            ]
                        }
                    ],
                    "availability": {
                        "status": 1,
                        "isPreview": true
                    },
                    "permissions": {
                        "customs": [
                            {
                                "name": "Documentation",
                                "description": "Complete [documentation](https://github.com/Azure/AzureSentinel4SAP) including on-premise coverage"
                            },
                            {
                                "name": "Infrastructure prerequisites",
                                "description": " \n1.    Azure Ubuntu Virtual Machine with system managed identity \n2.  Azure Key Vault with write-read access policy assigned to the virtual machine identity."
                            },
                            {
                                "name": "SAP basis prerequisites",
                                "description": "\n1.  SAP system 7.5 SP13 and above. Lower versions are supported with notes and/or limitations please refer to the [documentation](https://github.com/Azure/AzureSentinel4SAP). \n2.    SAP ABAP connector user and password \n3.  Apply [authorization profile](/github.com/Azure/AzureSentinel4SAP/blob/main/template/sample%20authorization%20profile.txt). Or use the [Sample Authorizations Role CR / Transport form](https://github.com/Azure/AzureSentinel4SAP/tree/main/CR) \n4.   Deploy the [ALL logs CR (single CR) on SAP (STMS)](https://github.com/Azure/AzureSentinel4SAP/tree/main/CR)"
                            }
                        ]
                    },
                    "instructionSteps": [
                        {
                            "title": "Installation\n"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Insights/workbooks",
            "name": "[parameters('workbook1-id')]",
            "location": "[parameters('workspace-location')]",
            "kind": "shared",
            "apiVersion": "2020-02-12",
            "properties": {
                "displayName": "[concat('Preview - ',parameters('workbook1-name'), ' - ', parameters('formattedTimeNow'))]",
                "serializedData": "{\n    \"version\": \"Notebook/1.0\",\n    \"items\": [\n        {\n            \"type\": 11,\n            \"content\": {\n                \"version\": \"LinkItem/1.0\",\n                \"style\": \"tabs\",\n                \"links\": [\n                    {\n                        \"id\": \"dfdb272b-163e-40b2-a9e0-79cb7209468a\",\n                        \"cellValue\": \"workbook-param\",\n                        \"linkTarget\": \"parameter\",\n                        \"linkLabel\": \"Health Monitoring\",\n                        \"subTarget\": \"general\",\n                        \"preText\": \"General\",\n                        \"style\": \"link\"\n                    },\n                    {\n                        \"id\": \"b56a490a-7680-48c7-a50c-9404037f13f9\",\n                        \"cellValue\": \"workbook-param\",\n                        \"linkTarget\": \"parameter\",\n                        \"linkLabel\": \"Events\",\n                        \"subTarget\": \"alert\",\n                        \"style\": \"link\"\n                    },\n                    {\n                        \"id\": \"f32c10c4-5776-4dfd-8db0-6bc879e99f1c\",\n                        \"cellValue\": \"workbook-param\",\n                        \"linkTarget\": \"parameter\",\n                        \"linkLabel\": \"Authentication & Authorization\",\n                        \"subTarget\": \"events\",\n                        \"style\": \"link\"\n                    },\n                    {\n                        \"id\": \"76fa7104-87c5-474b-a687-9f9012e591dc\",\n                        \"cellValue\": \"workbook-param\",\n                        \"linkTarget\": \"parameter\",\n                        \"linkLabel\": \"Alerts\",\n                        \"subTarget\": \"alerts\",\n                        \"style\": \"link\"\n                    }\n                ]\n            },\n            \"name\": \"links\"\n        },\n        {\n            \"type\": 9,\n            \"content\": {\n                \"version\": \"KqlParameterItem/1.0\",\n                \"parameters\": [\n                    {\n                        \"id\": \"82aad988-7880-4b18-9fa5-2e7260ce3c2d\",\n                        \"version\": \"KqlParameterItem/1.0\",\n                        \"name\": \"TimeSelect\",\n                        \"type\": 4,\n                        \"typeSettings\": {\n                            \"selectableValues\": [\n                                {\n                                    \"durationMs\": 300000\n                                },\n                                {\n                                    \"durationMs\": 900000\n                                },\n                                {\n                                    \"durationMs\": 1800000\n                                },\n                                {\n                                    \"durationMs\": 3600000\n                                },\n                                {\n                                    \"durationMs\": 14400000\n                                },\n                                {\n                                    \"durationMs\": 43200000\n                                },\n                                {\n                                    \"durationMs\": 86400000\n                                },\n                                {\n                                    \"durationMs\": 172800000\n                                },\n                                {\n                                    \"durationMs\": 259200000\n                                },\n                                {\n                                    \"durationMs\": 604800000\n                                },\n                                {\n                                    \"durationMs\": 1209600000\n                                },\n                                {\n                                    \"durationMs\": 2419200000\n                                },\n                                {\n                                    \"durationMs\": 2592000000\n                                },\n                                {\n                                    \"durationMs\": 5184000000\n                                },\n                                {\n                                    \"durationMs\": 7776000000\n                                }\n                            ],\n                            \"allowCustom\": true\n                        },\n                        \"timeContext\": {\n                            \"durationMs\": 2592000000\n                        },\n                        \"value\": {\n                            \"durationMs\": 7776000000\n                        },\n                        \"label\": \"Time range\"\n                    },\n                    {\n                        \"id\": \"47f7490d-edb3-4ad3-98fa-1cfd97c8782d\",\n                        \"version\": \"KqlParameterItem/1.0\",\n                        \"name\": \"Systems\",\n                        \"label\": \"System\",\n                        \"type\": 2,\n                        \"isRequired\": true,\n                        \"multiSelect\": true,\n                        \"quote\": \"'\",\n                        \"delimiter\": \",\",\n                        \"query\": \"ABAPAuditLog_CL | summarize  by  SystemID_s \",\n                        \"value\": [\n                            \"value::all\"\n                        ],\n                        \"typeSettings\": {\n                            \"additionalResourceOptions\": [\n                                \"value::all\"\n                            ],\n                            \"selectAllValue\": \"*\"\n                        },\n                        \"timeContext\": {\n                            \"durationMs\": 7776000000\n                        },\n                        \"timeContextFromParameter\": \"TimeSelect\",\n                        \"queryType\": 0,\n                        \"resourceType\": \"microsoft.operationalinsights/workspaces\"\n                    }\n                ],\n                \"style\": \"above\",\n                \"queryType\": 0,\n                \"resourceType\": \"microsoft.operationalinsights/workspaces\"\n            },\n            \"name\": \"parameters - 8\"\n        },\n        {\n            \"type\": 12,\n            \"content\": {\n                \"version\": \"NotebookGroup/1.0\",\n                \"groupType\": \"editable\",\n                \"items\": [\n                    {\n                        \"type\": 1,\n                        \"content\": {\n                            \"json\": \"<tr><td><h1><B>Events Severity</b></h1>\"\n                        },\n                        \"conditionalVisibility\": {\n                            \"parameterName\": \"workbook-param\",\n                            \"comparison\": \"isEqualTo\",\n                            \"value\": \"alert\"\n                        },\n                        \"name\": \"text - 0\"\n                    },\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"//ABAPAuditLog_CL |  where (MessageID_s  =='AUD') and (SystemID_s in ({Systems}) or  '*' in ({Systems}))  | summarize count() by TimeGenerated,  MessageID_s,User_s, MessageText_s\\r\\ndatatable (Count:long, status:string, status_count:long) [0,\\\"Low\\\",1, 0,\\\"Medium\\\",2, 0,\\\"High\\\",3, ]\\r\\n|union\\r\\n(\\r\\nABAPAuditLog_CL\\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where SystemID_s in ({Systems}) or  '*' in ({Systems}) \\r\\n| where AlertSeverityText_s <> ''\\r\\n//| summarize count() by AlertSeverityText_s\\r\\n| extend status = case(AlertSeverityText_s==\\\"High\\\", \\\"High\\\",\\r\\n                        AlertSeverityText_s==\\\"Medium\\\", \\\"Medium\\\",\\r\\n                        AlertSeverityText_s==\\\"Low\\\", \\\"Low\\\",\\r\\n                        \\\"True\\\")\\r\\n| where status != \\\"True\\\"\\r\\n| extend status_count = case(status==\\\"Critical\\\", 4, status==\\\"High\\\", 3, status==\\\"Medium\\\", 2, 1)\\r\\n| summarize Count = count() by status, status_count\\r\\n)\\r\\n| summarize Count=sum(Count) by status, status_count\\r\\n| sort by status_count asc\\r\\n\",\n                            \"size\": 4,\n                            \"title\": \"Event Severity \",\n                            \"exportFieldName\": \"status\",\n                            \"exportParameterName\": \"status\",\n                            \"exportDefaultValue\": \"Low\",\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                            \"visualization\": \"tiles\",\n                            \"tileSettings\": {\n                                \"titleContent\": {\n                                    \"columnMatch\": \"status\",\n                                    \"formatter\": 18,\n                                    \"formatOptions\": {\n                                        \"thresholdsOptions\": \"colors\",\n                                        \"thresholdsGrid\": [\n                                            {\n                                                \"operator\": \"==\",\n                                                \"thresholdValue\": \"Low\",\n                                                \"representation\": \"green\",\n                                                \"text\": \"{0}{1}\"\n                                            },\n                                            {\n                                                \"operator\": \"==\",\n                                                \"thresholdValue\": \"Medium\",\n                                                \"representation\": \"orange\",\n                                                \"text\": \"{0}{1}\"\n                                            },\n                                            {\n                                                \"operator\": \"==\",\n                                                \"thresholdValue\": \"High\",\n                                                \"representation\": \"red\",\n                                                \"text\": \"{0}{1}\"\n                                            },\n                                            {\n                                                \"operator\": \"Default\",\n                                                \"thresholdValue\": null,\n                                                \"representation\": \"blue\",\n                                                \"text\": \"{0}{1}\"\n                                            }\n                                        ]\n                                    }\n                                },\n                                \"leftContent\": {\n                                    \"columnMatch\": \"Count\",\n                                    \"formatter\": 12,\n                                    \"formatOptions\": {\n                                        \"palette\": \"none\"\n                                    },\n                                    \"numberFormat\": {\n                                        \"unit\": 17,\n                                        \"options\": {\n                                            \"style\": \"decimal\",\n                                            \"maximumFractionDigits\": 2,\n                                            \"maximumSignificantDigits\": 3\n                                        }\n                                    }\n                                },\n                                \"showBorder\": true\n                            }\n                        },\n                        \"customWidth\": \"50\",\n                        \"name\": \"query - 11\"\n                    },\n                    {\n                        \"type\": 9,\n                        \"content\": {\n                            \"version\": \"KqlParameterItem/1.0\",\n                            \"parameters\": [\n                                {\n                                    \"id\": \"a4df2a30-4ee5-4ad5-acb7-beded5abb787\",\n                                    \"version\": \"KqlParameterItem/1.0\",\n                                    \"name\": \"User\",\n                                    \"type\": 1,\n                                    \"value\": \"OR\",\n                                    \"timeContext\": {\n                                        \"durationMs\": 86400000\n                                    }\n                                }\n                            ],\n                            \"style\": \"pills\",\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\"\n                        },\n                        \"customWidth\": \"50\",\n                        \"name\": \"parameters - 7\",\n                        \"styleSettings\": {\n                            \"margin\": \"50px\",\n                            \"padding\": \"30px\"\n                        }\n                    },\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"\\r\\nABAPAuditLog_CL \\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where SystemID_s in ({Systems}) or  '*' in ({Systems}) \\r\\n| where AlertSeverityText_s <> ''\\r\\n| summarize count() by AlertSeverityText_s\\r\\n\",\n                            \"size\": 0,\n                            \"title\": \"Event Severity Pie\",\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                            \"visualization\": \"piechart\",\n                            \"chartSettings\": {\n                                \"createOtherGroup\": null,\n                                \"seriesLabelSettings\": [\n                                    {\n                                        \"seriesName\": \"Low\",\n                                        \"label\": \"Low\",\n                                        \"color\": \"green\"\n                                    },\n                                    {\n                                        \"seriesName\": \"Medium\",\n                                        \"label\": \"Medium\",\n                                        \"color\": \"orange\"\n                                    },\n                                    {\n                                        \"seriesName\": \"High\",\n                                        \"label\": \"High\",\n                                        \"color\": \"redBright\"\n                                    }\n                                ]\n                            }\n                        },\n                        \"customWidth\": \"40\",\n                        \"name\": \"query - 12\",\n                        \"styleSettings\": {\n                            \"margin\": \"0\",\n                            \"maxWidth\": \"100%\"\n                        }\n                    },\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"ABAPAuditLog_CL \\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where SystemID_s in ({Systems}) or  '*' in ({Systems}) \\r\\n| where AlertSeverityText_s <> ''\\r\\n| where AlertSeverityText_s=='{status}'\\r\\n| where User_s=='{User}'\\r\\n| project TimeGenerated, MessageID=MessageID_s, Severity=AlertSeverityText_s, Message=MessageText_s\\r\\n| order by TimeGenerated desc\\r\\n| take 100\",\n                            \"size\": 1,\n                            \"title\": \"All events with {status} severity by user {User}\",\n                            \"noDataMessage\": \"Please select alert status\",\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                            \"visualization\": \"table\",\n                            \"gridSettings\": {\n                                \"formatters\": [\n                                    {\n                                        \"columnMatch\": \"Severity\",\n                                        \"formatter\": 18,\n                                        \"formatOptions\": {\n                                            \"thresholdsOptions\": \"colors\",\n                                            \"thresholdsGrid\": [\n                                                {\n                                                    \"operator\": \"==\",\n                                                    \"thresholdValue\": \"High\",\n                                                    \"representation\": \"red\",\n                                                    \"text\": \"{0}{1}\"\n                                                },\n                                                {\n                                                    \"operator\": \"==\",\n                                                    \"thresholdValue\": \"Medium\",\n                                                    \"representation\": \"orange\",\n                                                    \"text\": \"{0}{1}\"\n                                                },\n                                                {\n                                                    \"operator\": \"==\",\n                                                    \"thresholdValue\": \"Low\",\n                                                    \"representation\": \"green\",\n                                                    \"text\": \"{0}{1}\"\n                                                },\n                                                {\n                                                    \"operator\": \"Default\",\n                                                    \"thresholdValue\": null,\n                                                    \"representation\": \"blue\",\n                                                    \"text\": \"{0}{1}\"\n                                                }\n                                            ]\n                                        }\n                                    },\n                                    {\n                                        \"columnMatch\": \"Tenant ID\",\n                                        \"formatter\": 1\n                                    }\n                                ]\n                            }\n                        },\n                        \"customWidth\": \"50\",\n                        \"name\": \"query - 12\",\n                        \"styleSettings\": {\n                            \"margin\": \"0px\",\n                            \"padding\": \"0px\"\n                        }\n                    },\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"ABAPAuditLog_CL \\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where SystemID_s in ({Systems}) or  '*' in ({Systems}) \\r\\n| where AlertSeverityText_s <> ''\\r\\n| summarize Alerts = count() by bin(TimeGenerated, 1d)\\r\\n\\r\\n\",\n                            \"size\": 0,\n                            \"aggregation\": 3,\n                            \"title\": \"Events Over Time\",\n                            \"color\": \"blueDark\",\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                            \"visualization\": \"linechart\",\n                            \"chartSettings\": {\n                                \"showDataPoints\": true\n                            }\n                        },\n                        \"name\": \"query - 3\"\n                    },\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"ABAPAuditLog_CL\\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems})) \\r\\n| where AlertSeverityText_s != \\\"Low\\\"\\r\\n| summarize count() by bin(TimeGenerated, 1h), AlertSeverityText_s\",\n                            \"size\": 0,\n                            \"aggregation\": 3,\n                            \"title\": \"Medium and High Severity Events by Severity Over Time\",\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                            \"visualization\": \"timechart\",\n                            \"chartSettings\": {\n                                \"seriesLabelSettings\": [\n                                    {\n                                        \"seriesName\": \"Low\",\n                                        \"color\": \"green\"\n                                    },\n                                    {\n                                        \"seriesName\": \"Medium\",\n                                        \"color\": \"orange\"\n                                    },\n                                    {\n                                        \"seriesName\": \"High\",\n                                        \"color\": \"red\"\n                                    }\n                                ]\n                            }\n                        },\n                        \"name\": \"query - 6\"\n                    }\n                ]\n            },\n            \"conditionalVisibility\": {\n                \"parameterName\": \"workbook-param\",\n                \"comparison\": \"isEqualTo\",\n                \"value\": \"alert\"\n            },\n            \"name\": \"Alerts\"\n        },\n        {\n            \"type\": 12,\n            \"content\": {\n                \"version\": \"NotebookGroup/1.0\",\n                \"groupType\": \"editable\",\n                \"items\": [\n                    {\n                        \"type\": 1,\n                        \"content\": {\n                            \"json\": \"<tr><td><h1><B>Authentication & Authorization</b></h1>\"\n                        },\n                        \"name\": \"text - 4\"\n                    },\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"ABAPAuditLog_CL \\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where MessageID_s in('AU1','AU2','AUC') and (SystemID_s in ({Systems}) or  '*' in ({Systems})) \\r\\n| summarize  count() by bin(TimeGenerated,1d), MessageText_s\",\n                            \"size\": 0,\n                            \"showAnalytics\": true,\n                            \"title\": \"Logins and Logouts Over Time\",\n                            \"timeBrushParameterName\": \"BrushLogins\",\n                            \"exportToExcelOptions\": \"all\",\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                            \"visualization\": \"barchart\"\n                        },\n                        \"customWidth\": \"100\",\n                        \"name\": \"Logins and Logouts Over Time\",\n                        \"styleSettings\": {\n                            \"maxWidth\": \"100%\"\n                        }\n                    },\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"ABAPAuditLog_CL \\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\\r\\n| project TimeGenerated, Severity=AlertSeverityText_s, SystemID_s, MessageText_s, Type\\r\\n| order by TimeGenerated desc\\r\\n| take 100\",\n                            \"size\": 0,\n                            \"title\": \"Login & Logouts - log view\",\n                            \"showExportToExcel\": true,\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                            \"gridSettings\": {\n                                \"formatters\": [\n                                    {\n                                        \"columnMatch\": \"Severity\",\n                                        \"formatter\": 18,\n                                        \"formatOptions\": {\n                                            \"thresholdsOptions\": \"colors\",\n                                            \"thresholdsGrid\": [\n                                                {\n                                                    \"operator\": \"Default\",\n                                                    \"thresholdValue\": null,\n                                                    \"representation\": \"green\",\n                                                    \"text\": \"{0}{1}\"\n                                                }\n                                            ]\n                                        }\n                                    },\n                                    {\n                                        \"columnMatch\": \"AlertSeverityText_s\",\n                                        \"formatter\": 18,\n                                        \"formatOptions\": {\n                                            \"thresholdsOptions\": \"colors\",\n                                            \"thresholdsGrid\": [\n                                                {\n                                                    \"operator\": \"Default\",\n                                                    \"thresholdValue\": null,\n                                                    \"representation\": \"green\",\n                                                    \"text\": \"{0}{1}\"\n                                                }\n                                            ]\n                                        }\n                                    }\n                                ]\n                            }\n                        },\n                        \"customWidth\": \"100\",\n                        \"name\": \"Login & Logouts details\"\n                    },\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"ABAPAuditLog_CL \\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (MessageID_s  =='AUE')  and (SystemID_s in ({Systems}) or  '*' in ({Systems})) \\r\\n| summarize count() by bin(TimeGenerated,1d), MessageText_s\",\n                            \"size\": 0,\n                            \"title\": \"Audit Configuration Changes\",\n                            \"color\": \"orange\",\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                            \"visualization\": \"linechart\",\n                            \"tileSettings\": {\n                                \"showBorder\": false,\n                                \"titleContent\": {\n                                    \"columnMatch\": \"MessageText_s\",\n                                    \"formatter\": 1\n                                },\n                                \"leftContent\": {\n                                    \"columnMatch\": \"count_\",\n                                    \"formatter\": 12,\n                                    \"formatOptions\": {\n                                        \"palette\": \"auto\"\n                                    },\n                                    \"numberFormat\": {\n                                        \"unit\": 17,\n                                        \"options\": {\n                                            \"maximumSignificantDigits\": 3,\n                                            \"maximumFractionDigits\": 2\n                                        }\n                                    }\n                                }\n                            },\n                            \"chartSettings\": {\n                                \"showDataPoints\": true\n                            }\n                        },\n                        \"customWidth\": \"100\",\n                        \"name\": \"Audit Configuration Changes\"\n                    },\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"ABAPAuditLog_CL \\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (MessageID_s  =='AUD') or (MessageID_s == 'AUB') or (MessageID_s == 'AU7') or (MessageID_s == 'AUD8') and (SystemID_s in ({Systems}) or  '*' in ({Systems}))  | summarize count() by bin(TimeGenerated,1d),  MessageID_s,User_s, MessageText_s\",\n                            \"size\": 0,\n                            \"showAnalytics\": true,\n                            \"title\": \"Suspicious user changes\",\n                            \"showExportToExcel\": true,\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                            \"visualization\": \"barchart\",\n                            \"graphSettings\": {\n                                \"type\": 0\n                            },\n                            \"chartSettings\": {\n                                \"seriesLabelSettings\": [\n                                    {\n                                        \"seriesName\": \"AU7\",\n                                        \"label\": \"User Created\"\n                                    },\n                                    {\n                                        \"seriesName\": \"AUD\",\n                                        \"label\": \"User Master Record changed\"\n                                    },\n                                    {\n                                        \"seriesName\": \"AUB\",\n                                        \"label\": \"Authorizations Changed\"\n                                    },\n                                    {\n                                        \"seriesName\": \"AU8\",\n                                        \"label\": \"User Deleted\"\n                                    }\n                                ]\n                            },\n                            \"mapSettings\": {\n                                \"locInfo\": \"LatLong\",\n                                \"sizeSettings\": \"count_\",\n                                \"sizeAggregation\": \"Sum\",\n                                \"legendMetric\": \"count_\",\n                                \"legendAggregation\": \"Sum\",\n                                \"itemColorSettings\": {\n                                    \"type\": \"heatmap\",\n                                    \"colorAggregation\": \"Sum\",\n                                    \"nodeColorField\": \"count_\",\n                                    \"heatmapPalette\": \"greenRed\"\n                                }\n                            }\n                        },\n                        \"customWidth\": \"50\",\n                        \"name\": \"Suspicious user changes\",\n                        \"styleSettings\": {\n                            \"maxWidth\": \"50%\"\n                        }\n                    },\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"ABAPAuditLog_CL \\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (MessageID_s  =='AUD') or (MessageID_s == 'AUB') or (MessageID_s == 'AU7') or (MessageID_s == 'AUD8') and (SystemID_s in ({Systems}) or  '*' in ({Systems}))  | summarize count() by bin(TimeGenerated,1d),  MessageID_s,User_s, MessageText_s\",\n                            \"size\": 0,\n                            \"title\": \"Suspicious user changes table\",\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                            \"visualization\": \"table\",\n                            \"gridSettings\": {\n                                \"formatters\": [\n                                    {\n                                        \"columnMatch\": \"User_s\",\n                                        \"formatter\": 18,\n                                        \"formatOptions\": {\n                                            \"thresholdsOptions\": \"icons\",\n                                            \"thresholdsGrid\": [\n                                                {\n                                                    \"operator\": \"Default\",\n                                                    \"thresholdValue\": null,\n                                                    \"representation\": \"info\",\n                                                    \"text\": \"{0}{1}\"\n                                                }\n                                            ]\n                                        }\n                                    }\n                                ]\n                            }\n                        },\n                        \"customWidth\": \"50\",\n                        \"name\": \"query - 6\"\n                    },\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"ABAPAuditLog_CL \\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where  (MessageID_s  =='BU2') and (SystemID_s in ({Systems}) or  '*' in ({Systems}))\\r\\n| summarize Changes = count() by bin(TimeGenerated,1d)\",\n                            \"size\": 0,\n                            \"aggregation\": 3,\n                            \"title\": \"Password Changes\",\n                            \"color\": \"redBright\",\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                            \"visualization\": \"linechart\"\n                        },\n                        \"customWidth\": \"50\",\n                        \"name\": \"Password Changes\"\n                    },\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"ABAPAuditLog_CL \\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where  (MessageID_s  =='BU2') and (SystemID_s in ({Systems}) or  '*' in ({Systems}))\\r\\n| project TenantId,TimeGenerated, MessageText_s, User_s\",\n                            \"size\": 0,\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\"\n                        },\n                        \"customWidth\": \"50\",\n                        \"name\": \"query - 7\"\n                    }\n                ]\n            },\n            \"conditionalVisibility\": {\n                \"parameterName\": \"workbook-param\",\n                \"comparison\": \"isEqualTo\",\n                \"value\": \"events\"\n            },\n            \"name\": \"Events\"\n        },\n        {\n            \"type\": 12,\n            \"content\": {\n                \"version\": \"NotebookGroup/1.0\",\n                \"groupType\": \"editable\",\n                \"items\": [\n                    {\n                        \"type\": 1,\n                        \"content\": {\n                            \"json\": \"<tr><td><h1><B>Health Overview</b></h1>\"\n                        },\n                        \"name\": \"text - 1\"\n                    },\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"ABAPAuditLog_CL\\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\\r\\n| summarize Number_Of_Users = dcount(User_s) by bin(TimeGenerated,1d)\",\n                            \"size\": 0,\n                            \"title\": \"Users login over time\",\n                            \"color\": \"turquoise\",\n                            \"timeContext\": {\n                                \"durationMs\": 0\n                            },\n                            \"timeContextFromParameter\": \"TimeSelect\",\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                            \"visualization\": \"linechart\",\n                            \"chartSettings\": {\n                                \"showDataPoints\": true\n                            }\n                        },\n                        \"name\": \"query - 2\"\n                    },\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"ABAPAuditLog_CL \\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems})) \\r\\n//| take 1\\r\\n| summarize count() by SystemID_s//, MessageClass_s, MessageID_s, Type\\r\\n//| summarize dcount(User_s) by bin(TimeGenerated,1d)\",\n                            \"size\": 0,\n                            \"title\": \"Number of events ingested by system\",\n                            \"timeContext\": {\n                                \"durationMs\": 0\n                            },\n                            \"timeContextFromParameter\": \"TimeSelect\",\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                            \"visualization\": \"piechart\"\n                        },\n                        \"name\": \"query - 3\"\n                    },\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"ABAPAuditLog_CL \\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems})) \\r\\n//| take 1\\r\\n| summarize count() by MessageClass_s//, MessageID_s, Type\\r\\n//| summarize dcount(User_s) by bin(TimeGenerated,1d)\",\n                            \"size\": 0,\n                            \"title\": \"Message class count\",\n                            \"timeContext\": {\n                                \"durationMs\": 0\n                            },\n                            \"timeContextFromParameter\": \"TimeSelect\",\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                            \"visualization\": \"barchart\"\n                        },\n                        \"name\": \"query - 5\"\n                    },\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"ABAPAuditLog_CL \\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems})) \\r\\n//| take 1\\r\\n| summarize count() by MessageID_s//, Type\\r\\n//| summarize dcount(User_s) by bin(TimeGenerated,1d)\",\n                            \"size\": 0,\n                            \"title\": \"Message IDs count\",\n                            \"timeContext\": {\n                                \"durationMs\": 0\n                            },\n                            \"timeContextFromParameter\": \"TimeSelect\",\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                            \"visualization\": \"barchart\"\n                        },\n                        \"name\": \"query - 5\"\n                    },\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"ABAPAuditLog_CL\\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems})) \\r\\n| where ABAPProgramName_s != \\\"SAPMSSY1\\\" and ABAPProgramName_s != \\\"\\\"\\r\\n| summarize count() by ABAPProgramName_s\",\n                            \"size\": 0,\n                            \"title\": \"ABAP programs executed\",\n                            \"timeContext\": {\n                                \"durationMs\": 604800000\n                            },\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                            \"visualization\": \"piechart\",\n                            \"chartSettings\": {\n                                \"createOtherGroup\": 12\n                            }\n                        },\n                        \"name\": \"query - 5\"\n                    }\n                ]\n            },\n            \"conditionalVisibility\": {\n                \"parameterName\": \"workbook-param\",\n                \"comparison\": \"isEqualTo\",\n                \"value\": \"general\"\n            },\n            \"name\": \"group - 4\"\n        },\n        {\n            \"type\": 12,\n            \"content\": {\n                \"version\": \"NotebookGroup/1.0\",\n                \"groupType\": \"editable\",\n                \"items\": [\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"// Define variables\\r\\n// Audit Log Classes - Dialog Logon Successful, RFC Logon Successful\\r\\nlet AuditClasses = dynamic(['AU1','AU5']);\\r\\n// Dialog / CPIC / RFC Int / RFC Ext / SRFC / User Switch / HTTP / Restore Session / API Call\\r\\nlet DialogLogonTypes = dynamic(['A', 'C', 'F', 'R', 'S', 'U', 'H', 'u', ' ']);\\r\\nlet excUsers = _GetWatchlist('SAP - Excluded Users'); // Users that should be removed from query\\r\\nlet fixedExcUsers = datatable(User:string)\\r\\n// Maintain these if WatchList is not available    \\r\\n    [\\\"SYSWF\\\"]\\r\\n; \\r\\nlet UnitedExcUsers =\\r\\ntoscalar(union excUsers, fixedExcUsers\\r\\n| summarize Users = make_set(User));\\r\\nlet IPThreshold = 1;\\r\\n// Query Logic\\r\\nABAPAuditLog_CL \\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems})) \\r\\n| where MessageID_s in (AuditClasses)\\r\\n| where Variable1_s in (DialogLogonTypes)\\r\\n| where User_s !in (UnitedExcUsers)\\r\\n| summarize CountIP = dcount(TerminalIPv6_s), IPs = make_set(TerminalIPv6_s), StartTime = min(TimeGenerated), EndTime = max(TimeGenerated) by SystemID_s, ClientID_s, User_s, Email_s\\r\\n| where CountIP > IPThreshold // Count of IP logins from the user is higher than threshold\\r\\n| mv-expand IPs to typeof(string ) // Show for each IP\\r\\n| project SystemID_s, ClientID_s, User_s,\\r\\n    AccountCustomEntity = Email_s, IPCustomEntity = IPs, StartTime, EndTime\\r\\n| order by StartTime, EndTime desc\",\n                            \"size\": 0,\n                            \"title\": \"Multiple Logons by User\",\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                            \"gridSettings\": {\n                                \"formatters\": [\n                                    {\n                                        \"columnMatch\": \"User_s\",\n                                        \"formatter\": 18,\n                                        \"formatOptions\": {\n                                            \"thresholdsOptions\": \"icons\",\n                                            \"thresholdsGrid\": [\n                                                {\n                                                    \"operator\": \"Default\",\n                                                    \"thresholdValue\": null,\n                                                    \"representation\": \"warning\",\n                                                    \"text\": \"{0}{1}\"\n                                                }\n                                            ]\n                                        }\n                                    }\n                                ]\n                            }\n                        },\n                        \"name\": \"query - 1\"\n                    },\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"// Define variables\\r\\nlet AuditClasses = dynamic(['AU1', 'AU5']); // Audit Log Classes - Dialog Logon Successful, RFC Logon Successful\\r\\nlet DialogLogonTypes = dynamic(['A', 'C', 'F', 'R', 'S', 'U', 'H', 'u', ' ']); // Dialog / CPIC / RFC Int / RFC Ext / SRFC / User Switch / HTTP / Restore Session / API Call\\r\\nlet excNetworks = _GetWatchlist('SAP - Excluded Networks'); // Networks that should be removed from query\\r\\nlet fixedNetworks =\\r\\ndatatable(Network:string)\\r\\n// Maintain these if WatchList is not available    \\r\\n    [\\\"111.68.128.0/1\\\", \\\"123.68.128.0/1\\\"]\\r\\n; \\r\\nlet UnitedNetworks =\\r\\ntoscalar(union excNetworks, fixedNetworks\\r\\n| summarize Networks = make_set(Network));\\r\\nlet UsersperIP = 1;\\r\\n// Query logic\\r\\nABAPAuditLog_CL \\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems})) \\r\\n| where MessageID_s in (AuditClasses)\\r\\n| where Variable1_s in (DialogLogonTypes)\\r\\n| where TerminalIPv6_s !in (UnitedNetworks)\\r\\n| extend UserandEmail = pack(\\\"ID\\\", User_s, \\\"Email\\\", Email_s)\\r\\n| summarize CountUsers = dcount(strcat(User_s, \\\"_&_\\\", Email_s)), Users = make_set(UserandEmail), StartTime = min(TimeGenerated), EndTime = max(TimeGenerated) \\r\\n    by SystemID_s, ClientID_s, TerminalIPv6_s\\r\\n| where CountUsers > UsersperIP\\r\\n| mv-expand Users \\r\\n| evaluate bag_unpack(Users, \\\"User_\\\")\\r\\n| project SystemID_s, ClientID_s, column_ifexists(\\\"User_ID\\\", \\\"\\\"), AccountCustomEntity = column_ifexists(\\\"User_Email\\\", \\\"\\\"), IPCustomEntity = TerminalIPv6_s, StartTime, EndTime\\r\\n| order by StartTime, EndTime desc\\r\\n\",\n                            \"size\": 0,\n                            \"title\": \"Multiple Logons by IP\",\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                            \"visualization\": \"table\",\n                            \"gridSettings\": {\n                                \"formatters\": [\n                                    {\n                                        \"columnMatch\": \"IPCustomEntity\",\n                                        \"formatter\": 18,\n                                        \"formatOptions\": {\n                                            \"thresholdsOptions\": \"icons\",\n                                            \"thresholdsGrid\": [\n                                                {\n                                                    \"operator\": \"Default\",\n                                                    \"thresholdValue\": null,\n                                                    \"representation\": \"warning\",\n                                                    \"text\": \"{0}{1}\"\n                                                }\n                                            ]\n                                        }\n                                    }\n                                ]\n                            }\n                        },\n                        \"name\": \"query - 6\"\n                    },\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"// Define variables\\r\\n// Audit Log Classes - Failed Logons / Password Check\\r\\nlet AuditClasses = dynamic(['AUO', 'AU2', 'AU6', 'BU1']);\\r\\nlet perIPLimit = 6;\\r\\n// Query logic\\r\\nABAPAuditLog_CL \\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems})) \\r\\n| where MessageID_s in (AuditClasses)\\r\\n| extend DetailsBy = pack(\\\"User\\\", User_s, \\\"Email\\\", Email_s, \\\"SystemID\\\", SystemID_s, \\\"ClientID\\\", ClientID_s)\\r\\n| summarize LoginbyIPAttempts = count(), Details = make_set(DetailsBy), StartTime = min(TimeGenerated), EndTime = max(TimeGenerated) \\r\\n    by TerminalIPv6_s\\r\\n// Check if number of login attempts per IP is higher than limit\\r\\n| where LoginbyIPAttempts > perIPLimit \\r\\n| mv-expand Details\\r\\n| evaluate bag_unpack(Details, \\\"Details_\\\")\\r\\n| project \\r\\n    StartTime, EndTime, IPCustomEntity = TerminalIPv6_s,\\r\\n    AccountCustomEntity = column_ifexists(\\\"Details_Email\\\", \\\"\\\"), column_ifexists(\\\"Details_User\\\", \\\"\\\"),\\r\\n    column_ifexists(\\\"Details_SystemID\\\", \\\"\\\"),\\r\\n    column_ifexists(\\\"Details_ClientID\\\", \\\"\\\")\\r\\n| summarize count() by Details_User\",\n                            \"size\": 0,\n                            \"title\": \"Brute force attacks by User\",\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                            \"visualization\": \"barchart\",\n                            \"chartSettings\": {\n                                \"xAxis\": \"Details_User\",\n                                \"yAxis\": [\n                                    \"count_\"\n                                ],\n                                \"ySettings\": {\n                                    \"numberFormatSettings\": {\n                                        \"unit\": 17,\n                                        \"options\": {\n                                            \"style\": \"decimal\",\n                                            \"useGrouping\": true\n                                        }\n                                    },\n                                    \"max\": 100\n                                }\n                            }\n                        },\n                        \"name\": \"query - 2\"\n                    },\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"let AuditClasses = dynamic(['AU1','AU5']); // Audit Log Classes - Dialog Logon Successful, RFC Logon Successful\\r\\n// Dialog / CPIC / RFC Int / RFC Ext / SRFC / User Switch / HTTP / Restore Session / API Call\\r\\nlet DialogLogonTypes = dynamic(['A', 'C', 'F', 'R', 'S', 'U', 'H', 'u', ' ']);\\r\\nlet Networks = _GetWatchlist('SAP - Networks'); \\r\\nlet fixedNetworks = datatable(Network: string)['111.68.128.0/17']; // Maintain these if watchlist is not available\\r\\nlet allNetworks = union Networks, fixedNetworks\\r\\n    | summarize by Network;\\r\\nABAPAuditLog_CL\\r\\n// Add audit classes\\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems})) \\r\\n| where MessageID_s in (AuditClasses)\\r\\n| where Variable1_s in (DialogLogonTypes) // Is a dialog logon type from the list\\r\\n| where isnotempty(TerminalIPv6_s) // There is a Ipv6 address\\r\\n| evaluate ipv4_lookup(allNetworks, TerminalIPv6_s, Network, return_unmatched = true)\\r\\n// Similar to regular lookup, by ipv4 address, unmatched is like left join\\r\\n| where isempty(Network) // Network is not familiar\\r\\n// Details\\r\\n| project TimeGenerated, SystemID_s, ClientID_s, User_s, TransactionCode_s, MessageText_s, AccountCustomEntity = Email_s, IPCustomEntity = TerminalIPv6_s, HostCustomEntity = Host_s\\r\\n| summarize count() by IPCustomEntity\",\n                            \"size\": 0,\n                            \"title\": \"Logins by unexpected networks\",\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                            \"visualization\": \"piechart\"\n                        },\n                        \"name\": \"query - 3\"\n                    },\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"// Define Variables\\r\\nlet Role = 'Production';\\r\\nlet AuditClasses = dynamic(['AU3']); // Audit Log Classes - Transaction Started\\r\\nlet allSystemRoles = dynamic(['Sandbox','Developement','QualityAssurance','Training','Production']); // Available System Roles\\r\\nlet allSystemUsage = dynamic (['ERP','CRM','BW','Solman','Gateway','Enterprise Portal']); // Available System Usages\\r\\n// Get Relevant Systems from WatchList\\r\\nlet systemID = _GetWatchlist('SAP - Systems');\\r\\nlet fixedSID = datatable(SystemID:string, SystemRole:string, SystemUsage:string)\\r\\n// Maintain these if WatchList is not available    \\r\\n    [\\\"S4H\\\",\\\"Production\\\",\\\"ERP\\\",\\r\\n    \\\"XXX\\\",\\\"Sandbox\\\",\\\"BW\\\"]\\r\\n; \\r\\n// Get Relevant Transaction Codes\\r\\nlet SensitiveTcode = _GetWatchlist('SAP - Sensitive Transactions');\\r\\nlet fixedTcode = datatable(TransactionCode:string)\\r\\n// Maintain these if WatchList is not available    \\r\\n    [\\\"RSAU_CONFIG\\\",\\\"RZ11\\\",\\\"SM19\\\"]\\r\\n; \\r\\nlet UnitedCodes = \\r\\n    union SensitiveTcode, fixedTcode\\r\\n    | summarize by TransactionCode;\\r\\nlet UnitedSystem =\\r\\nunion systemID, fixedSID\\r\\n| summarize by SystemID, SystemRole, SystemUsage\\r\\n| where SystemRole == Role; // Recommended  is Production only\\r\\n//| where SystemRole in (allSystemRoles); // Use this for all system roles\\r\\n// Query logic\\r\\nABAPAuditLog_CL \\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems})) \\r\\n| where MessageID_s in (AuditClasses)\\r\\n| where TransactionCode_s in (UnitedCodes)\\r\\n| project-rename SystemID = SystemID_s\\r\\n| lookup kind = inner (UnitedSystem) on SystemID\\r\\n| order by TimeGenerated asc\\r\\n| project TimeGenerated, SystemID, ClientID_s, User_s, TransactionCode_s, MessageText_s, MessageID_s, AccountCustomEntity = Email_s, IPCustomEntity = TerminalIPv6_s, HostCustomEntity = Host_s\\r\\n| summarize Number_Of_Transactions = count() by TransactionCode_s\",\n                            \"size\": 0,\n                            \"title\": \"Sensitive Transactions Executions\",\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                            \"visualization\": \"categoricalbar\"\n                        },\n                        \"name\": \"query - 4\"\n                    },\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"// Define Variables\\r\\nlet Role = \\\"Production\\\";\\r\\nlet AuditClasses = dynamic(['AUW']); // Audit Log Classes - Report Started\\r\\nlet allSystemRoles = dynamic(['Sandbox','Developement','QualityAssurance','Training','Production']); // Available System Roles\\r\\nlet allSystemUsage = dynamic (['ERP','CRM','BW','Solman','Gateway','Enterprise Portal']); // Available System Usages\\r\\n// Get Relevant Systems from WatchList\\r\\nlet systemID = _GetWatchlist('SAP - Systems');\\r\\nlet fixedSID = datatable(SystemID:string, SystemRole:string, SystemUsage:string)\\r\\n// Maintain these if WatchList is not available    \\r\\n    [\\\"S4H\\\",\\\"Production\\\",\\\"ERP\\\",\\r\\n    \\\"XXX\\\",\\\"Sandbox\\\",\\\"BW\\\"]\\r\\n; \\r\\n// Get Relevant ABAP Programs\\r\\nlet SensitiveABAPReports = _GetWatchlist('SAP - Sensitive ABAP Programs');\\r\\nlet fixedABAPReports = datatable(ABAPProgram:string)\\r\\n// Maintain these if WatchList is not available    \\r\\n    [\\\"RSPFLDOC\\\"]\\r\\n; \\r\\nlet UnionAbap = \\r\\n    union SensitiveABAPReports, fixedABAPReports\\r\\n    | summarize by ABAPProgram;\\r\\nlet UnitedSystem =\\r\\nunion systemID, fixedSID\\r\\n| summarize by SystemID, SystemRole, SystemUsage\\r\\n| where SystemRole == Role; // Reccommended is Production only\\r\\n//| where SystemRole in (allSystemRoles); // Use this for all system roles\\r\\n// Query logic\\r\\nABAPAuditLog_CL \\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems})) \\r\\n| where MessageID_s in (AuditClasses)\\r\\n| where ABAPProgramName_s in (UnionAbap)\\r\\n| project-rename SystemID = SystemID_s\\r\\n| lookup kind = inner (UnitedSystem) on SystemID\\r\\n| order by TimeGenerated asc\\r\\n| project TimeGenerated, SystemID, ClientID_s, User_s, ABAPProgramName_s, MessageText_s, TransactionCode_s, MessageID_s, AccountCustomEntity = Email_s, IPCustomEntity = TerminalIPv6_s, HostCustomEntity = Host_s\\r\\n| summarize Number_Of_Programs = count() by ABAPProgramName_s\",\n                            \"size\": 0,\n                            \"title\": \"Sensitive ABAP Programs Executions\",\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                            \"visualization\": \"categoricalbar\"\n                        },\n                        \"name\": \"query - 5\"\n                    },\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"// Define Variables\\r\\nlet Roles = 'PFCG';\\r\\nlet UsersRoles = 'AGR_USERS';\\r\\nlet Insert = \\\"I\\\";\\r\\nlet logsThreshold = 10; // 10 seconds\\r\\n// Audit Log Classes - Authorizations for user changed\\r\\nlet AuditClasses = dynamic(['AUB', 'AUD']); // Authorizations for user &A changed.\\r\\n// Maintain these if WatchList is not available\\r\\nlet SensitiveRoles =  _GetWatchlist('SAP - Sensitive Roles');\\r\\nlet fixedRoles = datatable(Role: string)['SAP_BC_BASIS_ADMIN', 'SAP_BC_AUTH_PROFILE_ADMIN'];\\r\\n// Maintain these if System doesn't have CR's\\r\\nlet fixedChangeDocs = datatable(User_s : string, ObjectClass_s : string, TableName_s : string, TypeofChange_Item_s : string ,\\r\\nChangedTableKey_s : string, ObjectID_s : string, TimeGenerated : datetime, ValueNew_s : string, SystemID_s : string)[];\\r\\nlet ChangeDocs = \\r\\nunion isfuzzy=true table(\\\"ABAPChangeDocsLog_CL\\\"), fixedChangeDocs;\\r\\nlet ChangeCheck =\\r\\nChangeDocs  \\r\\n| where ObjectClass_s == Roles // Roles\\r\\n    and TableName_s == UsersRoles // Users Roles\\r\\n    and TypeofChange_Item_s == Insert // Insert \\r\\n| extend UserAssigned = extract(@\\\"^.{1,33}\\\\s*?(.{1,12})\\\\s*?\\\\d{16}\\\", 1, ChangedTableKey_s)\\r\\n| extend Role = ObjectID_s;\\r\\nlet UnitedRoles =\\r\\ntoscalar(union fixedRoles, SensitiveRoles\\r\\n| summarize Roles = make_list(Role));\\r\\n// Query logic\\r\\nABAPAuditLog_CL \\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems})) \\r\\n| where MessageID_s in (AuditClasses)\\r\\n| summarize by TimeGenerated, TerminalIPv6_s, User_s, Host_s, Email_s\\r\\n| lookup kind = leftouter (ChangeCheck) on User_s\\r\\n| where Role in (UnitedRoles)\\r\\n| project-rename TimeGenAudit = TimeGenerated1\\r\\n| where abs(datetime_diff('second', TimeGenerated, TimeGenAudit)) <= logsThreshold\\r\\nor isnull(TimeGenAudit)\\r\\n| project \\r\\n    // Details\\r\\n    TimeGenerated, SystemID_s, ClientID_s, Role, User_s, UserAssigned\",\n                            \"size\": 1,\n                            \"title\": \"Sensitive Role Assignments\",\n                            \"exportFieldName\": \"User_s\",\n                            \"exportParameterName\": \"User\",\n                            \"exportDefaultValue\": \"SAP\",\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                            \"visualization\": \"table\",\n                            \"gridSettings\": {\n                                \"formatters\": [\n                                    {\n                                        \"columnMatch\": \"Role\",\n                                        \"formatter\": 18,\n                                        \"formatOptions\": {\n                                            \"thresholdsOptions\": \"icons\",\n                                            \"thresholdsGrid\": [\n                                                {\n                                                    \"operator\": \"Default\",\n                                                    \"thresholdValue\": null,\n                                                    \"representation\": \"warning\",\n                                                    \"text\": \"{0}{1}\"\n                                                }\n                                            ]\n                                        }\n                                    }\n                                ]\n                            }\n                        },\n                        \"name\": \"query - 6\"\n                    },\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"ABAPAuditLog_CL \\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems})) \\r\\n| where User_s=='{User}'\\r\\n| order by TimeGenerated desc\\r\\n| project TimeGenerated, SystemID_s, ClientID_s, MessageID_s ,MessageClass_s, MessageText_s\\r\\n| take 20\",\n                            \"size\": 1,\n                            \"title\": \"Current Activity of Suspicious User: {User}\",\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\"\n                        },\n                        \"name\": \"query - 7\"\n                    }\n                ]\n            },\n            \"conditionalVisibility\": {\n                \"parameterName\": \"workbook-param\",\n                \"comparison\": \"isEqualTo\",\n                \"value\": \"alerts\"\n            },\n            \"name\": \"Alertss\"\n        }\n    ],\n    \"fallbackResourceIds\": [\n        \"/subscriptions/991af9ab-0e0d-4ebf-ab53-6c448bfecfff/resourcegroups/iprosis-s4h-12-05/providers/microsoft.operationalinsights/workspaces/or-log-analytics-workspace\"\n    ],\n    \"fromTemplateId\": \"sentinel-UserWorkbook\",\n    \"$schema\": \"https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json\"\n}",
                "version": "1.0",
                "sourceId": "[variables('_workbook-source')]",
                "category": "sentinel"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic1-id'))]",
            "apiVersion": "2020-01-01",
            "kind": "Scheduled",
            "location": "[parameters('workspace-location')]",
            "properties": {
                "description": "Idenitifes changes for configuration in Securiy Audit Log\n\nSource Action: change any  Security Audit Log Configuration using SM19/RSAU_CONFIG. (Filters/Status/Recording mode etc..)\n\n*Data Sources: SAPcon -  Audit Log*",
                "displayName": "(Preview) SAP - Medium - Security Audit Log Configuration Change",
                "enabled": false,
                "query": "// Audit Log Classes - Audit Log Configuration Events\r\nlet AuditClasses = dynamic(['AUE','AUF','AUI','AUJ','FU0','E05']); // Relevant messages\r\nABAPAuditLog_CL \r\n| where MessageID_s in (AuditClasses)\r\n| project \r\n// Details\r\nTimeGenerated, SystemID_s, User_s, MessageText_s,\r\nAccountCustomEntity = Email_s, IPCustomEntity = TerminalIPv6_s, HostCustomEntity = Host_s",
                "queryFrequency": "PT6H",
                "queryPeriod": "PT6H",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "tactics": [
                    "Persistence",
                    "Exfiltration",
                    "DefenseEvasion"
                ]
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic2-id'))]",
            "apiVersion": "2020-01-01",
            "kind": "Scheduled",
            "location": "[parameters('workspace-location')]",
            "properties": {
                "description": "Identifies deactivation of Security Audit Log\n\nSource Action: Disable secruity Audit Log using SM19/RSAU_CONFIG.\n\n*Data Sources: SAPcon -  Audit Log*",
                "displayName": "(Preview) SAP - High - Deactivation of Security Audit Log",
                "enabled": false,
                "query": "// Audit Log Classes - Audit Log Active Status Events\r\nlet AuditClasses = dynamic(['AUJ']);\r\nABAPAuditLog_CL \r\n| where MessageID_s in (AuditClasses)\r\n| where Variable1_s == '0' // Audit Active Status = 0\r\n| project \r\n// Details\r\nTimeGenerated, SystemID_s, User_s, MessageText_s, AccountCustomEntity = Email_s, IPCustomEntity = TerminalIPv6_s, HostCustomEntity = Host_s",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "tactics": [
                    "Exfiltration",
                    "DefenseEvasion",
                    "Persistence"
                ]
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic3-id'))]",
            "apiVersion": "2020-01-01",
            "kind": "Scheduled",
            "location": "[parameters('workspace-location')]",
            "properties": {
                "description": "Identifies unlocking of a transaction. \n\nSource Action: Unlock a transaction code using SM01/SM01_DEV/SM01_CUS.\n\n*Data Sources: SAPcon -  Audit Log*\n",
                "displayName": "(Preview) SAP - Medium - Transaction is unlocked",
                "enabled": false,
                "query": "// Audit Log Classes - Transaction UnLock Events\r\n// AUP - Transaction Locked\r\nlet AuditClasses = dynamic(['AUQ']); // AUQ - Transaction Unlocked\r\nABAPAuditLog_CL \r\n| where MessageID_s in (AuditClasses)\r\n| project-rename TransactionCode = Variable1_s\r\n| parse TransactionCode with \"( TR ) \" _TCODE \" - \" ClientTR // Parse to _TCODE and ClientTR\r\n// Specific Client Action (SM01_CUS) / Cross Client (SM01_DEV)\r\n| extend TransactionCode = iif(_TCODE != \"\",_TCODE, TransactionCode) // Check if _TCODE is not empty\r\n| extend ClientTR = iif(ClientTR != \"\",ClientTR, \"CrossClient\") // Check if ClientTR is not empty\r\n| project \r\n// Details\r\nTimeGenerated, SystemID_s, User_s, MessageText_s,TransactionCode, ClientTR,\r\nAccountCustomEntity = Email_s, IPCustomEntity = TerminalIPv6_s, HostCustomEntity = Host_s\r\n\r\n",
                "queryFrequency": "PT0H",
                "queryPeriod": "PT0H",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "tactics": [
                    "Persistence",
                    "Execution"
                ]
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic4-id'))]",
            "apiVersion": "2020-01-01",
            "kind": "Scheduled",
            "location": "[parameters('workspace-location')]",
            "properties": {
                "description": "Identifies new assignments of a sensitive profile to a user.\n\nSource Action: Assign a profile to a User using SU01.\n\nSensitive profiles should be maintained in watchlist \"SAP - Sensitive Profiles\"\n\n*Data Sources: SAPcon -  Change Documents Log*\n",
                "displayName": "(Preview) SAP - Medium - Assignment of a sensitive profile",
                "enabled": false,
                "query": "// Define Variables\r\n// Audit Log Classes - Authorizations for user changed\r\nlet Identity = 'IDENTITY';\r\nlet ProfileChangeDoc = 'SUSR_UST04';\r\nlet Insert = \"I\";\r\nlet logsThreshold = 10; // 10 seconds\r\nlet AuditClasses = dynamic(['AUB']); // Authorizations for user &A changed.\r\n// Maintain these if WatchList is not available\r\nlet SensitiveProfiles =  _GetWatchlist('SAP - Sensitive Profiles');\r\nlet fixedProfile = datatable(Profile:string)['SAP_ALL','SAP_NEW'];\r\n// Maintain these if System doesn't have CR's\r\nlet fixedChangeDocs = datatable(User_s : string, ObjectClass_s : string, TableName_s : string, TypeofChange_Item_s : string , ChangedTableKey_s : string, ObjectID_s : string, TimeGenerated : datetime, ValueNew_s : string, SystemID_s : string)[];\r\nlet ChangeDocs = \r\nunion isfuzzy=true table(\"ABAPChangeDocsLog_CL\"), fixedChangeDocs;\r\nlet IdentityChangeDocuments =\r\n// Identity Change documents which represents profiles assignment\r\n    ChangeDocs  \r\n    | where ObjectClass_s == Identity // Identity\r\n    and TableName_s == ProfileChangeDoc // Profile Change Doc\r\n    and TypeofChange_Item_s == Insert // Insert \r\n    | extend Profile = ChangedTableKey_s\r\n    | extend UserAssigned = ObjectID_s;\r\nlet UnitedProfiles =\r\ntoscalar(union fixedProfile, SensitiveProfiles\r\n| summarize Profiles = make_list(Profile));\r\n// Query logic\r\nABAPAuditLog_CL \r\n| where MessageID_s in (AuditClasses)\r\n| summarize by TimeGenerated, TerminalIPv6_s, User_s, Host_s, Email_s\r\n| lookup kind = leftouter (IdentityChangeDocuments) on User_s\r\n| where Profile in (UnitedProfiles)\r\n| project-rename  TimeGenAudit = TimeGenerated1    \r\n| where abs(datetime_diff('second',TimeGenerated,TimeGenAudit)) <= logsThreshold\r\nor isnull(TimeGenAudit)\r\n| project \r\n// Details\r\nTimeGenerated, SystemID_s, ClientID_s, Profile, User_s,  UserAssigned,\r\nAccountCustomEntity = Email_s, IPCustomEntity = TerminalIPv6_s, HostCustomEntity = Host_s",
                "queryFrequency": "PT12H",
                "queryPeriod": "PT12H",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "tactics": [
                    "PrivilegeEscalation"
                ]
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic5-id'))]",
            "apiVersion": "2020-01-01",
            "kind": "Scheduled",
            "location": "[parameters('workspace-location')]",
            "properties": {
                "description": "Identifies Dialog logon of a sensitive privileged user. \n\nSource Action: Logon to the backend system using SAP* or anoter privileged user.\n\nPriveleged users should be maintained in \"SAP - Privileged Users\" Watchlist\n\n*Data Sources: SAPcon -  Audit Log*",
                "displayName": "(Preview) SAP - High - Sensitive privileged user logged in",
                "enabled": false,
                "query": "// Define Variables\r\n// Audit Log Classes - Dialog Logon Successful\r\nlet AuditClassesSuccess = dynamic(['AU1']);\r\nlet AuditClassesFail = dynamic(['BU1']);\r\nlet AuditRFCSuccess = dynamic(['AU5']);\r\nlet AuditRFCFail = dynamic(['AU6']);\r\nlet LogonTypes = dynamic(['A','H', 'R', 'S']); // Dialog / HTTP\r\n// Get Relevant User from WatchList\r\nlet PrivelegedUsers = _GetWatchlist('SAP - Privileged Users');\r\nlet fixedUsers = datatable(User:string)\r\n// Maintain these if WatchList is not available    \r\n    [\"SAP*\",\"DDIC\"]\r\n;\r\nlet UnitedPrivileged = union PrivelegedUsers, fixedUsers\r\n| summarize by User;\r\n// Query logic\r\nABAPAuditLog_CL \r\n| where (MessageID_s in (AuditClassesSuccess) and Variable1_s in (LogonTypes)) or // Success login\r\nMessageID_s in (AuditClassesFail) or // Failed login\r\n(MessageID_s in (AuditRFCSuccess) and Variable1_s in (LogonTypes)) or // Success RFC login\r\nMessageID_s in (AuditRFCFail) // Failed RFC login\r\n| where User_s in (UnitedPrivileged)\r\n| project-rename LogonType = Variable1_s\r\n| project TimeGenerated, SystemID_s, ClientID_s, LogonType, User_s, MessageText_s, \r\nAccountCustomEntity = Email_s, IPCustomEntity = TerminalIPv6_s, HostCustomEntity = Host_s\r\n",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "tactics": [
                    "InitialAccess",
                    "CredentialAccess"
                ]
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic6-id'))]",
            "apiVersion": "2020-01-01",
            "kind": "Scheduled",
            "location": "[parameters('workspace-location')]",
            "properties": {
                "description": "Identifies new assignments for a sensitive role to a user.\n\nSource Action: Assign a role to a User using SU01 / PFCG.\n\nSensitive roles should be maintained in watchlist \"SAP -  Sensitive Roles\"\n\n*Data Sources: SAPcon -  Change Documents Log, Audit Log*",
                "displayName": "(Preview) SAP - Medium - Assignment of a sensitive role",
                "enabled": false,
                "query": "// Define Variables\r\nlet Roles = 'PFCG';\r\nlet UsersRoles = 'AGR_USERS';\r\nlet Insert = \"I\";\r\nlet logsThreshold = 10; // 10 seconds\r\n// Audit Log Classes - Authorizations for user changed\r\nlet AuditClasses = dynamic(['AUB', 'AUD']); // Authorizations for user &A changed.\r\n// Maintain these if WatchList is not available\r\nlet SensitiveRoles =  _GetWatchlist('SAP - Sensitive Roles');\r\nlet fixedRoles = datatable(Role: string)['SAP_BC_BASIS_ADMIN', 'SAP_BC_AUTH_PROFILE_ADMIN'];\r\n// Maintain these if System doesn't have CR's\r\nlet fixedChangeDocs = datatable(User_s : string, ObjectClass_s : string, TableName_s : string, TypeofChange_Item_s : string ,\r\nChangedTableKey_s : string, ObjectID_s : string, TimeGenerated : datetime, ValueNew_s : string, SystemID_s : string)[];\r\nlet ChangeDocs = \r\nunion isfuzzy=true table(\"ABAPChangeDocsLog_CL\"), fixedChangeDocs;\r\nlet ChangeCheck =\r\nChangeDocs  \r\n| where ObjectClass_s == Roles // Roles\r\n    and TableName_s == UsersRoles // Users Roles\r\n    and TypeofChange_Item_s == Insert // Insert \r\n| extend UserAssigned = extract(@\"^.{1,33}\\s*?(.{1,12})\\s*?\\d{16}\", 1, ChangedTableKey_s)\r\n| extend Role = ObjectID_s;\r\nlet UnitedRoles =\r\ntoscalar(union fixedRoles, SensitiveRoles\r\n| summarize Roles = make_list(Role));\r\n// Query logic\r\nABAPAuditLog_CL \r\n| where MessageID_s in (AuditClasses)\r\n| summarize by TimeGenerated, TerminalIPv6_s, User_s, Host_s, Email_s\r\n| lookup kind = leftouter (ChangeCheck) on User_s\r\n| where Role in (UnitedRoles)\r\n| project-rename TimeGenAudit = TimeGenerated1\r\n| where abs(datetime_diff('second', TimeGenerated, TimeGenAudit)) <= logsThreshold\r\nor isnull(TimeGenAudit)\r\n| project \r\n    // Details\r\n    TimeGenerated, SystemID_s, ClientID_s, Role, User_s, UserAssigned,\r\n    AccountCustomEntity = Email_s, IPCustomEntity = TerminalIPv6_s, HostCustomEntity = Host_s",
                "queryFrequency": "PT12H",
                "queryPeriod": "PT12H",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "tactics": [
                    "PrivilegeEscalation"
                ]
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic7-id'))]",
            "apiVersion": "2020-01-01",
            "kind": "Scheduled",
            "location": "[parameters('workspace-location')]",
            "properties": {
                "description": "Identifies direct execution of a sensitive ABAP program. \n\nSource Action: Execute a program directly using SE38/SA38/SE80.\n\n**Recommended for Production only**\n\nABAP Programs should be maintained in watchlist \"SAP - Sensitive ABAP Programs\"\n\n*Data Sources: SAPcon -  Audit Log*",
                "displayName": "(Preview) SAP - High - Execution of a Sensitive ABAP Program",
                "enabled": false,
                "query": "// Define Variables\r\nlet Role = \"Production\";\r\nlet AuditClasses = dynamic(['AUW']); // Audit Log Classes - Report Started\r\nlet allSystemRoles = dynamic(['Sandbox','Developement','QualityAssurance','Training','Production']); // Available System Roles\r\nlet allSystemUsage = dynamic (['ERP','CRM','BW','Solman','Gateway','Enterprise Portal']); // Available System Usages\r\n// Get Relevant Systems from WatchList\r\nlet systemID = _GetWatchlist('SAP - Systems');\r\nlet fixedSID = datatable(SystemID:string, SystemRole:string, SystemUsage:string)\r\n// Maintain these if WatchList is not available    \r\n    [\"S4H\",\"Production\",\"ERP\",\r\n    \"XXX\",\"Sandbox\",\"BW\"]\r\n; \r\n// Get Relevant ABAP Programs\r\nlet SensitiveABAPReports = _GetWatchlist('SAP - Sensitive ABAP Programs');\r\nlet fixedABAPReports = datatable(ABAPProgram:string)\r\n// Maintain these if WatchList is not available    \r\n    [\"RSPFLDOC\"]\r\n; \r\nlet UnionAbap = \r\n    union SensitiveABAPReports, fixedABAPReports\r\n    | summarize by ABAPProgram;\r\nlet UnitedSystem =\r\nunion systemID, fixedSID\r\n| summarize by SystemID, SystemRole, SystemUsage\r\n| where SystemRole == Role; // Reccommended is Production only\r\n//| where SystemRole in (allSystemRoles); // Use this for all system roles\r\n// Query logic\r\nABAPAuditLog_CL \r\n| where MessageID_s in (AuditClasses)\r\n| where ABAPProgramName_s in (UnionAbap)\r\n| project-rename SystemID = SystemID_s\r\n| lookup kind = inner (UnitedSystem) on SystemID\r\n| order by TimeGenerated asc\r\n| project TimeGenerated, SystemID, ClientID_s, User_s, ABAPProgramName_s, MessageText_s, TransactionCode_s, MessageID_s, AccountCustomEntity = Email_s, IPCustomEntity = TerminalIPv6_s, HostCustomEntity = Host_s",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "tactics": [
                    "Exfiltration",
                    "LateralMovement",
                    "Execution"
                ]
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic8-id'))]",
            "apiVersion": "2020-01-01",
            "kind": "Scheduled",
            "location": "[parameters('workspace-location')]",
            "properties": {
                "description": "Identifies execution of a sensitive Transaction Code.\n\nSource Action: Execute a sensitive Transaction Code.\n\n**Recommended for Production only**\n\nTransaction Codes should be maintained in watchlist \"\"SAP - Sensitive Transaction Codes\"\"\n\n*Data Sources: SAPcon -  Audit Log*",
                "displayName": "(Preview) SAP - High - Execution of a Sensitive Transaction Code",
                "enabled": false,
                "query": "// Define Variables\r\nlet Role = 'Production';\r\nlet AuditClasses = dynamic(['AU3']); // Audit Log Classes - Transaction Started\r\nlet allSystemRoles = dynamic(['Sandbox','Developement','QualityAssurance','Training','Production']); // Available System Roles\r\nlet allSystemUsage = dynamic (['ERP','CRM','BW','Solman','Gateway','Enterprise Portal']); // Available System Usages\r\n// Get Relevant Systems from WatchList\r\nlet systemID = _GetWatchlist('SAP - Systems');\r\nlet fixedSID = datatable(SystemID:string, SystemRole:string, SystemUsage:string)\r\n// Maintain these if WatchList is not available    \r\n    [\"S4H\",\"Production\",\"ERP\",\r\n    \"XXX\",\"Sandbox\",\"BW\"]\r\n; \r\n// Get Relevant Transaction Codes\r\nlet SensitiveTcode = _GetWatchlist('SAP - Sensitive Transactions');\r\nlet fixedTcode = datatable(TransactionCode:string)\r\n// Maintain these if WatchList is not available    \r\n    [\"RSAU_CONFIG\",\"RZ11\",\"SM19\"]\r\n; \r\nlet UnitedCodes = \r\n    union SensitiveTcode, fixedTcode\r\n    | summarize by TransactionCode;\r\nlet UnitedSystem =\r\nunion systemID, fixedSID\r\n| summarize by SystemID, SystemRole, SystemUsage\r\n| where SystemRole == Role; // Recommended  is Production only\r\n//| where SystemRole in (allSystemRoles); // Use this for all system roles\r\n// Query logic\r\nABAPAuditLog_CL \r\n| where MessageID_s in (AuditClasses)\r\n| where TransactionCode_s in (UnitedCodes)\r\n| project-rename SystemID = SystemID_s\r\n| lookup kind = inner (UnitedSystem) on SystemID\r\n| order by TimeGenerated asc\r\n| project TimeGenerated, SystemID, ClientID_s, User_s, TransactionCode_s, MessageText_s, MessageID_s, AccountCustomEntity = Email_s, IPCustomEntity = TerminalIPv6_s, HostCustomEntity = Host_s",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "tactics": [
                    "Discovery",
                    "Execution"
                ]
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic9-id'))]",
            "apiVersion": "2020-01-01",
            "kind": "Scheduled",
            "location": "[parameters('workspace-location')]",
            "properties": {
                "description": "Identifies generic table access by dialog logon\n\nSource Action: Open table contents using SE11/SE16/SE16N.\n\n**Recommended for Production only**\n\nTables should be maintained in \"\"SAP - Sensitive Tables\"\" Watchlist.\n\n*Data Sources: SAPcon -  Audit Log*",
                "displayName": "(Preview) SAP - Low - Sensitive Tables Direct Access By Dialog Logon",
                "enabled": false,
                "query": "// Define variables\r\nlet Role = \"Production\";\r\nlet AuditClasses = dynamic(['DU9']); // Dialog, Audit Log Classes - Generic Table Access \r\nlet allSystemRoles = dynamic(['Sandbox','Developement','QualityAssurance','Training','Production']); // Available System Roles\r\nlet allSystemUsage = dynamic (['ERP','CRM','BW','Solman','Gateway','Enterprise Portal']); // Available System Usages\r\n// Get Relevant Systems from WatchList\r\nlet systemID = _GetWatchlist('SAP - Systems');\r\nlet fixedSID = datatable(SystemID:string, SystemRole:string, SystemUsage:string)\r\n// Maintain these if WatchList is not available    \r\n    [\"S4H\",\"Production\",\"ERP\",\r\n    \"XXX\",\"Sandbox\",\"BW\"]\r\n; \r\n// Get Relevant Tables\r\nlet SensitiveTables = _GetWatchlist('SAP - Sensitive Tables');\r\nlet fixedTables = datatable(Table:string)\r\n// Maintain these if WatchList is not available    \r\n    [\"USR02\"]\r\n; \r\nlet RelSystemID = union systemID, fixedSID // Create a variable that stores relevant Systems\r\n| where SystemRole == Role // Recommended  is Production only\r\n//| where SystemRole in (allSystemRoles); // Use this for all system roles\r\n| summarize by SystemID;\r\nlet SensitiveUnionTables = union SensitiveTables, fixedTables // Create a variable that stores relevant sensitive tables\r\n    | summarize by Table;\r\n// Query logic\r\nABAPAuditLog_CL \r\n    | project-rename Table = Variable1_s, Activity = Variable2_s\r\n    | where MessageID_s in (AuditClasses)\r\n    | where SystemID_s in (RelSystemID)\r\n    | where Table in (SensitiveUnionTables)\r\n    | order by TimeGenerated asc\r\n    | project TimeGenerated, SystemID_s, ClientID_s, User_s, TransactionCode_s, ABAPProgramName_s, Table,   Activity, MessageText_s, MessageID_s,\r\nAccountCustomEntity = Email_s, IPCustomEntity = TerminalIPv6_s, HostCustomEntity = Host_s",
                "queryFrequency": "PT12H",
                "queryPeriod": "PT12H",
                "severity": "Low",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "tactics": [
                    "Discovery"
                ]
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic10-id'))]",
            "apiVersion": "2020-01-01",
            "kind": "Scheduled",
            "location": "[parameters('workspace-location')]",
            "properties": {
                "description": "Identifies logon of the same user from several terminals within scheduled time interval.\n\nSource Action: Logon using the same user thorugh different IP's.\n\n*Data Sources: SAPcon -  Audit Log*",
                "displayName": "(Preview) SAP - Medium - Multiple Logons by User",
                "enabled": false,
                "query": "// Define variables\r\n// Audit Log Classes - Dialog Logon Successful, RFC Logon Successful\r\nlet AuditClasses = dynamic(['AU1','AU5']);\r\n// Dialog / CPIC / RFC Int / RFC Ext / SRFC / User Switch / HTTP / Restore Session / API Call\r\nlet DialogLogonTypes = dynamic(['A', 'C', 'F', 'R', 'S', 'U', 'H', 'u', ' ']);\r\nlet excUsers = _GetWatchlist('SAP - Excluded Users'); // Users that should be removed from query\r\nlet fixedExcUsers = datatable(User:string)\r\n// Maintain these if WatchList is not available    \r\n    [\"SYSWF\"]\r\n; \r\nlet UnitedExcUsers =\r\ntoscalar(union excUsers, fixedExcUsers\r\n| summarize Users = make_set(User));\r\nlet IPThreshold = 1;\r\n// Query Logic\r\nABAPAuditLog_CL \r\n| where MessageID_s in (AuditClasses)\r\n| where Variable1_s in (DialogLogonTypes)\r\n| where User_s !in (UnitedExcUsers)\r\n| summarize CountIP = dcount(TerminalIPv6_s), IPs = make_set(TerminalIPv6_s), StartTime = min(TimeGenerated), EndTime = max(TimeGenerated) by SystemID_s, ClientID_s, User_s, Email_s\r\n| where CountIP > IPThreshold // Count of IP logins from the user is higher than threshold\r\n| mv-expand IPs to typeof(string ) // Show for each IP\r\n| project SystemID_s, ClientID_s, User_s, StartTime, EndTime,\r\n    AccountCustomEntity = Email_s, IPCustomEntity = IPs",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "tactics": [
                    "PreAttack",
                    "CredentialAccess",
                    "InitialAccess",
                    "Collection"
                ]
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic11-id'))]",
            "apiVersion": "2020-01-01",
            "kind": "Scheduled",
            "location": "[parameters('workspace-location')]",
            "properties": {
                "description": "Identifies logon of several users from same IP within scheduled time interval.\n\nSource Action: Logon using several users thorugh the same IP.\n\n*Data Sources: SAPcon -  Audit Log*",
                "displayName": "(Preview) SAP - Medium - Multiple Logons by IP",
                "enabled": false,
                "query": "// Define variables\r\nlet AuditClasses = dynamic(['AU1', 'AU5']); // Audit Log Classes - Dialog Logon Successful, RFC Logon Successful\r\nlet DialogLogonTypes = dynamic(['A', 'C', 'F', 'R', 'S', 'U', 'H', 'u', ' ']); // Dialog / CPIC / RFC Int / RFC Ext / SRFC / User Switch / HTTP / Restore Session / API Call\r\nlet excNetworks = _GetWatchlist('SAP - Excluded Networks'); // Networks that should be removed from query\r\nlet fixedNetworks =\r\ndatatable(Network:string)\r\n// Maintain these if WatchList is not available    \r\n    [\"111.68.128.0/1\", \"123.68.128.0/1\", \"\"]\r\n; \r\nlet UnitedNetworks =\r\ntoscalar(union excNetworks, fixedNetworks\r\n| summarize Networks = make_set(Network));\r\nlet UsersperIP = 1;\r\n// Query logic\r\nABAPAuditLog_CL \r\n| where MessageID_s in (AuditClasses)\r\n| where Variable1_s in (DialogLogonTypes)\r\n| where TerminalIPv6_s !in (UnitedNetworks)\r\n| extend UserandEmail = pack(\"ID\", User_s, \"Email\", Email_s)\r\n| summarize CountUsers = dcount(strcat(User_s, \"_&_\", Email_s)), Users = make_set(UserandEmail), StartTime = min(TimeGenerated), EndTime = max(TimeGenerated) \r\n    by SystemID_s, ClientID_s, TerminalIPv6_s\r\n| where CountUsers > UsersperIP\r\n| mv-expand Users \r\n| evaluate bag_unpack(Users, \"User_\")\r\n| project SystemID_s, ClientID_s, IPCustomEntity = TerminalIPv6_s, StartTime, EndTime,\r\n    column_ifexists(\"User_ID\", \"\"),    \r\n    AccountCustomEntity = column_ifexists(\"User_Email\", \"\")\r\n",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "tactics": [
                    "InitialAccess"
                ]
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic12-id'))]",
            "apiVersion": "2020-01-01",
            "kind": "Scheduled",
            "location": "[parameters('workspace-location')]",
            "properties": {
                "description": "Identifies logons from an unexpected network.\n\nSource Action: Logon to the backend system from an IP address which is not assigned to one of the netwroks.\n\nNetworks should be maintained in watchlist \"SAP - Networks\"\n\n*Data Sources: SAPcon -  Audit Log*",
                "displayName": "(Preview) SAP - High - Login from unexpected network",
                "enabled": false,
                "query": "let AuditClasses = dynamic(['AU1','AU5']); // Audit Log Classes - Dialog Logon Successful, RFC Logon Successful\r\n// Dialog / CPIC / RFC Int / RFC Ext / SRFC / User Switch / HTTP / Restore Session / API Call\r\nlet DialogLogonTypes = dynamic(['A', 'C', 'F', 'R', 'S', 'U', 'H', 'u', ' ']);\r\nlet Networks = _GetWatchlist('SAP - Networks'); \r\nlet fixedNetworks = datatable(Network: string)['111.68.128.0/17']; // Maintain these if watchlist is not available\r\nlet allNetworks = union Networks, fixedNetworks\r\n    | summarize by Network;\r\nABAPAuditLog_CL\r\n// Add audit classes\r\n| where MessageID_s in (AuditClasses)\r\n| where Variable1_s in (DialogLogonTypes) // Is a dialog logon type from the list\r\n| where isnotempty(TerminalIPv6_s) // There is a Ipv6 address\r\n| evaluate ipv4_lookup(allNetworks, TerminalIPv6_s, Network, return_unmatched = true)\r\n// Similar to regular lookup, by ipv4 address, unmatched is like left join\r\n| where isempty(Network) // Network is not familiar\r\n// Details\r\n| project TimeGenerated, SystemID_s, ClientID_s, User_s, TransactionCode_s, MessageText_s, AccountCustomEntity = Email_s, IPCustomEntity = TerminalIPv6_s, HostCustomEntity = Host_s",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "tactics": [
                    "InitialAccess"
                ]
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic13-id'))]",
            "apiVersion": "2020-01-01",
            "kind": "Scheduled",
            "location": "[parameters('workspace-location')]",
            "properties": {
                "description": "Identifies execution of a sensitive function module using RFC.\n\nSource Action: Execute a function module using RFC.\n\n**Recommended for Production only**\n\nFunction Modules should be maintained in watchlist \"SAP - Sensitive Function Modules\"\n\n*Data Sources: SAPcon -  Audit Log*",
                "displayName": "(Preview) SAP - High - RFC Execution of a Sensitive Function Module",
                "enabled": false,
                "query": "let Role = \"Production\";\r\nlet AuditClasses = dynamic(['AUK']); // Audit Log Classes - Successful RFC call &C (function group = &A)\r\nlet allSystemRoles = dynamic(['Sandbox', 'Developement', 'QualityAssurance', 'Training', 'Production']); // Available System Roles\r\nlet allSystemUsage = dynamic (['ERP', 'CRM', 'BW', 'Solman', 'Gateway', 'Enterprise Portal']); // Available System Usages\r\n// Get Relevant Systems from WatchList\r\nlet systemID = _GetWatchlist('SAP - Systems');\r\nlet fixedSID = datatable(SystemID: string, SystemRole: string, SystemUsage: string)\r\n    // Maintain these if WatchList is not available    \r\n    [\"S4H\", \"Production\", \"ERP\",\r\n    \"XXX\", \"Sandbox\", \"BW\"]\r\n; \r\n// Get Relevant Function Modules\r\nlet SensitiveFM = _GetWatchlist('SAP - Sensitive Function Modules');\r\nlet fixedFM = datatable(FunctionModule: string)\r\n    // Maintain these if WatchList is not available    \r\n    [\"RSAU_CLEAR_AUDIT_LOG\"]\r\n; \r\nlet UnitedSystems = union systemID, fixedSID\r\n| where SystemRole == Role // Recommended  is Production only\r\n| summarize by SystemID;\r\n//| where SystemRole in (allSystemRoles); // Use this for all system roles\r\nlet UnitedSensitive =  union SensitiveFM, fixedFM\r\n| summarize by FunctionModule;\r\nABAPAuditLog_CL \r\n| where MessageID_s in (AuditClasses)\r\n| project-rename FunctionModule = Variable3_s, FunctionGroup = Variable1_s\r\n| where SystemID_s in (UnitedSystems) // The systemID is in this list\r\n| where FunctionModule in (UnitedSensitive) // Function module is sensitive\r\n| order by TimeGenerated asc\r\n| project TimeGenerated, User_s, SystemID_s, ClientID_s, MessageText_s, FunctionGroup, FunctionModule, MessageID_s,\r\n    AccountCustomEntity = Email_s, IPCustomEntity = TerminalIPv6_s, HostCustomEntity = Host_s",
                "queryFrequency": "PT2H",
                "queryPeriod": "PT2H",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "tactics": [
                    "Execution",
                    "LateralMovement",
                    "Discovery"
                ]
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic14-id'))]",
            "apiVersion": "2020-01-01",
            "kind": "Scheduled",
            "location": "[parameters('workspace-location')]",
            "properties": {
                "description": "Identifies testing of a function module.\n\nSource Action: Test a function module using  SE37 / SE80.\n\n**Recommended for Production only**\n\n*Data Sources: SAPcon -  Audit Log*",
                "displayName": "(Preview) SAP - High - Function Module tested",
                "enabled": false,
                "query": "let Role = 'Production';\r\nlet ProgramName = 'RS_TESTFRAME_CALL';\r\nlet AuditClasses = dynamic(['AUW']); // Audit Log Classes - Report Started\r\nlet allSystemRoles = dynamic(['Sandbox', 'Developement', 'QualityAssurance', 'Training', 'Production']); // Available System Roles\r\nlet allSystemUsage = dynamic (['ERP', 'CRM', 'BW', 'Solman', 'Gateway', 'Enterprise Portal']); // Available System Usages\r\n// Get Relevant Systems from WatchList\r\nlet systemID = _GetWatchlist('SAP - Systems');\r\nlet fixedSID = datatable(SystemID: string, SystemRole: string, SystemUsage: string)\r\n    // Maintain these if WatchList is not available    \r\n    [\"S4H\", \"Production\", \"ERP\",\r\n    \"XXX\", \"Sandbox\", \"BW\"]\r\n; \r\nlet UnitedSystem = \r\nunion systemID, fixedSID\r\n| summarize by SystemID, SystemRole, SystemUsage\r\n| where SystemRole == Role; // Reccommended is Production only\r\n//| where SystemRole in (allSystemRoles); // Use this for all system roles\r\nABAPAuditLog_CL \r\n| where MessageID_s in (AuditClasses)\r\n| where ABAPProgramName_s == ProgramName\r\n| project-rename SystemID = SystemID_s\r\n| lookup kind = inner (UnitedSystem) on SystemID\r\n| order by TimeGenerated asc\r\n| project TimeGenerated, User_s, SystemID, ClientID_s, MessageText_s, MessageID_s,\r\n    AccountCustomEntity = Email_s, IPCustomEntity = TerminalIPv6_s, HostCustomEntity = Host_s ",
                "queryFrequency": "PT6H",
                "queryPeriod": "PT6H",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "tactics": [
                    "Collection",
                    "DefenseEvasion",
                    "LateralMovement"
                ]
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic15-id'))]",
            "apiVersion": "2020-01-01",
            "kind": "Scheduled",
            "location": "[parameters('workspace-location')]",
            "properties": {
                "description": "Identifies changes  of sensitive privileged users. \n\nSource Action: Change user details / authorizations using SU01.\n\nPriveleged users should be maintained in \"SAP - Privileged Users\" Watchlist\n\n*Data Sources: SAPcon -  Audit Log*",
                "displayName": "(Preview) SAP - High - Change in Sensitive privileged user",
                "enabled": false,
                "query": "// Audit Log Classes - User Master Changes\r\nlet AuditClasses = dynamic(['AU7', 'BUV', 'BUW', 'AU8', 'AU9', 'AUA', 'AUB', 'AUD', 'DUH', 'BU2']);\r\n// Get Relevant User from WatchList\r\nlet PrivelegedUsers = _GetWatchlist('SAP - Privileged Users');\r\nlet fixedUsers = datatable(User: string)\r\n    // Maintain these if WatchList is not available    \r\n    [\"SAP*\", \"DDIC\"]\r\n;\r\nlet UnitedPrivleged = union PrivelegedUsers, fixedUsers\r\n| summarize by User;\r\nABAPAuditLog_CL \r\n| where MessageID_s in (AuditClasses)\r\n| where Variable1_s in (UnitedPrivleged) // The user that we are making change in is a sensitive privileged user\r\n| project TimeGenerated, SystemID_s, ClientID_s, User_s, MessageText_s, MessageID_s,\r\n    AccountCustomEntity = Email_s, IPCustomEntity = TerminalIPv6_s, HostCustomEntity = Host_s\r\n",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "tactics": [
                    "PrivilegeEscalation",
                    "CredentialAccess"
                ]
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic16-id'))]",
            "apiVersion": "2020-01-01",
            "kind": "Scheduled",
            "location": "[parameters('workspace-location')]",
            "properties": {
                "description": "Identifies brute force attacks on SAP system according to failed logon attempts for the backend system.\n\nSource Action: Attempt to login from the same IP to several systems/clients within the scheduled time interval.\n\n*Data Sources: SAPcon -  Audit Log*",
                "displayName": "(Preview) SAP - Medium - Brute force attacks",
                "enabled": false,
                "query": "// Define variables\r\n// Audit Log Classes - Failed Logons / Password Check\r\nlet AuditClasses = dynamic(['AUO', 'AU2', 'AU6', 'BU1']);\r\nlet perIPLimit = 6;\r\n// Query logic\r\nABAPAuditLog_CL \r\n| where MessageID_s in (AuditClasses)\r\n| extend DetailsBy = pack(\"User\", User_s, \"Email\", Email_s, \"SystemID\", SystemID_s, \"ClientID\", ClientID_s)\r\n| summarize LoginbyIPAttempts = count(), Details = make_set(DetailsBy), StartTime = min(TimeGenerated), EndTime = max(TimeGenerated) \r\n    by TerminalIPv6_s\r\n// Check if number of login attempts per IP is higher than limit\r\n| where LoginbyIPAttempts > perIPLimit \r\n| mv-expand Details\r\n| evaluate bag_unpack(Details, \"Details_\")\r\n| project \r\n    StartTime, EndTime, IPCustomEntity = TerminalIPv6_s,\r\n    AccountCustomEntity = column_ifexists(\"Details_Email\", \"\"), column_ifexists(\"Details_User\", \"\"),\r\n    column_ifexists(\"Details_SystemID\", \"\"),\r\n    column_ifexists(\"Details_ClientID\", \"\")",
                "queryFrequency": "PT6H",
                "queryPeriod": "PT6H",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "tactics": [
                    "CredentialAccess"
                ]
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic17-id'))]",
            "apiVersion": "2020-01-01",
            "kind": "Scheduled",
            "location": "[parameters('workspace-location')]",
            "properties": {
                "description": "Identifies multiple password changes by user.\n\nSource Action: Change user password\n\n*Data Sources: SAPcon -  Audit Log*",
                "displayName": "(Preview) SAP - Low - Multiple Password Changes by User",
                "enabled": false,
                "query": "// Define variables\r\nlet systemsPerUser = 3; // Systems Clients per User\r\nlet AuditClasses = dynamic(['BU2']); // Audit Log Classes - Password Changed\r\n// Query logic\r\nABAPAuditLog_CL \r\n| where MessageID_s in (AuditClasses)\r\n| project-rename UserReset = Variable2_s\r\n| extend DetailsBy = pack(\"SystemID\", SystemID_s, \"ClientID\", ClientID_s)\r\n| summarize CountSysClient = dcount(strcat(SystemID_s, ClientID_s)), Details = make_set(DetailsBy), StartTime = min(TimeGenerated), EndTime = max(TimeGenerated) \r\n    by UserReset, User_s, Email_s, TerminalIPv6_s\r\n| where CountSysClient > systemsPerUser // Number of passwords changed by user\r\n| mv-expand Details\r\n| evaluate bag_unpack(Details, \"Details_\") // Unpack the details to a couple of fields\r\n| project \r\n    StartTime, EndTime, UserReset, User_s, AccountCustomEntity = Email_s, IPCustomEntity = TerminalIPv6_s,\r\n    column_ifexists(\"Details_SystemID\", \"\"),\r\n    column_ifexists(\"Details_ClientID\", \"\")",
                "queryFrequency": "PT3H",
                "queryPeriod": "PT3H",
                "severity": "Low",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "tactics": [
                    "CredentialAccess"
                ]
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic18-id'))]",
            "apiVersion": "2020-01-01",
            "kind": "Scheduled",
            "location": "[parameters('workspace-location')]",
            "properties": {
                "description": "Identifies admin privileges/roles assignment.\n\nSource Action: Assign a user with any Admin role / privileges.\n\n*Data Sources: Linux Agent - Syslog*",
                "displayName": "(Preview) SAP - High - HANA DB - Assign Admin Authorizations",
                "enabled": false,
                "query": "Syslog \r\n| where ProcessName startswith \"HDB\"\r\n| where SyslogMessage contains \"ADMIN\" and (SyslogMessage contains \"GRANT PRIVILEGE\" or SyslogMessage contains \"GRANT ROLE\")",
                "queryFrequency": "PT3H",
                "queryPeriod": "PT3H",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "tactics": [
                    "PrivilegeEscalation"
                ]
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic19-id'))]",
            "apiVersion": "2020-01-01",
            "kind": "Scheduled",
            "location": "[parameters('workspace-location')]",
            "properties": {
                "description": "Identifies user administration actions.\n\nSouirce Action: Create/Update/Delete a DB User.\n\n*Data Sources: Linux Agent - Syslog*",
                "displayName": "(Preview) SAP - High - HANA DB - User Admin actions",
                "enabled": false,
                "query": "Syslog \r\n| where ProcessName startswith \"HDB\"\r\n| where SyslogMessage contains \"CREATE USER\" or \r\n    SyslogMessage contains 'ALTER USER' or \r\n    SyslogMessage contains 'DROP USER' or \r\n    SyslogMessage contains 'DROP SCHEMA'",
                "queryFrequency": "PT3H",
                "queryPeriod": "PT3H",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "tactics": [
                    "PrivilegeEscalation"
                ]
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic20-id'))]",
            "apiVersion": "2020-01-01",
            "kind": "Scheduled",
            "location": "[parameters('workspace-location')]",
            "properties": {
                "description": "Identifies changes for HANA DB audit trail policies.\n\nSource Action: Create / update existing audit policy in security definitions.\n\n*Data Sources: Linux Agent - Syslog*",
                "displayName": "(Preview) SAP - High - HANA DB - Audit Trail Policy Changes",
                "enabled": false,
                "query": "Syslog \r\n| where ProcessName startswith \"HDB\"\r\n| where SyslogMessage contains \"AUDIT POLICY\" ",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "tactics": [
                    "LateralMovement",
                    "DefenseEvasion",
                    "Persistence"
                ]
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic21-id'))]",
            "apiVersion": "2020-01-01",
            "kind": "Scheduled",
            "location": "[parameters('workspace-location')]",
            "properties": {
                "description": "Identifies deactivation of HANA DB audit log.\n\nSource Action: Deactivate Audit Log in HANA DB security defnitions.\n\n*Data Sources: Linux Agent - Syslog*",
                "displayName": "(Preview) SAP - High - HANA DB - Deactivation of Audit Trail",
                "enabled": false,
                "query": "Syslog \r\n| where ProcessName startswith \"HDB\"\r\n| where SyslogMessage contains \"AUDIT CONFIGURATION\" and \r\n    SyslogMessage contains 'global_auditing_state' and \r\n    SyslogMessage contains 'False'",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "tactics": [
                    "Persistence",
                    "LateralMovement",
                    "DefenseEvasion"
                ]
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic22-id'))]",
            "apiVersion": "2020-01-01",
            "kind": "Scheduled",
            "location": "[parameters('workspace-location')]",
            "properties": {
                "description": "Identifies all debugging related activities.\n\nSource Action: Activate Debug (\"/h\") in system, debug an active process, add breakpoint to source code etc.\n\n**Recommended for Production only**\n\n*Data Sources: SAPcon -  Audit Log*",
                "displayName": "(Preview) SAP - Medium - Debugging Activities",
                "enabled": false,
                "query": "let Role = 'Production';\r\nlet DebuggerProgram = 'RSTPDAMAIN';\r\nlet AuditClasses = dynamic(['CUK','CUL','CUM','CUN','CUO','CUP']); // Audit Log Classes - Debug Activities\r\nlet allSystemRoles = dynamic(['Sandbox','Developement','QualityAssurance','Training','Production']); // Available System Roles\r\nlet allSystemUsage = dynamic (['ERP','CRM','BW','Solman','Gateway','Enterprise Portal']); // Available System Usages\r\n// Get Relevant Systems from WatchList\r\nlet systemID = _GetWatchlist('SAP - Systems')\r\n| where SystemRole == Role; // Reccommended is Production only\r\nlet fixedSID = datatable(SystemID:string, SystemRole:string, SystemUsage:string)\r\n// Maintain these if WatchList is not available    \r\n    [\"S4H\",\"Production\",\"ERP\",\r\n    \"XXX\",\"Sandbox\",\"BW\"]\r\n    | where SystemRole == Role // Reccommended is Production only\r\n; \r\nlet SystemUnited = union systemID, fixedSID\r\n| summarize by SystemID, SystemRole, SystemUsage;\r\n//| where SystemRole in (allSystemRoles); // Use this for all system roles\r\nABAPAuditLog_CL \r\n    | where MessageID_s in (AuditClasses) or ABAPProgramName_s == DebuggerProgram // Get logs by messege ID or program name\r\n    | extend Object = extract(@\":\\s\\(?(\\w{1,}\\s?-?\\w{1,})\", 1, MessageText_s, typeof(string)) // Extract Object\r\n    | extend Action = extract(@\":\\s\\(?(\\w{1,}\\s?-?\\w{1,}.{1,}?)\\)?\\(\", 1, MessageText_s, typeof(string)) // Extract Action\r\n    | extend Program = extract(@\"Prgm:(\\w{1,})\", 1, MessageText_s, typeof(string)) // Extract Program\r\n    | extend Function = extract(@\"Funct:(\\w{1,})\", 1, MessageText_s, typeof(string)) // Extract Function\r\n    | extend Include = extract(@\"Incl:(\\w{1,})\", 1, MessageText_s, typeof(string)) // Extract Include\r\n    | extend Line = extract(@\"Line:(\\w{1,})\", 1, MessageText_s, typeof(string)) // Extract Line\r\n    | project-rename SystemID = SystemID_s\r\n    | lookup kind=inner (SystemUnited) on SystemID\r\n    | order by TimeGenerated asc\r\n    | project TimeGenerated, User_s, MessageText_s, ABAPProgramName_s, TransactionCode_s, SystemID, SystemRole, SystemUsage,MessageID_s, AccountCustomEntity = Email_s, IPCustomEntity = TerminalIPv6_s, HostCustomEntity = Host_s, Object , Action, Program, Function, Include, Line",
                "queryFrequency": "PT3H",
                "queryPeriod": "PT3H",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "tactics": [
                    "Discovery"
                ]
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic23-id'))]",
            "apiVersion": "2020-01-01",
            "kind": "Scheduled",
            "location": "[parameters('workspace-location')]",
            "properties": {
                "description": "Identifies changes for runtime data during a debugging activity.\nSource Action: Activate Debug (\"/h\"), Select a field for change and update it's value.\n\n**Recommended for Production only**\n\n*Data Sources: SAPcon -  Audit Log*",
                "displayName": "(Preview) SAP - High - Data has Changed during Debugging Activity",
                "enabled": false,
                "query": "let Role = 'Production';\r\nlet AuditClasses = dynamic(['CUL']); // Audit Log Classes - Debug Change\r\nlet allSystemRoles = dynamic(['Sandbox','Developement','QualityAssurance','Training','Production']); // Available System Roles\r\nlet allSystemUsage = dynamic (['ERP','CRM','BW','Solman','Gateway','Enterprise Portal']); // Available System Usages\r\n// Get Relevant Systems from WatchList\r\nlet systemID = _GetWatchlist('SAP - Systems');\r\nlet fixedSID = datatable(SystemID:string, SystemRole:string, SystemUsage:string)\r\n// Maintain these if WatchList is not available    \r\n    [\"S4H\",\"Production\",\"ERP\",\r\n    \"XXX\",\"Sandbox\",\"BW\"]\r\n;\r\nlet UnitedSystem = \r\nunion systemID, fixedSID\r\n| summarize by SystemID, SystemRole, SystemUsage\r\n| where SystemRole == Role; // Recommended  is Production only\r\n//| where SystemRole in (allSystemRoles); // Use this for all system roles\r\nABAPAuditLog_CL \r\n| where MessageID_s in (AuditClasses)\r\n| project-rename SystemID = SystemID_s\r\n| lookup kind = inner (UnitedSystem) on SystemID\r\n| project TimeGenerated, User_s, MessageText_s, ABAPProgramName_s, TransactionCode_s, SystemID, SystemRole, SystemUsage,\r\nAccountCustomEntity = Email_s, IPCustomEntity = TerminalIPv6_s, HostCustomEntity = Host_s\r\n",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "tactics": [
                    "Execution",
                    "LateralMovement"
                ]
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic24-id'))]",
            "apiVersion": "2020-01-01",
            "kind": "Scheduled",
            "location": "[parameters('workspace-location')]",
            "properties": {
                "description": "Identifies changes for system configuration. \n\nSource Action:  Adapt system change options or software components modifcation using SE06 transaction code.\n\n*Data Sources: SAPcon -  Audit Log*",
                "displayName": "(Preview) SAP - High - System Configuration Change",
                "enabled": false,
                "query": "// Audit Log Classes - System Change Configuration\r\nlet AuditClasses = dynamic(['EU1']); // Relevant message\r\nABAPAuditLog_CL \r\n| where MessageID_s in (AuditClasses)\r\n| project \r\n// Details\r\nTimeGenerated, SystemID_s, User_s, TransactionCode_s, SoftwareComponent = Variable1_s, NewModifiabilityStatus = Variable2_s, MessageText_s,\r\nAccountCustomEntity = Email_s, IPCustomEntity = TerminalIPv6_s, HostCustomEntity = Host_s\r\n",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "tactics": [
                    "Exfiltration",
                    "DefenseEvasion",
                    "Persistence"
                ]
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic25-id'))]",
            "apiVersion": "2020-01-01",
            "kind": "Scheduled",
            "location": "[parameters('workspace-location')]",
            "properties": {
                "description": "Identifies changes for client configuration such as: Client role, Changes recording mode. \n\nSource Action:  Perofrm client configurations changes using SCC4 transaction code. \n\n*Data Sources: SAPcon -  Audit Log*",
                "displayName": "(Preview) SAP - High - Client Configuration Change",
                "enabled": false,
                "query": "// Audit Log Classes - Client Change Configuration\r\nlet AuditClasses = dynamic(['EU2']); // Relevent message\r\nABAPAuditLog_CL \r\n| where MessageID_s in (AuditClasses)\r\n| project-rename  ClientID = Variable1_s \r\n| parse Variable2_s with Currency \"|\" ClientRole \"|\" RecordingChanges \"|\" CrossClientObjectChanges \"|\" ClientCopyProtectionLevel \"|\" ProtectionSAPUpgrade \"|\" CATTeCATT \"|\"  LockedforCopy // Parse every object before the | char \r\n| project TimeGenerated, SystemID_s, User_s, ClientID, \r\nCurrency,ClientRole,RecordingChanges,CrossClientObjectChanges,ClientCopyProtectionLevel,CATTeCATT,LockedforCopy,ProtectionSAPUpgrade,\r\nMessageText_s,\r\nAccountCustomEntity = Email_s, IPCustomEntity = TerminalIPv6_s, HostCustomEntity = Host_s\r\n",
                "queryFrequency": "PT5H",
                "queryPeriod": "PT5H",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "tactics": [
                    "DefenseEvasion",
                    "Exfiltration",
                    "Persistence"
                ]
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic26-id'))]",
            "apiVersion": "2020-01-01",
            "kind": "Scheduled",
            "location": "[parameters('workspace-location')]",
            "properties": {
                "description": "Identifies changes  of sensitive privileged users in other users.\n\nSource Action: Change user details / authorizations using SU01.\n\nPriveleged users should be maintained in \"SAP - Privileged Users\" Watchlist\n\n*Data Sources: SAPcon -  Audit Log*",
                "displayName": "(Preview) SAP - High - Sensitive privileged user makes a change in other user",
                "enabled": false,
                "query": "// Audit Log Classes - User Master Changes\r\nlet AuditClasses = dynamic(['AU7', 'BUV', 'BUW', 'AU8', 'AU9', 'AUA', 'AUB', 'AUD', 'DUH', 'BU2']);\r\n// Get Relevant User from WatchList\r\nlet PrivelegedUsers = _GetWatchlist('SAP - Privileged Users');\r\nlet fixedUsers = datatable(User: string)\r\n    // Maintain these if WatchList is not available    \r\n    [\"SAP*\", \"DDIC\"]\r\n;\r\nlet UnitedPrivleged = union PrivelegedUsers, fixedUsers\r\n| summarize by User;\r\nABAPAuditLog_CL \r\n| where MessageID_s in (AuditClasses)\r\n| where User_s in (UnitedPrivleged) // The user that makes a change is a sensitive privileged user\r\n| project TimeGenerated, SystemID_s, ClientID_s, User_s, MessageText_s, MessageID_s,\r\n    AccountCustomEntity = Email_s, IPCustomEntity = TerminalIPv6_s, HostCustomEntity = Host_s\r\n",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "tactics": [
                    "PrivilegeEscalation",
                    "CredentialAccess"
                ]
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic27-id'))]",
            "apiVersion": "2020-01-01",
            "kind": "Scheduled",
            "location": "[parameters('workspace-location')]",
            "properties": {
                "description": "Identifies assignment of a critical authorization object value to a new user.\n\nSource Action: Assign a new user to a role which holds critical authorization values using SU01/PFCG.\n\nCritical authorization objects should be maintained in watchlist \"\"SAP - Critical Authorization Objects\"\"\n\n*Data Sources: SAPcon -  Change Documents Log*",
                "displayName": "(Preview) SAP - Medium - Critical authorizations assignment - New User Assignment",
                "enabled": false,
                "query": "// New Assigned Users\r\nlet ObjectClassRoles = 'PFCG';\r\nlet TableName = 'CD1251';\r\nlet UsersRoles = 'AGR_USERS';\r\nlet Insert = \"I\";\r\nlet NotInUse = 'NOT_IN_USE';\r\nlet logsThreshold = 3; // 3 seconds\r\n// Audit Log Classes - Authorizations for user changed\r\nlet AuditClasses = dynamic(['AUB','AUD']); // Authorizations for user &A changed. User Master Record Changed\r\n// Roles Change Documents - Extract Auth Object and Obj Field\r\nlet allHistory = ago(0d);\r\nlet alertSched = ago(6h); // Please maintain according to schedule\r\n// Maintain these if System doesn't have CR's\r\nlet fixedChangeDocs = datatable(User_s : string, ObjectClass_s : string, TableName_s : string, TypeofChange_Item_s : string , ChangedTableKey_s : string, ObjectID_s : string, TimeGenerated : datetime, ValueNew_s : string, SystemID_s : string)[];\r\nlet ChangeDocs = \r\nunion isfuzzy=true table(\"ABAPChangeDocsLog_CL\"), fixedChangeDocs;\r\nlet RolesAuthObject = ChangeDocs  \r\n    | where TimeGenerated <= allHistory\r\n    | where ObjectClass_s == ObjectClassRoles and TableName_s == TableName // Role-Obj-Profile-ObjField\r\n    | where TypeofChange_Item_s in ('J', 'I', 'U') //  Insert\r\n    | extend RoleObjProfileObjFieldVer = ChangedTableKey_s, Role = ObjectID_s\r\n    | extend ObjFieldValue = ValueNew_s    \r\n    | extend ObjField = trim(@\"\\s*?\", extract(@\"(^.{1,30})\\s*?(.{1,10})\\s*?(.{1,12})\\s*?(.{1,10})\\s*?\\d{6}\", 4, RoleObjProfileObjFieldVer, typeof(string)))\r\n    | extend AuthObject = trim(@\"\\s*?\", extract(@\"(^.{1,30})\\s*?(.{1,10})\\s*?(.{1,12})\\s*?(.{1,10})\\s*?\\d{6}\", 2, RoleObjProfileObjFieldVer, typeof(string)))\r\n    | summarize by SystemID_s, Role, AuthObject, ObjField, ObjFieldValue;\r\nlet ComplexAuth = _GetWatchlist('SAP - Critical Authorizations');\r\nlet SimpleAuth = _GetWatchlist('SAP - Critical Authorizations');\r\nlet fixedComplexAuth = datatable(AuthorizationObject: string, AuthorizationField: string, AuthorizationValue: string, ActivityField: string, Activity: string)\r\n    ['S_DEVELOP', 'OBJTYPE', 'DEBUG', 'ACTVT', '*',\r\n    'S_DEVELOP', 'OBJTYPE', 'DEBUG', 'ACTVT', '02']; // Maintain these if WatchList is not available\r\nlet fixedSimpleAuth = datatable(AuthorizationObject: string, AuthorizationField: string, AuthorizationValue: string, ActivityField: string, Activity: string)\r\n    ['S_TCODE', 'TCD', '*', 'NOT_IN_USE', '',\r\n    'S_TZONE', 'ACTVT', '*', 'NOT_IN_USE', '']; // Maintain these if WatchList is not available\r\nlet usersinRole = \r\n    ChangeDocs  \r\n    | where TimeGenerated >= alertSched\r\n    | where ObjectClass_s == ObjectClassRoles // Roles\r\n        and TableName_s == UsersRoles // Users Roles\r\n        and TypeofChange_Item_s == Insert // Insert \r\n    | extend UserAssigned = extract(@\"^.{1,33}\\s*?(.{1,12})\\s*?\\d{16}\", 1, ChangedTableKey_s)\r\n    | extend Role = ObjectID_s\r\n    | extend TimeGenUserinRole = TimeGenerated;\r\n    //| summarize by TimeGenerated, SystemID_s, ClientID_s, Role, UserAssigned, User_s\r\nlet RolesAuthObjectCheck =     \r\n        RolesAuthObject     \r\n        | extend ObjFieldVal = ObjFieldValue\r\n        | lookup kind = leftouter \r\n            (RolesAuthObject \r\n            | extend ActivityVal = ObjFieldValue)\r\n            on Role, AuthObject;\r\nlet complexScenario = \r\n    union ComplexAuth, fixedComplexAuth\r\n    | where ActivityField != NotInUse\r\n    | summarize by AuthorizationObject, AuthorizationField, AuthorizationValue, ActivityField, Activity\r\n    | lookup kind = inner (RolesAuthObjectCheck)\r\n        on $left.AuthorizationObject == $right.AuthObject \r\n        and $left.AuthorizationField == $right.ObjField \r\n        and $left.AuthorizationValue == $right.ObjFieldValue\r\n        and $left.ActivityField == $right.ObjField1\r\n        and $left.Activity == $right.ActivityVal;\r\nlet simpleScenario = \r\n    union SimpleAuth, fixedSimpleAuth\r\n    | where ActivityField == NotInUse\r\n    | summarize by AuthorizationObject, AuthorizationField, AuthorizationValue, ActivityField, Activity \r\n    | lookup kind = inner (RolesAuthObject)\r\n        on $left.AuthorizationObject == $right.AuthObject \r\n        and $left.AuthorizationField == $right.ObjField \r\n        and $left.AuthorizationValue == $right.ObjFieldValue;\r\nlet GetEntites =     \r\n    ABAPAuditLog_CL \r\n    | where TimeGenerated >= alertSched\r\n    | where MessageID_s in (AuditClasses)\r\n    | summarize by TimeGenerated, TerminalIPv6_s, ClientID_s, User_s, Host_s, Email_s\r\n    | extend TimeGenAudit = TimeGenerated;  \r\nunion complexScenario, simpleScenario\r\n| lookup kind = inner (usersinRole) on SystemID_s, Role\r\n| lookup kind = leftouter (GetEntites) on User_s\r\n| where abs(datetime_diff('second', TimeGenUserinRole, TimeGenAudit)) <= logsThreshold or\r\nisnull(TimeGenAudit)\r\n| project \r\n    // Details\r\nTimeGenUserinRole, SystemID_s, ClientID_s, Role, User_s, UserAssigned, AuthorizationObject, AuthorizationField, AuthorizationValue, ActivityField, Activity,\r\nAccountCustomEntity = Email_s, IPCustomEntity = TerminalIPv6_s, HostCustomEntity = Host_s",
                "queryFrequency": "PT6H",
                "queryPeriod": "PT6H",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "tactics": [
                    "PrivilegeEscalation"
                ]
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic28-id'))]",
            "apiVersion": "2020-01-01",
            "kind": "Scheduled",
            "location": "[parameters('workspace-location')]",
            "properties": {
                "description": "Identifies assignment of a critical authorization object value to a new user.\n\nSource Action: Assign a new authorization object / update existing one in a role using PFCG.\n\nCritical authorization objects should be maintained in watchlist \"\"SAP - Critical Authorization Objects\"\"\n\n*Data Sources: SAPcon -  Change Documents Log*",
                "displayName": "(Preview) SAP - Medium - Critical authorizations assignment - New Authorization Value",
                "enabled": false,
                "query": "// New Assigned Objects\r\nlet ObjectClassRoles = 'PFCG';\r\nlet TableName = 'CD1251';\r\nlet UsersRoles = 'AGR_USERS';\r\nlet Insert = \"I\";\r\nlet NotInUse = 'NOT_IN_USE';\r\nlet logsThreshold = 3; // 3 seconds\r\n// Audit Log Classes - Authorizations for user changed\r\nlet AuditClasses = dynamic(['AUR','AUT']); // Authorization/Authorization Profile &B created / changed.\r\n// Roles Change Documents - Extract Auth Object and Obj Field\r\nlet allHistory = ago(0d);\r\nlet alertSched = ago(6h); // Please maintain according to schedule\r\n// Maintain these if System doesn't have CR's\r\nlet fixedChangeDocs = datatable(User_s : string, ObjectClass_s : string, TableName_s : string, TypeofChange_Item_s : string , ChangedTableKey_s : string, ObjectID_s : string, TimeGenerated : datetime, ValueNew_s : string, SystemID_s : string)[];\r\nlet ChangeDocs = \r\nunion isfuzzy=true table(\"ABAPChangeDocsLog_CL\"), fixedChangeDocs;\r\nlet RolesAuthObject = ChangeDocs  \r\n    | where TimeGenerated >= alertSched\r\n    | where ObjectClass_s == ObjectClassRoles and TableName_s == TableName // Role-Obj-Profile-ObjField\r\n    | where TypeofChange_Item_s in ('J', 'I', 'U') //  Insert\r\n    | extend RoleObjProfileObjFieldVer = ChangedTableKey_s, Role = ObjectID_s\r\n    | extend ObjFieldValue = ValueNew_s    \r\n    | extend ObjField = trim(@\"\\s*?\", extract(@\"(^.{1,30})\\s*?(.{1,10})\\s*?(.{1,12})\\s*?(.{1,10})\\s*?\\d{6}\", 4, RoleObjProfileObjFieldVer, typeof(string)))\r\n    | extend AuthObject = trim(@\"\\s*?\", extract(@\"(^.{1,30})\\s*?(.{1,10})\\s*?(.{1,12})\\s*?(.{1,10})\\s*?\\d{6}\", 2, RoleObjProfileObjFieldVer, typeof(string)))\r\n    | extend TimeGenRoleAuth = TimeGenerated;\r\nlet ComplexAuth = _GetWatchlist('SAP - Critical Authorizations');\r\nlet SimpleAuth = _GetWatchlist('SAP - Critical Authorizations');\r\nlet fixedComplexAuth = datatable(AuthorizationObject: string, AuthorizationField: string, AuthorizationValue: string, ActivityField: string, Activity: string)\r\n    ['S_DEVELOP', 'OBJTYPE', 'DEBUG', 'ACTVT', '*',\r\n    'S_DEVELOP', 'OBJTYPE', 'DEBUG', 'ACTVT', '02']; // Maintain these if WatchList is not available\r\nlet fixedSimpleAuth = datatable(AuthorizationObject: string, AuthorizationField: string, AuthorizationValue: string, ActivityField: string, Activity: string)\r\n    ['S_TCODE', 'TCD', '*', 'NOT_IN_USE', '',\r\n    'S_TZONE', 'ACTVT', '*', 'NOT_IN_USE', '']; // Maintain these if WatchList is not available\r\nlet usersinRole = \r\n    ChangeDocs  \r\n    | where TimeGenerated <= allHistory\r\n    | where ObjectClass_s == ObjectClassRoles // Roles\r\n        and TableName_s == UsersRoles // Users Roles\r\n        and TypeofChange_Item_s == Insert // Insert \r\n    | extend UserAssigned = extract(@\"^.{1,33}\\s*?(.{1,12})\\s*?\\d{16}\", 1, ChangedTableKey_s)\r\n    | extend Role = ObjectID_s\r\n    | summarize by SystemID_s, Role, UserAssigned;\r\nlet RolesAuthObjectCheck =     \r\n        RolesAuthObject     \r\n        | extend ObjFieldVal = ObjFieldValue\r\n        | lookup kind = leftouter \r\n            (RolesAuthObject \r\n            | extend ActivityVal = ObjFieldValue)\r\n            on Role, AuthObject;\r\nlet complexScenario = union ComplexAuth, fixedComplexAuth\r\n    | where ActivityField != NotInUse\r\n    | summarize by AuthorizationObject, AuthorizationField, AuthorizationValue, ActivityField, Activity\r\n    | lookup kind = inner (RolesAuthObjectCheck)\r\n        on $left.AuthorizationObject == $right.AuthObject \r\n        and $left.AuthorizationField == $right.ObjField \r\n        and $left.AuthorizationValue == $right.ObjFieldValue\r\n        and $left.ActivityField == $right.ObjField1\r\n        and $left.Activity == $right.ActivityVal;\r\nlet simpleScenario = \r\n    union SimpleAuth, fixedSimpleAuth\r\n    | where ActivityField == NotInUse\r\n    | summarize by AuthorizationObject, AuthorizationField, AuthorizationValue, ActivityField, Activity \r\n    | lookup  kind = inner (RolesAuthObject)\r\n        on $left.AuthorizationObject == $right.AuthObject \r\n        and $left.AuthorizationField == $right.ObjField \r\n        and $left.AuthorizationValue == $right.ObjFieldValue;\r\nlet GetEntities =\r\n    ABAPAuditLog_CL \r\n    | where MessageID_s in (AuditClasses)\r\n    | summarize by TimeGenerated, ClientID_s, TerminalIPv6_s, User_s, Host_s, Email_s\r\n    | extend TimeGenAudit = TimeGenerated;\r\nunion complexScenario, simpleScenario\r\n| lookup kind = inner (usersinRole) on SystemID_s, Role\r\n| lookup kind = leftouter (GetEntities) on User_s\r\n| where abs(datetime_diff('second', TimeGenRoleAuth, TimeGenAudit)) <= logsThreshold or\r\nisnull(TimeGenAudit)\r\n| project \r\n    // Details\r\nTimeGenRoleAuth, SystemID_s, ClientID_s, Role, User_s, UserAssigned, AuthorizationObject, AuthorizationField, AuthorizationValue, ActivityField, Activity,AccountCustomEntity = Email_s, IPCustomEntity = TerminalIPv6_s, HostCustomEntity = Host_s",
                "queryFrequency": "PT6H",
                "queryPeriod": "PT6H",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "tactics": [
                    "PrivilegeEscalation"
                ]
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic29-id'))]",
            "apiVersion": "2020-01-01",
            "kind": "Scheduled",
            "location": "[parameters('workspace-location')]",
            "properties": {
                "description": "Identifies multiple files downloads for a user within a specific timerange.\n\nSource Action: Download multiple files while using SAPGui to Excel/Lists etc.\n\n*Data Sources: SAPcon -  Audit Log*",
                "displayName": "(Preview) SAP - Medium - Multiple Files Download",
                "enabled": false,
                "query": "// Define variables\r\nlet NumberOfDownloads = 10; // Number of downloads of user as threshold\r\nlet HoursBucket = 2h; // How much time between buckets\r\nlet AuditClasses = dynamic([\"AUY\"]); // Relevant message\r\n// Query logic\r\nABAPAuditLog_CL // Get all downloads\r\n| where MessageID_s in (AuditClasses)\r\n| summarize DownloadsByUser = count() by bin(TimeGenerated, HoursBucket), SystemID_s, ClientID_s, User_s, TerminalIPv6_s, Email_s, Host_s\r\n| where DownloadsByUser >= NumberOfDownloads // User downloaded more than threshold\r\n| project SystemID_s, ClientID_s, User_s, AccountCustomEntity = Email_s, IPCustomEntity = TerminalIPv6_s, HostCustomEntity = Host_s,DownloadsByUser",
                "queryFrequency": "PT12H",
                "queryPeriod": "PT12H",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "tactics": [
                    "Collection",
                    "Exfiltration",
                    "CredentialAccess"
                ]
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic30-id'))]",
            "apiVersion": "2020-01-01",
            "kind": "Scheduled",
            "location": "[parameters('workspace-location')]",
            "properties": {
                "description": "Identifies multiple spools for a user within a specific timerange.\n\nSource Action: Create and execute multiple Spool Jobs from any type by a user. (SP01)\n\n*Data Sources: SAPcon -  Spool Log*",
                "displayName": "(Preview) SAP - Medium - Multiple Spool Executions",
                "enabled": false,
                "query": "// Define variables\r\nlet AuditLogIn = dynamic(['AU1', 'AU5']); // Messages of connect with user\r\nlet NumberOfRequests = 3; // Number of requests as threshold\r\nlet HoursBucket = 2h; // // How much time between buckets\r\n// Query logic\r\nlet LastLogin = \r\nABAPAuditLog_CL\r\n| where MessageID_s in (AuditLogIn)\r\n| summarize TimeGenerated = arg_max(TimeGenerated, *) by SystemID_s, ClientID_s, User_s; // Get last connection date for user\r\nABAPSpoolLog_CL // Get all spool requests\r\n| summarize UserRequests = count() by bin(TimeGenerated, HoursBucket), SystemID_s, ClientID_s, User_s\r\n| where UserRequests >= NumberOfRequests // User requested to print more than threshold\r\n| lookup kind=inner LastLogin on User_s // Check IP of last login\r\n| project TimeGenerated, SystemID_s, ClientID_s, User_s, AccountCustomEntity = Email_s, IPCustomEntity = TerminalIPv6_s, HostCustomEntity = Host_s, UserRequests",
                "queryFrequency": "PT12H",
                "queryPeriod": "PT12H",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "tactics": [
                    "CredentialAccess",
                    "Collection",
                    "Exfiltration"
                ]
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic31-id'))]",
            "apiVersion": "2020-01-01",
            "kind": "Scheduled",
            "location": "[parameters('workspace-location')]",
            "properties": {
                "description": "Identifies multiple spools for a user within a specific timerange.\n\nSource Action: Create and execute multiple Spool Jobs from any type by a user. (SP01)\n\n*Data Sources: SAPcon -  Spool Log*",
                "displayName": "(Preview) SAP - Medium - Multiple Spool Output Executions",
                "enabled": false,
                "query": "// Define variables\r\nlet AuditLogIn = dynamic(['AU1', 'AU5']); // Messeges of connect with user\r\nlet NumberOfPrints = 3; // Number of prints as threshold\r\nlet HoursBucket = 2h; // // How much time between buckets\r\n// Query logic\r\nlet LastLogin =\r\nABAPAuditLog_CL\r\n| where MessageID_s in (AuditLogIn)\r\n| summarize arg_max(TimeGenerated, *) by SystemID_s, ClientID_s, User_s; // Get last connection date for user\r\nABAPSpoolOutputLog_CL // Get all spool outputs\r\n| summarize UserPrints = count() by bin(TimeGenerated, HoursBucket), SystemID_s, ClientID_s, User_s\r\n| where UserPrints >= NumberOfPrints // User requested to print more than threshold\r\n| lookup kind=inner LastLogin on User_s // Get IP of last login\r\n| project TimeGenerated, SystemID_s, ClientID_s, User_s, AccountCustomEntity = Email_s, IPCustomEntity = TerminalIPv6_s, HostCustomEntity = Host_s, UserPrints",
                "queryFrequency": "PT12H",
                "queryPeriod": "PT12H",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "tactics": [
                    "CredentialAccess",
                    "Collection",
                    "Exfiltration"
                ]
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic32-id'))]",
            "apiVersion": "2020-01-01",
            "kind": "Scheduled",
            "location": "[parameters('workspace-location')]",
            "properties": {
                "description": "Identifies a user printing a spool request which was created by someone else.\n\nSource Action: Create a Spool Request using one user, Output it in using another user.\n\n*Data Sources: SAPcon -  Spool Log*\n*Data Sources: SAPcon -  Spool Output Log*",
                "displayName": "(Preview) SAP - Medium - Spool Takeover",
                "enabled": false,
                "query": "// Define variables\r\nlet AuditLogIn = dynamic(['AU1', 'AU5']); // Messages of connect with user\r\n// Query logic\r\nlet LastLogin = \r\nABAPAuditLog_CL\r\n| where MessageID_s in (AuditLogIn)\r\n| summarize TimeGenerated = arg_max(TimeGenerated, *) by SystemID_s, ClientID_s, User_s; // Get last connection date for user\r\n// Query Logic\r\nABAPSpoolOutputLog_CL // Get all spool outputs\r\n| lookup kind=inner ABAPSpoolLog_CL on SpoolRequestNumber_d\r\n| lookup kind=inner LastLogin on User_s\r\n| where User_s != User_s1 // The user that created the request is not the one that printed it\r\n| project TimeGenerated, SystemID_s, ClientID_s, UserCreated = User_s1, UserPrinted = User_s, SpoolRequestNumber_d, AccountCustomEntity = Email_s, IPCustomEntity = TerminalIPv6_s, HostCustomEntity = Host_s",
                "queryFrequency": "PT12H",
                "queryPeriod": "PT12H",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "tactics": [
                    "Collection",
                    "Exfiltration",
                    "CommandAndControl"
                ]
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic33-id'))]",
            "apiVersion": "2020-01-01",
            "kind": "Scheduled",
            "location": "[parameters('workspace-location')]",
            "properties": {
                "description": "Identifies a user creating and using other users.\n\nSource Action: Create a user using SU01. Login using the newly created user from the same IP.\n\n*Data Sources: SAPcon -  Audit Log*",
                "displayName": "(Preview) SAP - High - User Creates and uses new user",
                "enabled": false,
                "query": "// Define Variables\r\nlet MinutesThreshold = 15; // Difference by minutes between Create and Connect\r\nlet AuditUserCreated = dynamic(['AU7']); // Message of create user\r\nlet AuditLogIn = dynamic(['AU1', 'AU5']); // Messages of connect with user\r\n// Query Logic\r\nlet UserCreated = // Get users created\r\nABAPAuditLog_CL\r\n| where MessageID_s in (AuditUserCreated)\r\n| project-rename UserCreationTimeGenerated = TimeGenerated, UserCreated = Variable1_s;\r\nABAPAuditLog_CL // Get users connections\r\n| where MessageID_s in (AuditLogIn)\r\n| lookup kind=inner UserCreated on TerminalIPv6_s,$left.User_s == $right.UserCreated // Lookup of user created to user log in\r\n| where abs(datetime_diff('Minute', TimeGenerated, UserCreationTimeGenerated)) <= MinutesThreshold // Connect after creation\r\n| summarize by TimeGenerated, SystemID_s, ClientID_s, UserAction = User_s1, UserCreated = User_s, AccountCustomEntity = Email_s, IPCustomEntity = TerminalIPv6_s, HostCustomEntity = Host_s",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "tactics": [
                    "Discovery",
                    "PreAttack",
                    "InitialAccess"
                ]
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic34-id'))]",
            "apiVersion": "2020-01-01",
            "kind": "Scheduled",
            "location": "[parameters('workspace-location')]",
            "properties": {
                "description": "Identifies a user unlock and usage by other users.\n\nSource Action: Unlock a user using SU01. Login using the unlocked user from the same IP.\n\n*Data Sources: SAPcon -  Audit Log*\n*Data Sources: SAPcon -  Change Documents Log*",
                "displayName": "(Preview) SAP - High - User Unlocks and uses other users",
                "enabled": false,
                "query": "// Define variables\r\nlet MinutesThreshold = 15; // Difference by minutes between Unlock and Connect\r\nlet AuditUserUnlocked = dynamic(['AUA']); // Message of unlock user\r\nlet AuditLogIn = dynamic(['AU1', 'AU5']); // Messages of connect with user\r\n// Query Logic\r\nlet UserUnlocked = // Get users unlocked\r\nABAPAuditLog_CL\r\n| where MessageID_s in (AuditUserUnlocked)\r\n| project-rename UserUnlockTimeGenerated = TimeGenerated, UserUnlocked = Variable1_s;\r\nABAPAuditLog_CL // Get users connections\r\n| where MessageID_s in (AuditLogIn)\r\n| lookup kind=inner UserUnlocked on TerminalIPv6_s, $left.User_s == $right.UserUnlocked // Lookup of user unlocked to user log in\r\n| where abs(datetime_diff('Minute', TimeGenerated, UserUnlockTimeGenerated)) <= MinutesThreshold // Connect after unlock\r\n| summarize by TimeGenerated, SystemID_s, ClientID_s, UserAction = User_s1, UserUnlocked = User_s, AccountCustomEntity = Email_s, IPCustomEntity = TerminalIPv6_s, HostCustomEntity = Host_s",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "tactics": [
                    "PreAttack",
                    "InitialAccess",
                    "Discovery",
                    "LateralMovement"
                ]
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic35-id'))]",
            "apiVersion": "2020-01-01",
            "kind": "Scheduled",
            "location": "[parameters('workspace-location')]",
            "properties": {
                "description": "Identifies generic table access by RFC logon\n\nSource Action: Open table contents using SE11/SE16/SE16N.\n\n**Recommended for Production only**\n\nTables should be maintained in \"SAP - Sensitive Tables\" Watchlist.\n\n*Data Sources: SAPcon -  Audit Log*",
                "displayName": "(Preview) SAP - Medium - Sensitive Tables Direct Access By RFC Logon",
                "enabled": false,
                "query": "// Define variables\r\nlet Role = \"Production\";\r\nlet AuditClasses = dynamic(['CUZ']); // RFC, Audit Log Classes - Generic Table Access \r\nlet allSystemRoles = dynamic(['Sandbox','Developement','QualityAssurance','Training','Production']); // Available System Roles\r\nlet allSystemUsage = dynamic (['ERP','CRM','BW','Solman','Gateway','Enterprise Portal']); // Available System Usages\r\n// Get Relevant Systems from WatchList\r\nlet systemID = _GetWatchlist('SAP - Systems');\r\nlet fixedSID = datatable(SystemID:string, SystemRole:string, SystemUsage:string)\r\n// Maintain these if WatchList is not available    \r\n    [\"S4H\",\"Production\",\"ERP\",\r\n    \"XXX\",\"Sandbox\",\"BW\"]\r\n; \r\n// Get Relevant Tables\r\nlet SensitiveTables = _GetWatchlist('SAP - Sensitive Tables');\r\nlet fixedTables = datatable(Table:string)\r\n// Maintain these if WatchList is not available    \r\n    [\"USR02\"]\r\n; \r\nlet RelSystemID = union systemID, fixedSID // Create a variable that stores relevent Systems\r\n| where SystemRole == Role // Reccommended is Production only\r\n//| where SystemRole in (allSystemRoles); // Use this for all system roles\r\n| summarize by SystemID;\r\nlet SensitiveUnionTables = union SensitiveTables, fixedTables // Create a variable that stores relevent sensitive tables\r\n    | summarize by Table;\r\n// Query logic\r\nABAPAuditLog_CL \r\n    | project-rename Table = Variable1_s, Activity = Variable2_s\r\n    | where MessageID_s in (AuditClasses)\r\n    | where SystemID_s in (RelSystemID)\r\n    | where Table in (SensitiveUnionTables)\r\n    | order by TimeGenerated asc\r\n    | project TimeGenerated, SystemID_s, ClientID_s, User_s, TransactionCode_s, ABAPProgramName_s, Table,   Activity, MessageText_s, MessageID_s,\r\nAccountCustomEntity = Email_s, IPCustomEntity = TerminalIPv6_s, HostCustomEntity = Host_s",
                "queryFrequency": "PT12H",
                "queryPeriod": "PT12H",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "tactics": [
                    "Collection",
                    "Exfiltration",
                    "CredentialAccess"
                ]
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic36-id'))]",
            "apiVersion": "2020-01-01",
            "kind": "Scheduled",
            "location": "[parameters('workspace-location')]",
            "properties": {
                "description": "Identifies password changes for privileged users.\n\nSource Action: Change Password for a user and login to the system.\n\nPriveleged users should be maintained in \"SAP - Privileged Users\" Watchlist\n\n*Data Sources: SAPcon -  Audit Log*",
                "displayName": "(Preview) SAP - High - Sensitive Users Password Change and Login",
                "enabled": false,
                "query": "// Define variables\r\nlet ChangeAndLoginThreshold = 5; // Difference by minutes between Change in user to connect\r\nlet LoginAndRestThreshold = 3; // Difference by minutes between Connect and password reset\r\nlet AuditUserChange = dynamic(['AUD']); // Message of change in user\r\nlet AuditLogIn = dynamic(['AU1', 'AU5']); // Messages of connect with user\r\nlet AuditUserPassReset = dynamic(['BU2']); // Message of user password change\r\nlet PrivUsers = _GetWatchlist(\"SAP - Privileged Users\");\r\nlet fixedUsers = datatable(User: string)\r\n    // Maintain these if WatchList is not available    \r\n    [\"SAP*\", \"DDIC\"]\r\n;\r\nlet UnitedPrivleged = toscalar(union PrivUsers, fixedUsers\r\n| summarize Users = make_list(User));\r\n// Query Logic\r\nlet UserChange = // Get users change activity\r\nABAPAuditLog_CL\r\n| where MessageID_s in (AuditUserChange)\r\n| where Variable1_s in (UnitedPrivleged) // The user with the changed password is privileged user\r\n| project-rename UserChangeTimeGenerated = TimeGenerated, UserPassChanged = Variable1_s;\r\nlet UserLogIn = // Get users connections\r\nABAPAuditLog_CL\r\n| where MessageID_s in (AuditLogIn)\r\n| project-rename UserLogInTimeGenerated = TimeGenerated;\r\nABAPAuditLog_CL // Get users password reset\r\n| where MessageID_s in (AuditUserPassReset)\r\n| where User_s in (UnitedPrivleged) // The user with the changed password is privileged user\r\n| lookup kind=inner UserLogIn on TerminalIPv6_s, User_s // Lookup of user reset to user login\r\n| lookup kind=inner UserChange on TerminalIPv6_s, $left.User_s == $right.UserPassChanged // Lookup of user reset to user change\r\n| where abs(datetime_diff('Minute', UserChangeTimeGenerated, UserLogInTimeGenerated)) <= ChangeAndLoginThreshold // Connect after a change in user\r\n| where abs(datetime_diff('Minute', TimeGenerated, UserLogInTimeGenerated)) <= LoginAndRestThreshold // Change password after connection\r\n| summarize by TimeGenerated, SystemID_s, ClientID_s, UserAction = User_s1, PrivUserPassChanged = User_s, AccountCustomEntity = Email_s, IPCustomEntity = TerminalIPv6_s, HostCustomEntity = Host_s\r\n",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "tactics": [
                    "Impact",
                    "CommandAndControl",
                    "PrivilegeEscalation"
                ]
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic37-id'))]",
            "apiVersion": "2020-01-01",
            "kind": "Scheduled",
            "location": "[parameters('workspace-location')]",
            "properties": {
                "description": " Identifies Insecure FTP servers configuration - FTP Whitelist is empty / Contains Placeholders.\n\nSource Action: Do not maintain / maintain values which contains placeholders in table SAPFTP_SERVERS using maintenance view SAPFTP_SERVERS_V. (SM30)\n\n*Data Sources: SAPcon -  Audit Log*",
                "displayName": "(Preview) SAP - Medium - Insecure FTP servers configuration",
                "enabled": false,
                "query": "// Define variables\r\nlet AuditClasses = dynamic(['DU1', 'DU2']); // Messages of FTP Whitelist is empty / Contains Placeholders\r\n// Query logic\r\nABAPAuditLog_CL\r\n| where MessageID_s in (AuditClasses)\r\n| project TimeGenerated, SystemID_s, ClientID_s, AccountCustomEntity = Email_s, IPCustomEntity = TerminalIPv6_s, HostCustomEntity = Host_s, Reason = MessageText_s",
                "queryFrequency": "PT6H",
                "queryPeriod": "PT6H",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "tactics": [
                    "InitialAccess",
                    "CommandAndControl"
                ]
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic38-id'))]",
            "apiVersion": "2020-01-01",
            "kind": "Scheduled",
            "location": "[parameters('workspace-location')]",
            "properties": {
                "description": "Identifies FTP connection for non authorized server.\nMaintain new Watchlist, similar to SAPFTP_SERVERS \nSource Action: Create a new FTP connection e.g. by using Function Module FTP_CONNECT.\n\n*Data Sources: SAPcon -  Audit Log*",
                "displayName": "(Preview) SAP - Medium - FTP for non authorized servers",
                "enabled": false,
                "query": "// Define variables\r\nlet AuditClasses = dynamic(['DU8']); // Message of Successfull FTP Connection\r\nlet FTPSafeConnections = _GetWatchlist(\"SAP - FTP Servers\");\r\nlet fixedConnections = datatable(Client: string, Description: string,\r\nFTP_Server_Name: string, FTP_Server_Port: string)\r\n    // Maintain these if WatchList is not available    \r\n    [100, \"description\", \"http://ourorgftpserver.com/\", 22]\r\n;\r\nlet UnitedConnections = toscalar(union kind=inner FTPSafeConnections, fixedConnections | summarize Connections = make_set(FTP_Server_Name));\r\n// Query logic\r\nABAPAuditLog_CL\r\n| where MessageID_s in (AuditClasses)\r\n| where TerminalIPv6_s !in (UnitedConnections) // The IP is unknown\r\n| project TimeGenerated, SystemID_s, ClientID_s,AccountCustomEntity = Email_s,IPCustomEntity = TerminalIPv6_s, HostCustomEntity = Host_s",
                "queryFrequency": "PT6H",
                "queryPeriod": "PT6H",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "tactics": [
                    "Discovery",
                    "InitialAccess",
                    "CommandAndControl"
                ]
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic39-id'))]",
            "apiVersion": "2020-01-01",
            "kind": "Scheduled",
            "location": "[parameters('workspace-location')]",
            "properties": {
                "description": "Identifies execution of dynamic ABAP programming. For example, ABAP code was dynamically created/changed/deleted. Source Action: Create an ABAP Report which uses ABAP program generation commands such as \"INSERT REPORT\" and execute it. Excluded Transaction Codes can be maintained in \"SAP - Transactions for ABAP Generations\" watchlist. *Data Sources: SAPcon - Audit Log*",
                "displayName": "(Preview) SAP - Low - Dynamic ABAP Program",
                "enabled": false,
                "query": "// Define variables\r\nlet AuditClasses = dynamic(['BU4']); // Message of dynamic ABAP program\r\nlet TranForABAPGen = _GetWatchlist(\"SAP - Transactions for ABAP Generations\"); // Transactions to exclude\r\n// Maintain if watchlist is not available\r\nlet fixedTran = datatable(TransactionCode:string)['SE11','SE12', \"SE16\", \"SE16N\"];\r\nlet UnitedTransactions =\r\ntoscalar(union TranForABAPGen, fixedTran\r\n| summarize Transactions = make_set(TransactionCode));\r\n// Query logic\r\nABAPAuditLog_CL\r\n| where MessageID_s in (AuditClasses)\r\n| where TransactionCode_s !in (UnitedTransactions) // Exclude transactions\r\n| project TimeGenerated, SystemID_s, ClientID_s, AccountCustomEntity = Email_s, IPCustomEntity = TerminalIPv6_s, HostCustomEntity = Host_s, ABAPProgramName_s",
                "queryFrequency": "PT6H",
                "queryPeriod": "PT6H",
                "severity": "Low",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "tactics": [
                    "Discovery",
                    "CommandAndControl",
                    "Impact"
                ]
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic40-id'))]",
            "apiVersion": "2020-01-01",
            "kind": "Scheduled",
            "location": "[parameters('workspace-location')]",
            "properties": {
                "description": "Identifies execution of RFC using dynamic destinations. Source Action: Execute an ABAP report which is using dynamic destinations (cl_dynamic_destination). Sample report: DEMO_RFC_DYNAMIC_DEST. *Data Sources: SAPcon - Audit Log*",
                "displayName": "(Preview) SAP - Low - Dynamic RFC Destination",
                "enabled": false,
                "query": "// Define variables\r\nlet AuditClasses = dynamic(['FU1']); // Message of dynamic RFC execution using dynamic destination\r\n// Query logic\r\nABAPAuditLog_CL\r\n| where MessageID_s in (AuditClasses)\r\n| parse Variable3_s with \"id=\" Created_RFC_Name\r\n| project TimeGenerated, SystemID_s, ClientID_s, User_s, AccountCustomEntity = Email_s, IPCustomEntity = TerminalIPv6_s, HostCustomEntity = Host_s, ABAPProgramName_s, ExecutedProgram = Variable2_s, Created_RFC_Name",
                "queryFrequency": "PT6H",
                "queryPeriod": "PT6H",
                "severity": "Low",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "tactics": [
                    "Collection",
                    "Exfiltration"
                ]
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic41-id'))]",
            "apiVersion": "2020-01-01",
            "kind": "Scheduled",
            "location": "[parameters('workspace-location')]",
            "properties": {
                "description": "Identifies SPNego Replay Attack.\n\n*Data Sources: SAPcon -  Audit Log*",
                "displayName": "(Preview) SAP - High - SPNego Attack",
                "enabled": false,
                "query": "// Define variables\r\nlet AuditClasses = dynamic(['BUI']); // Message of SPNego\r\n// Query logic\r\nABAPAuditLog_CL \r\n| where MessageID_s in (AuditClasses)\r\n| project TimeGenerated, SystemID_s, ClientID_s,  AccountCustomEntity = Email_s, IPCustomEntity = TerminalIPv6_s, HostCustomEntity = Host_s",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "tactics": [
                    "Impact",
                    "LateralMovement"
                ]
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic42-id'))]",
            "apiVersion": "2020-01-01",
            "kind": "Scheduled",
            "location": "[parameters('workspace-location')]",
            "properties": {
                "description": "Identifies changes in sensitive roles. \nSource Action: Change a role using PFCG.\nSensitive roles should be maintained in \"SAP - Sensitive Roles\" Watchlist\n\n*Data Sources: SAPcon - Change Documents Log*",
                "displayName": "(Preview) SAP - Medium - Sensitive Roles Changes",
                "enabled": false,
                "query": "// Define variables\r\nlet RoleObjectClass = \"PFCG\";\r\nlet ChangeType = \"U\";\r\nlet AuditLogIn = dynamic(['AU1', 'AU5']); // Messages of connect with user\r\nlet SensitiveRoles = _GetWatchlist(\"SAP - Sensitive Roles\");\r\n// Maintain if watchlist is not available\r\nlet fixedRoles = datatable(Role: string)['SAP_BC_BASIS_ADMIN', 'SAP_BC_AUTH_PROFILE_ADMIN'];\r\nlet UnitedRoles =\r\ntoscalar(union fixedRoles, SensitiveRoles\r\n| summarize Roles = make_list(Role));\r\n// Query logic\r\nlet LastLogin = \r\nABAPAuditLog_CL\r\n| where MessageID_s in (AuditLogIn)\r\n| summarize TimeGenerated = arg_max(TimeGenerated, *) by SystemID_s, ClientID_s, User_s; // Get last connection date for user\r\nABAPChangeDocsLog_CL\r\n| where ObjectClass_s == RoleObjectClass // Relevant role object class\r\n| where ObjectID_s in (UnitedRoles) // Role is sensitive\r\n| where TypeofChange_Item_s == ChangeType\r\n| extend AuthorizationObj = extract(@\"\\S+\\s+(\\S+)\\s+\", 1, ChangedTableKey_s, typeof(string)) // Extract Authorization Object\r\n| extend Authorization = extract(@\"\\S+\\s+\\S+\\s+(\\S+\\d+)\", 1, ChangedTableKey_s, typeof(string)) // Extract Authorization\r\n| lookup kind=inner LastLogin on User_s // Get IP\r\n| project TimeGenerated, SystemID_s, ClientID_s, AccountCustomEntity = Email_s, IPCustomEntity = TerminalIPv6_s, HostCustomEntity = Host_s, Role = ObjectID_s, FieldName_s , AuthorizationObj, Authorization, OldValue = ValueOld_s, NewValue = ValueNew_s",
                "queryFrequency": "PT12H",
                "queryPeriod": "PT12H",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "tactics": [
                    "Impact",
                    "PrivilegeEscalation",
                    "Persistence"
                ]
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic43-id'))]",
            "apiVersion": "2020-01-01",
            "kind": "Scheduled",
            "location": "[parameters('workspace-location')]",
            "properties": {
                "description": "Identifies execution of an obsolete/insecure ABAP program.\nSource Action: Execute a program directly using SE38/SA38/SE80 or by using a background job.\n**Recommended for Production only**\nObsolete programs should be maintained in \"SAP - Obsolete Programs\" Watchlist\n*Data Sources: SAPcon -  Audit Log*",
                "displayName": "(Preview) SAP - Medium - Execution of Obsolete/Insecure Program",
                "enabled": false,
                "query": "// Define Variables\r\nlet AuditClasses = dynamic(['AUW']); // Audit Log Classes - Report Started\r\nlet ObsoletePrograms = _GetWatchlist(\"SAP - Obsolete Programs\");\r\n// Maintain if watchlist is not available\r\nlet fixedObPrograms = datatable(ABAPProgram:string)['RSAU_READ_LOG'];\r\nlet UnitedPrograms =\r\ntoscalar(union fixedObPrograms, ObsoletePrograms\r\n| summarize Programs = make_set(ABAPProgram));\r\n// Query logic\r\nABAPAuditLog_CL \r\n| where MessageID_s in (AuditClasses)\r\n| where ABAPProgramName_s in (UnitedPrograms) // The program is obsolete\r\n| project TimeGenerated, SystemID_s, ClientID_s, User_s, ABAPProgramName_s, MessageText_s, TransactionCode_s, MessageID_s, AccountCustomEntity = Email_s, IPCustomEntity = TerminalIPv6_s, HostCustomEntity = Host_s",
                "queryFrequency": "PT2H",
                "queryPeriod": "PT2H",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "tactics": [
                    "Discovery",
                    "CommandAndControl"
                ]
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic44-id'))]",
            "apiVersion": "2020-01-01",
            "kind": "Scheduled",
            "location": "[parameters('workspace-location')]",
            "properties": {
                "description": "Identifies execution of an obsolete/insecure ABAP Function Module.\n\nSource Action: Execute an obsolete/insecure function module directly using SE37.\n\n**Recommended for Production only**\n\nObsolete functions should be maintained in \"SAP - Obsolete Function Modules\" Watchlist.\nTable logging changes should be activated for table \"EUFUNC\" in backend. (SE13)\n\n*Data Sources: SAPcon -  Table Data Log*",
                "displayName": "(Preview) SAP - Medium - Execution of Obsolete or Insecure Function Module",
                "enabled": false,
                "query": "// Define variables\r\nlet RelTable = \"EUFUNC\"; // Relevant table\r\nlet AuditLogIn = dynamic(['AU1', 'AU5']); // Messages of connect with user\r\nlet ObsoleteModules =  _GetWatchlist('SAP - Obsolete Function Modules');\r\n// Maintain if watchlist is not available\r\nlet fixedModules = datatable(FunctionModule:string)['TH_SAPREL','TH_SAPREL2', 'TH_SAPREL3','SUSR_RFC_USER_INTERFACE','RFC_ABAP_INSTALL_AND_RUN']; \r\nlet UnitedModules =\r\ntoscalar(union fixedModules, ObsoleteModules\r\n| summarize FunctionModules =  make_set(FunctionModule));\r\n// Query logic\r\nlet LastLogin = \r\nABAPAuditLog_CL\r\n| where MessageID_s in (AuditLogIn)\r\n| summarize TimeGenerated = arg_max(TimeGenerated, *) by SystemID_s, ClientID_s, User_s; // Get last connection date for user\r\nABAPTableDataLog_CL\r\n| where TableName_s == RelTable\r\n| extend Module = extract(@\"\\s+(.{1,}\\b)\\s+\", 1, LogKey_s, typeof(string)) // Extract Function Module\r\n| extend FunctionGroup = extract(@\"^FL([^\\s]*)\\s\", 1, LogKey_s, typeof(string)) // Extract Function Group\r\n| extend ExecutionVariant = extract(@\"\\b(\\w+)$\", 1, LogKey_s, typeof(string)) // Extract Execution Varient\r\n| where Module in (UnitedModules) // Module is obsolete\r\n| lookup kind=inner LastLogin on $left.UserName_s == $right.User_s\r\n| project TimeGenerated, SystemID_s, ClientID_s,  AccountCustomEntity = Email_s, IPCustomEntity = TerminalIPv6_s, HostCustomEntity = Host_s, Module, FunctionGroup, ExecutionVariant",
                "queryFrequency": "PT2H",
                "queryPeriod": "PT2H",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "tactics": [
                    "Discovery",
                    "CommandAndControl"
                ]
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic45-id'))]",
            "apiVersion": "2020-01-01",
            "kind": "Scheduled",
            "location": "[parameters('workspace-location')]",
            "properties": {
                "description": "Identifies execution of a sensitive ABAP Function Module.\n\nSource Action: Execute a sensitive function module directly using SE37.\n\n**Recommended for Production only**\n\nSensitive functions should be maintained in \"SAP - Sensitive Function Modules\" Watchlist.\nTable logging changes should be activated for table \"EUFUNC\" in backend. (SE13)\n\n*Data Sources: SAPcon -  Table Data Log*",
                "displayName": "(Preview) SAP - High - Execution of Sensitive Function Module",
                "enabled": false,
                "query": "// Define variables\r\nlet RelTable = \"EUFUNC\"; // Relevant table\r\nlet AuditLogIn = dynamic(['AU1', 'AU5']); // Messages of connect with user\r\nlet SenseModules =  _GetWatchlist('SAP - Sensitive Function Modules');\r\nlet fixedModules = datatable(FunctionModule:string)['RSAU_CLEAR_AUDIT_LOG','BAPI_USER_CREATE', 'RFC_GET_TABLE_ENTRIES']; \r\nlet UnitedModules =\r\ntoscalar(union fixedModules, SenseModules\r\n| summarize FunctionModules =  make_set(FunctionModule));\r\n// Query logic\r\nlet LastLogin = \r\nABAPAuditLog_CL\r\n| where MessageID_s in (AuditLogIn)\r\n| summarize TimeGenerated = arg_max(TimeGenerated, *) by SystemID_s, ClientID_s, User_s; // Get last connection date for user\r\nABAPTableDataLog_CL\r\n| where TableName_s == RelTable \r\n| extend Module = extract(@\"\\s+(.{1,}\\b)\\s+\", 1, LogKey_s, typeof(string)) // Extract Function Module\r\n| extend FunctionGroup = extract(@\"^FL([^\\s]*)\\s\", 1, LogKey_s, typeof(string)) // Extract Function Group\r\n| extend ExecutionVariant = extract(@\"\\b(\\w+)$\", 1, LogKey_s, typeof(string)) // Extract Execution Varient\r\n| where Module in (UnitedModules) // Module is sensitive\r\n| lookup kind=inner LastLogin on $left.UserName_s == $right.User_s\r\n| project TimeGenerated, SystemID_s, ClientID_s,  AccountCustomEntity = Email_s, IPCustomEntity = TerminalIPv6_s, HostCustomEntity = Host_s, Module, FunctionGroup, ExecutionVariant",
                "queryFrequency": "PT2H",
                "queryPeriod": "PT2H",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "tactics": [
                    "Discovery",
                    "CommandAndControl"
                ]
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic46-id'))]",
            "apiVersion": "2020-01-01",
            "kind": "Scheduled",
            "location": "[parameters('workspace-location')]",
            "properties": {
                "description": "Identifies activation or deactivation of ICF Services.\nSource Action: Activate or deactivate a service using SICF.\n*Data Sources: SAPcon - Table Data Log*",
                "displayName": "(Preview) SAP - High - Activation or Deactivation of ICF Service",
                "enabled": false,
                "query": "let ActivatedICF =\r\nABAPTableDataLog_CL\r\n| where TableName_s == \"ICFSERVLOC\"\r\n| lookup ABAPTableDataLog_CL on TimeGenerated, LogKey_s, DBLogID_s // Lookup for combining the data\r\n| where TableField_s == \"ICF_NAME\" // Service name\r\n| where TableField_s1 == \"ICFACTIVE\" // Active status\r\n| where OldValue_s == NewValue_s and OldValue_s != \"\" \r\n| where NewValue_s1 == \"X\" // Status is activated\r\n| project TimeGenerated, Service = NewValue_s, ICFServiceStatus = \"Activated\";\r\nABAPTableDataLog_CL\r\n| where TableName_s == \"ICFSERVLOC\"\r\n| lookup ABAPTableDataLog_CL on TimeGenerated, LogKey_s, DBLogID_s // Lookup for combining the data\r\n| where TableField_s == \"ICF_NAME\" // Service name\r\n| where TableField_s1 == \"ICFACTIVE\" // Active status\r\n| where OldValue_s1 == \"X\" // Was activated\r\n| where NewValue_s1 == \"\" // Not activated now\r\n| where OldValue_s == NewValue_s and OldValue_s != \"\"\r\n| project TimeGenerated, Service = NewValue_s, ICFServiceStatus = \"Deactivated\"\r\n| union ActivatedICF\r\n",
                "queryFrequency": "PT2H",
                "queryPeriod": "PT2H",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "tactics": [
                    "CommandAndControl",
                    "LateralMovement",
                    "Persistence"
                ]
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic47-id'))]",
            "apiVersion": "2020-01-01",
            "kind": "Scheduled",
            "location": "[parameters('workspace-location')]",
            "properties": {
                "description": "Identifies creation of ICF Services.\nSource Action: Create a service using SICF.\n*Data Sources: SAPcon - Table Data Log*",
                "displayName": "(Preview) SAP - High - New ICF Services",
                "enabled": false,
                "query": "ABAPTableDataLog_CL\r\n| where TableName_s == \"ICFSERVLOC\"\r\n| where TableField_s == \"ICF_NAME\" // Service name\r\n| where OldValue_s == \"\" and NewValue_s != \"\" // New value is inserted in name -> new service\r\n| order by TimeGenerated desc\r\n| project TimeGenerated, Service = NewValue_s",
                "queryFrequency": "PT2H",
                "queryPeriod": "PT2H",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "tactics": [
                    "CommandAndControl",
                    "Persistence",
                    "LateralMovement"
                ]
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic48-id'))]",
            "apiVersion": "2020-01-01",
            "kind": "Scheduled",
            "location": "[parameters('workspace-location')]",
            "properties": {
                "description": "Identifies creation of ICF Handlers.\nSource Action: Assign a new handler to a service using SICF.\n*Data Sources: SAPcon - Table Data Log*",
                "displayName": "(Preview) SAP - High - New ICF Service Handlers",
                "enabled": false,
                "query": "ABAPTableDataLog_CL\r\n| where TableName_s == \"ICFHANDLER\"\r\n| where TableField_s == \"ICF_NAME\" // Service name\r\n| where OldValue_s == \"\" and NewValue_s != \"\" // New value is inserted in name -> new service\r\n| order by TimeGenerated desc\r\n| project TimeGenerated, Service = NewValue_s",
                "queryFrequency": "PT2H",
                "queryPeriod": "PT2H",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "tactics": [
                    "Persistence",
                    "LateralMovement",
                    "CommandAndControl"
                ]
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic49-id'))]",
            "apiVersion": "2020-01-01",
            "kind": "Scheduled",
            "location": "[parameters('workspace-location')]",
            "properties": {
                "description": "Identifies SAP Notes implementation in the system.\n\nSource Action: Implement SAP Note using SNOTE/TCI.\n\n*Data Sources: SAPcon -  Change Requests*",
                "displayName": "(Preview) SAP - Informational - Lifecycle - SAP Notes were implemented in system",
                "enabled": false,
                "query": "// Define variables\r\nlet VarNote = \"NOTE\";\r\nlet AuditLogIn = dynamic(['AU1', 'AU5']); // Messages of connect with user\r\n// Query logic\r\nlet LastLogin = \r\nABAPAuditLog_CL\r\n| where MessageID_s in (AuditLogIn)\r\n| summarize TimeGenerated = arg_max(TimeGenerated, *) by SystemID_s, ClientID_s, User_s; // Get last connection date for user\r\nABAPCRLog_CL \r\n| where ObjectType_s == VarNote // Type is NOTE\r\n| lookup kind=inner LastLogin on $left.Owner_s == $right.User_s // Get last login details\r\n| summarize by TimeGenerated, SystemID_s, SystemNumber_s, ClientID_s, Owner_s, Request_s, Description_s, ObjectName_s, Category, Status_s, AccountCustomEntity = Email_s, IPCustomEntity = TerminalIPv6_s, HostCustomEntity = Host_s",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "severity": "Informational",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/Watchlists",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/','SAP - Critical Authorizations')]",
            "apiVersion": "2021-03-01-preview",
            "properties": {
                "description": "Critical Authorizations object which their assignment should be governed.",
                "displayName": "SAP - Critical Authorizations",
                "source": "CSV",
                "provider": "Microsoft",
                "numberOfLinesToSkip": 0,
                "itemsSearchKey": "AuthorizationObject",
                "rawContent": "AuthorizationObject,AuthorizationField,AuthorizationValue,ActivityField,Activity,Description\nS_DEVELOP,OBJTYPE,DEBUG,ACTVT,02,Debug Change Authorizations\nS_DEVELOP,OBJTYPE,*,ACTVT,02,All development activities - include debug\nS_DEVELOP,OBJTYPE,DEBUG,ACTVT,*,Debug All Activites (Including Change)\nS_DEVELOP,OBJTYPE,*,ACTVT,*,All development activities - include debug\nS_RFC,RFCNAME,*,ACTVT,16,Execution of all RFC Services\nS_RFC,RFCNAME,*,ACTVT,*,Execution of all RFC Services\nS_TCODE,TCD,*,NOT_IN_USE,nan,All Transaction Codes - Example without Activity\nS_TZONE,ACTVT,*,NOT_IN_USE,nan,Maintain System Time Zone - Example only with Activity\n",
                "contentType": "text/csv"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/Watchlists",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/','SAP - Excluded Networks')]",
            "apiVersion": "2021-03-01-preview",
            "properties": {
                "description": "Internal and maintenance of excluded networks for ignoring web dispatchers, terminal servers etc.",
                "displayName": "SAP - Excluded Networks",
                "source": "CSV",
                "provider": "Microsoft",
                "numberOfLinesToSkip": 0,
                "itemsSearchKey": "Network",
                "rawContent": "Network,Description\n111.68.128.0/1,My Terminal Server\n123.68.128.0/1,My Citrix\n",
                "contentType": "text/csv"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/Watchlists",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/','SAP - Excluded Users')]",
            "apiVersion": "2021-03-01-preview",
            "properties": {
                "description": "System users which are logged in the systems need to be ignored. (for example Multiple logons by user alert)",
                "displayName": "SAP - Excluded Users",
                "source": "CSV",
                "provider": "Microsoft",
                "numberOfLinesToSkip": 0,
                "itemsSearchKey": "User",
                "rawContent": "User,Description\nSYSWF,WF\n",
                "contentType": "text/csv"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/Watchlists",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/','SAP - FTP Servers')]",
            "apiVersion": "2021-03-01-preview",
            "properties": {
                "description": "FTP Servers for identification of unauthorized connections.",
                "displayName": "SAP - FTP Servers",
                "source": "CSV",
                "provider": "Microsoft",
                "numberOfLinesToSkip": 0,
                "itemsSearchKey": "Client",
                "rawContent": "Client,FTP_Server_Name,FTP_Server_Port,Description\n100,http://ourorgftpserver.com/,22,description\n",
                "contentType": "text/csv"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/Watchlists",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/','SAP - Networks')]",
            "apiVersion": "2021-03-01-preview",
            "properties": {
                "description": "Internal and maintenance networks for identification of unauthorized logins.",
                "displayName": "SAP - Networks",
                "source": "CSV",
                "provider": "Microsoft",
                "numberOfLinesToSkip": 0,
                "itemsSearchKey": "Network",
                "rawContent": "Network,Description\n111.68.128.0/17,Our internal Network\n5.8.0.0/19,SAP Support Network\n223.255.254.0/24,Our Support Network\n",
                "contentType": "text/csv"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/Watchlists",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/','SAP - Obsolete Function Modules')]",
            "apiVersion": "2021-03-01-preview",
            "properties": {
                "description": "Obsolete Function Modules which their execution should be governed.",
                "displayName": "SAP - Obsolete Function Modules",
                "source": "CSV",
                "provider": "Microsoft",
                "numberOfLinesToSkip": 0,
                "itemsSearchKey": "FunctionModule",
                "rawContent": "FunctionModule,Description\nTH_SAPREL,Get SAP Release Information\nTH_SAPREL2,Get SAP Release Information\nTH_SAPREL3,Get SAP Release Information\nSUSR_RFC_USER_INTERFACE,Users from External Systems\nRFC_ABAP_INSTALL_AND_RUN,Install ABAP Program\n",
                "contentType": "text/csv"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/Watchlists",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/','SAP - Obsolete Programs')]",
            "apiVersion": "2021-03-01-preview",
            "properties": {
                "description": "Obsolete ABAP programs (reports) which their execution should be governed.",
                "displayName": "SAP - Obsolete Programs",
                "source": "CSV",
                "provider": "Microsoft",
                "numberOfLinesToSkip": 0,
                "itemsSearchKey": "ABAPProgram",
                "rawContent": "ABAPProgram,Description\nRSAU_READ_LOG,just as example\n",
                "contentType": "text/csv"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/Watchlists",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/','SAP - Privileged Users')]",
            "apiVersion": "2021-03-01-preview",
            "properties": {
                "description": "Privileged users which are under extra restrictions.",
                "displayName": "SAP - Privileged Users",
                "source": "CSV",
                "provider": "Microsoft",
                "numberOfLinesToSkip": 0,
                "itemsSearchKey": "User",
                "rawContent": "User,Description\nSAP*,SAP*\nDDIC,Dictionary, Internal\nALEREMOTE,BW User\nBWREMOTE,BW User\nSAPSYS,SAP System, Internal\nWF-BATCH,Workflow Batch\n",
                "contentType": "text/csv"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/Watchlists",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/','SAP - Sensitive ABAP Programs')]",
            "apiVersion": "2021-03-01-preview",
            "properties": {
                "description": "Sensitive ABAP programs (reports) which their execution should be governed.",
                "displayName": "SAP - Sensitive ABAP Programs",
                "source": "CSV",
                "provider": "Microsoft",
                "numberOfLinesToSkip": 0,
                "itemsSearchKey": "ABAPProgram",
                "rawContent": "ABAPProgram,Description\nRSPFLDOC,Profile Parameter Maintenance\n/1BCDWB/DBUSR02,Data Browser - USR02\n/1BCDWB/DBUSH02,Data Browser - USH02\n/1BCDWB/DBUSRPWDHISTORY,Data Browser - USRPWDHISTORY\nRDDGENBB,DD: Dispatcher for Converter and Distributor\nRSBDCOS0,Execute OS Command (Logged in SYSLOG and Trace Files)\nRSCDOK99,Delete Change Documents\nRSTBPDEL,Table Log Database Management: Delete Logs\n",
                "contentType": "text/csv"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/Watchlists",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/','SAP - Sensitive Function Modules')]",
            "apiVersion": "2021-03-01-preview",
            "properties": {
                "description": "Sensitive Function Modules which their execution should be governed.",
                "displayName": "SAP - Sensitive Function Modules",
                "source": "CSV",
                "provider": "Microsoft",
                "numberOfLinesToSkip": 0,
                "itemsSearchKey": "FunctionModule",
                "rawContent": "FunctionModule,Description\nRSAU_CLEAR_AUDIT_LOG,Delete Audit Log\nBAPI_USER_CREATE,Create User\nBAPI_USER_CREATE1,Create User\nBAPI_USER_DELETE,Delete user\nBAPI_USER_GET_DETAIL,Read User Details\nBAPI_USER_PROFILES_ASSIGN,Change User-Profile Assignments\nEPS_GET_DIRECTORY_LISTING,nan\nPFL_CHECK_OS_FILE_EXISTENCE,nan\nPRGN_INTERFACE_USER,nan\nRFC_ABAP_INSTALL_AND_RUN,nan\nRFC_GET_TABLE_ENTRIES,Read table entries\nRFC_READ_TABLE,External access to R/3 tables via RFC\nRS_FUNCTIONMODULE_INSERT,nan\nRZL_READ_DIR_LOCAL,nan\nSUSR_RFC_USER_INTERFACE,nan\nSXPG_CALL_SYSTEM,Execute an External Command\nSXPG_COMMAND_EXECUTE,Execute an External Command\nSXPG_COMMAND_EXECUTE_LONG,Execute an External Command\nTABLE_ENTRIES_GET_VIA_RFC,nan\nTH_REMOTE_TRANSACTION,Start Remote Transaction\nTH_SAPREL,nan\nTMS_CI_START_SERVICE,nan\n",
                "contentType": "text/csv"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/Watchlists",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/','SAP - Sensitive Profiles')]",
            "apiVersion": "2021-03-01-preview",
            "properties": {
                "description": "Sensitive profiles which their assignment should be governed.",
                "displayName": "SAP - Sensitive Profiles",
                "source": "CSV",
                "provider": "Microsoft",
                "numberOfLinesToSkip": 0,
                "itemsSearchKey": "Profile",
                "rawContent": "Profile,Description\nSAP_ALL,All SAP Systems Authorizations\nSAP_NEW,New Authorizations Checks\n",
                "contentType": "text/csv"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/Watchlists",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/','SAP - Sensitive Roles')]",
            "apiVersion": "2021-03-01-preview",
            "properties": {
                "description": "Sensitive roles which their assignment should be governed.",
                "displayName": "SAP - Sensitive Roles",
                "source": "CSV",
                "provider": "Microsoft",
                "numberOfLinesToSkip": 0,
                "itemsSearchKey": "Role",
                "rawContent": "Role,Description\nZ_FIGL_POSTING_ADMIN,Custom example role\nSAP_BC_AUTH_DATA_ADMIN,Authorization Data Administrator\nSAP_BC_AUTH_PROFILE_ADMIN,Authorization Profile Administrator\nSAP_BC_BASIS_ADMIN,System Administrator\n",
                "contentType": "text/csv"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/Watchlists",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/','SAP - Sensitive Tables')]",
            "apiVersion": "2021-03-01-preview",
            "properties": {
                "description": "Sensitive tables which their access should be governed.",
                "displayName": "SAP - Sensitive Tables",
                "source": "CSV",
                "provider": "Microsoft",
                "numberOfLinesToSkip": 0,
                "itemsSearchKey": "Table",
                "rawContent": "Table,Description\nUSR02,Logon Data\nPA0008,Basic Pay Infotype\nUSH02,Change history for logon data\nUSRPWDHISTORY,Change History for Logon Data: Last Entries from Archive\n",
                "contentType": "text/csv"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/Watchlists",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/','SAP - Sensitive Transactions')]",
            "apiVersion": "2021-03-01-preview",
            "properties": {
                "description": "Sensitive transactions which their execution should be governed.",
                "displayName": "SAP - Sensitive Transactions",
                "source": "CSV",
                "provider": "Microsoft",
                "numberOfLinesToSkip": 0,
                "itemsSearchKey": "TransactionCode",
                "rawContent": "TransactionCode,Description\nRSAU_CONFIG,Audit Log Configuration\nRZ11,Profile Parameter Maintenance\n",
                "contentType": "text/csv"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/Watchlists",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/','SAP - Systems')]",
            "apiVersion": "2021-03-01-preview",
            "properties": {
                "description": "Describes the landscape of SAP systems according to role and usage.",
                "displayName": "SAP - Systems",
                "source": "CSV",
                "provider": "Microsoft",
                "numberOfLinesToSkip": 0,
                "itemsSearchKey": "SystemID",
                "rawContent": "SystemID,SystemRole,SystemUsage\nS4X,Sandbox,ERP\nS4D,Development,ERP\nS4Q,QualityAssurance,ERP\nS4T,Training,ERP\nS4P,Production,ERP\nS4H,Production,ERP\nB4X,Sandbox,BW\nB4D,Development,BW\nB4Q,QualityAssurance,BW\nB4T,Training,BW\nB4P,Production,BW\nSMX,Sandbox,Solman\nSMD,QualityAssurance,Solman\nSMQ,Training,Solman\nSMP,Production,Solman\nC4X,Sandbox,CRM\nC4D,Development,CRM\nC4Q,QualityAssurance,CRM\nC4T,Training,CRM\nC4P,Production,CRM\nGWX,Sandbox,Gateway\nGWD,Development,Gateway\nGWQ,QualityAssurance,Gateway\nGWT,Training,Gateway\nGWP,Production,Gateway\nEPS,Sandbox,Enterpirse Portal\nEPD,Development,Enterpirse Portal\nEPQ,QualityAssurance,Enterpirse Portal\nEPT,Training,Enterpirse Portal\nEPP,Production,Enterpirse Portal\n",
                "contentType": "text/csv"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/Watchlists",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/','SAP - Transactions for ABAP Generations')]",
            "apiVersion": "2021-03-01-preview",
            "properties": {
                "description": "Transactions for ABAP generations which their execution should be governed.",
                "displayName": "SAP - Transactions for ABAP Generations",
                "source": "CSV",
                "provider": "Microsoft",
                "numberOfLinesToSkip": 0,
                "itemsSearchKey": "TransactionCode",
                "rawContent": "TransactionCode,Description\nSE11,ABAP Dictionary Maintenance\nSE12,ABAP Dictionary Display\nSE16,Data Browser\nSE16N,General Table Display\n",
                "contentType": "text/csv"
            }
        }
    ],
    "outputs": {}
}