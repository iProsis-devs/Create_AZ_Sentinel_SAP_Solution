{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata": {
        "author": "Eli Forbes - v-eliforbes@microsoft.com",
        "comments": "Solution template for SAP - System Applications and Products"
    },
    "parameters": {
        "formattedTimeNow": {
            "type": "string",
            "defaultValue": "[utcNow('g')]",
            "metadata": {
                "description": "Appended to workbook displayNames to make them unique"
            }
        },
        "location": {
            "type": "string",
            "minLength": 1,
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Not used, but needed to pass arm-ttk test `Location-Should-Not-Be-Hardcoded`.  We instead use the `workspace-location` which is derived from the LA workspace"
            }
        },
        "workspace-location": {
            "type": "string",
            "minLength": 1,
            "defaultValue": "[parameters('location')]",
            "metadata": {
                "description": "Region to deploy solution resources"
            }
        },
        "workspace": {
            "defaultValue": "<Enter Log Analytics Workspace>",
            "type": "string",
            "minLength": 1,
            "metadata": {
                "description": "Workspace name for Log Analytics where Sentinel is setup"
            }
        },
        "connector1-name": {
            "type": "string",
            "defaultValue": "c1c299f0-3f46-4443-8541-d280b0708fd8"
        },
        "workbook1-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for the workbook"
            }
        },
        "workbook1-name": {
            "type": "string",
            "defaultValue": "SAP - Audit Log Browser",
            "minLength": 1,
            "metadata": {
                "description": "Name for the workbook"
            }
        },
        "workbook2-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for the workbook"
            }
        },
        "workbook2-name": {
            "type": "string",
            "defaultValue": "SAP - Initial Access & Attempts to Bypass SAP Security Mechanisms",
            "minLength": 1,
            "metadata": {
                "description": "Name for the workbook"
            }
        },
        "workbook3-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for the workbook"
            }
        },
        "workbook3-name": {
            "type": "string",
            "defaultValue": "SAP - Persistency & Data exfiltration",
            "minLength": 1,
            "metadata": {
                "description": "Name for the workbook"
            }
        },
        "workbook4-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for the workbook"
            }
        },
        "workbook4-name": {
            "type": "string",
            "defaultValue": "SAP - Suspicious Privileges Operations",
            "minLength": 1,
            "metadata": {
                "description": "Name for the workbook"
            }
        },
        "analytic1-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for the scheduled alert rule"
            }
        },
        "analytic2-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for the scheduled alert rule"
            }
        },
        "analytic3-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for the scheduled alert rule"
            }
        },
        "analytic4-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for the scheduled alert rule"
            }
        },
        "analytic5-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for the scheduled alert rule"
            }
        },
        "analytic6-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for the scheduled alert rule"
            }
        },
        "analytic7-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for the scheduled alert rule"
            }
        },
        "analytic8-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for the scheduled alert rule"
            }
        },
        "analytic9-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for the scheduled alert rule"
            }
        },
        "analytic10-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for the scheduled alert rule"
            }
        },
        "analytic11-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for the scheduled alert rule"
            }
        },
        "analytic12-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for the scheduled alert rule"
            }
        },
        "analytic13-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for the scheduled alert rule"
            }
        },
        "analytic14-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for the scheduled alert rule"
            }
        },
        "analytic15-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for the scheduled alert rule"
            }
        },
        "analytic16-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for the scheduled alert rule"
            }
        },
        "analytic17-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for the scheduled alert rule"
            }
        },
        "analytic18-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for the scheduled alert rule"
            }
        },
        "analytic19-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for the scheduled alert rule"
            }
        },
        "analytic20-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for the scheduled alert rule"
            }
        },
        "analytic21-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for the scheduled alert rule"
            }
        },
        "analytic22-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for the scheduled alert rule"
            }
        },
        "analytic23-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for the scheduled alert rule"
            }
        },
        "analytic24-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for the scheduled alert rule"
            }
        },
        "analytic25-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for the scheduled alert rule"
            }
        },
        "analytic26-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for the scheduled alert rule"
            }
        },
        "analytic27-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for the scheduled alert rule"
            }
        },
        "analytic28-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for the scheduled alert rule"
            }
        },
        "analytic29-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for the scheduled alert rule"
            }
        },
        "analytic30-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for the scheduled alert rule"
            }
        },
        "analytic31-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for the scheduled alert rule"
            }
        },
        "analytic32-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for the scheduled alert rule"
            }
        },
        "analytic33-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for the scheduled alert rule"
            }
        },
        "analytic34-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for the scheduled alert rule"
            }
        },
        "analytic35-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for the scheduled alert rule"
            }
        },
        "analytic36-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for the scheduled alert rule"
            }
        },
        "analytic37-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for the scheduled alert rule"
            }
        },
        "analytic38-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for the scheduled alert rule"
            }
        },
        "analytic39-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for the scheduled alert rule"
            }
        },
        "analytic40-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for the scheduled alert rule"
            }
        },
        "analytic41-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for the scheduled alert rule"
            }
        },
        "analytic42-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for the scheduled alert rule"
            }
        },
        "analytic43-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for the scheduled alert rule"
            }
        },
        "analytic44-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for the scheduled alert rule"
            }
        },
        "analytic45-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for the scheduled alert rule"
            }
        },
        "analytic46-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for the scheduled alert rule"
            }
        },
        "analytic47-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for the scheduled alert rule"
            }
        },
        "analytic48-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for the scheduled alert rule"
            }
        },
        "analytic49-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for the scheduled alert rule"
            }
        },
        "watchlist1-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for a watchilst"
            }
        },
        "watchlist2-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for a watchilst"
            }
        },
        "watchlist3-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for a watchilst"
            }
        },
        "watchlist4-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for a watchilst"
            }
        },
        "watchlist5-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for a watchilst"
            }
        },
        "watchlist6-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for a watchilst"
            }
        },
        "watchlist7-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for a watchilst"
            }
        },
        "watchlist8-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for a watchilst"
            }
        },
        "watchlist9-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for a watchilst"
            }
        },
        "watchlist10-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for a watchilst"
            }
        },
        "watchlist11-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for a watchilst"
            }
        },
        "watchlist12-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for a watchilst"
            }
        },
        "watchlist13-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for a watchilst"
            }
        },
        "watchlist14-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for a watchilst"
            }
        },
        "watchlist15-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for a watchilst"
            }
        },
        "watchlist16-id": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "minLength": 1,
            "metadata": {
                "description": "Unique id for a watchilst"
            }
        }
    },
    "variables": {
        "workbook-source": "[concat(resourceGroup().id, '/providers/Microsoft.OperationalInsights/workspaces/',parameters('workspace'))]",
        "_workbook-source": "[variables('workbook-source')]",
        "connector1-source": "[concat('/subscriptions/',subscription().subscriptionId,'/resourceGroups/',resourceGroup().name,'/providers/Microsoft.OperationalInsights/workspaces/',parameters('workspace'),'/providers/Microsoft.SecurityInsights/dataConnectors/',parameters('connector1-name'))]",
        "_connector1-source": "[variables('connector1-source')]"
    },
    "resources": [
        {
            "id": "[variables('_connector1-source')]",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('connector1-name'))]",
            "apiVersion": "2021-03-01-preview",
            "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
            "kind": "GenericUI",
            "properties": {
                "connectorUiConfig": {
                    "title": "Azure Sentinel Continuous Threat Monitoring for SAP",
                    "publisher": "Microsoft",
                    "descriptionMarkdown": "The Azure Sentinel SAP application layer Logs connector is integral part of Azure Sentinel Continuous Threat Monitoring for SAP Solution. The connector ingests SAP logs to Azure Sentinel workspaces, raw data can be accessed by both built-in Continuous Threat Monitoring Solution content as well as by custom, user created content. SAP logs ingestion leverages SAP NetWeaver (RFC) in order to ingest ABAP 7.4+ application layer logs including Security Audit logs, Application logs, ChangeDocuments, Spool Logs, Change Request data, Table Changes and more.",
                    "graphQueriesTableName": "ABAPAuditLog_CL",
                    "graphQueries": [
                        {
                            "metricName": "Total data received",
                            "legend": "AIVectraDetect",
                            "baseQuery": "ABAPAuditLog_CL | summarize Users_count=dcount(User_s) by bin(TimeGenerated,1d)"
                        }
                    ],
                    "sampleQueries": [
                        {
                            "description": "Total data received",
                            "query": "ABAPAuditLog_CL | summarize Users_count=dcount(User_s) by bin(TimeGenerated,1d)"
                        }
                    ],
                    "dataTypes": [
                        {
                            "name": "ABAPAuditLog_CL",
                            "lastDataReceivedQuery": "ABAPAuditLog_CL | summarize Time = max(TimeGenerated) | where isnotempty(Time)"
                        }
                    ],
                    "connectivityCriterias": [
                        {
                            "type": "IsConnectedQuery",
                            "value": [
                                "ABAPAuditLog_CL | summarize LastLogReceived = max(TimeGenerated) | project IsConnected = LastLogReceived > ago(30d)"
                            ]
                        }
                    ],
                    "availability": {
                        "status": 1,
                        "isPreview": true
                    },
                    "permissions": {
                        "customs": [
                            {
                                "name": "Documentation",
                                "description": "Complete [documentation](https://github.com/Azure/AzureSentinel4SAP) including on-premise coverage"
                            },
                            {
                                "name": "Infrastructure prerequisites",
                                "description": " \n1.    Azure Ubuntu Virtual Machine with system managed identity \n2.  Azure Key Vault with write-read access policy assigned to the virtual machine identity."
                            },
                            {
                                "name": "SAP basis prerequisites",
                                "description": "\n1.  SAP system 7.5 SP13 and above. Lower versions are supported with notes and/or limitations please refer to the [documentation](https://github.com/Azure/AzureSentinel4SAP). \n2.    SAP ABAP connector user and password \n3.  Apply [authorization profile](/github.com/Azure/AzureSentinel4SAP/blob/main/template/sample%20authorization%20profile.txt). Or use the [Sample Authorizations Role CR / Transport form](https://github.com/Azure/AzureSentinel4SAP/tree/main/CR) \n4.   Deploy the [ALL logs CR (single CR) on SAP (STMS)](https://github.com/Azure/AzureSentinel4SAP/tree/main/CR)"
                            }
                        ]
                    },
                    "instructionSteps": [
                        {
                            "title": "Installation\n"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Insights/workbooks",
            "name": "[parameters('workbook1-id')]",
            "location": "[parameters('workspace-location')]",
            "kind": "shared",
            "apiVersion": "2020-02-12",
            "properties": {
                "displayName": "[concat('Preview - ',parameters('workbook1-name'), ' - ', parameters('formattedTimeNow'))]",
                "serializedData": "{\n    \"version\": \"Notebook/1.0\",\n    \"items\": [\n        {\n            \"type\": 11,\n            \"content\": {\n                \"version\": \"LinkItem/1.0\",\n                \"style\": \"tabs\",\n                \"links\": [\n                    {\n                        \"id\": \"dfdb272b-163e-40b2-a9e0-79cb7209468a\",\n                        \"cellValue\": \"workbook-param\",\n                        \"linkTarget\": \"parameter\",\n                        \"linkLabel\": \"Health Monitoring\",\n                        \"subTarget\": \"general\",\n                        \"preText\": \"General\",\n                        \"style\": \"link\"\n                    },\n                    {\n                        \"id\": \"b56a490a-7680-48c7-a50c-9404037f13f9\",\n                        \"cellValue\": \"workbook-param\",\n                        \"linkTarget\": \"parameter\",\n                        \"linkLabel\": \"Events\",\n                        \"subTarget\": \"alert\",\n                        \"style\": \"link\"\n                    },\n                    {\n                        \"id\": \"f32c10c4-5776-4dfd-8db0-6bc879e99f1c\",\n                        \"cellValue\": \"workbook-param\",\n                        \"linkTarget\": \"parameter\",\n                        \"linkLabel\": \"Authentication & Authorization\",\n                        \"subTarget\": \"events\",\n                        \"style\": \"link\"\n                    }\n                ]\n            },\n            \"name\": \"links\"\n        },\n        {\n            \"type\": 9,\n            \"content\": {\n                \"version\": \"KqlParameterItem/1.0\",\n                \"parameters\": [\n                    {\n                        \"id\": \"82aad988-7880-4b18-9fa5-2e7260ce3c2d\",\n                        \"version\": \"KqlParameterItem/1.0\",\n                        \"name\": \"TimeSelect\",\n                        \"type\": 4,\n                        \"typeSettings\": {\n                            \"selectableValues\": [\n                                {\n                                    \"durationMs\": 300000\n                                },\n                                {\n                                    \"durationMs\": 900000\n                                },\n                                {\n                                    \"durationMs\": 1800000\n                                },\n                                {\n                                    \"durationMs\": 3600000\n                                },\n                                {\n                                    \"durationMs\": 14400000\n                                },\n                                {\n                                    \"durationMs\": 43200000\n                                },\n                                {\n                                    \"durationMs\": 86400000\n                                },\n                                {\n                                    \"durationMs\": 172800000\n                                },\n                                {\n                                    \"durationMs\": 259200000\n                                },\n                                {\n                                    \"durationMs\": 604800000\n                                },\n                                {\n                                    \"durationMs\": 1209600000\n                                },\n                                {\n                                    \"durationMs\": 2419200000\n                                },\n                                {\n                                    \"durationMs\": 2592000000\n                                },\n                                {\n                                    \"durationMs\": 5184000000\n                                },\n                                {\n                                    \"durationMs\": 7776000000\n                                }\n                            ],\n                            \"allowCustom\": true\n                        },\n                        \"timeContext\": {\n                            \"durationMs\": 2592000000\n                        },\n                        \"value\": {\n                            \"durationMs\": 7776000000\n                        },\n                        \"label\": \"Time range\"\n                    },\n                    {\n                        \"id\": \"47f7490d-edb3-4ad3-98fa-1cfd97c8782d\",\n                        \"version\": \"KqlParameterItem/1.0\",\n                        \"name\": \"Systems\",\n                        \"label\": \"System\",\n                        \"type\": 2,\n                        \"isRequired\": true,\n                        \"multiSelect\": true,\n                        \"quote\": \"'\",\n                        \"delimiter\": \",\",\n                        \"query\": \"ABAPAuditLog_CL | summarize  by  SystemID_s \",\n                        \"value\": [\n                            \"value::all\"\n                        ],\n                        \"typeSettings\": {\n                            \"additionalResourceOptions\": [\n                                \"value::all\"\n                            ],\n                            \"selectAllValue\": \"*\"\n                        },\n                        \"timeContext\": {\n                            \"durationMs\": 7776000000\n                        },\n                        \"timeContextFromParameter\": \"TimeSelect\",\n                        \"queryType\": 0,\n                        \"resourceType\": \"microsoft.operationalinsights/workspaces\"\n                    }\n                ],\n                \"style\": \"above\",\n                \"queryType\": 0,\n                \"resourceType\": \"microsoft.operationalinsights/workspaces\"\n            },\n            \"name\": \"parameters - 8\"\n        },\n        {\n            \"type\": 12,\n            \"content\": {\n                \"version\": \"NotebookGroup/1.0\",\n                \"groupType\": \"editable\",\n                \"items\": [\n                    {\n                        \"type\": 1,\n                        \"content\": {\n                            \"json\": \"<tr><td><h2 style=\\\"font-family: 'Enriqueta', arial, serif; line-height: 1.25; margin: 0 0 10px; font-size: 24px; font-weight: bold;\\\"><B>Events Severity</b></h2>\\r\\n<tr><td><p style=\\\"color: #333; font-family: 'Muli', sans-serif; margin-bottom: 15px; font-size: 14px;\\\"><B>Showing data about events and their severity.</b></p>\"\n                        },\n                        \"conditionalVisibility\": {\n                            \"parameterName\": \"workbook-param\",\n                            \"comparison\": \"isEqualTo\",\n                            \"value\": \"alert\"\n                        },\n                        \"name\": \"text - 0\"\n                    },\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"//ABAPAuditLog_CL |  where (MessageID_s  =='AUD') and (SystemID_s in ({Systems}) or  '*' in ({Systems}))  | summarize count() by TimeGenerated,  MessageID_s,User_s, MessageText_s\\r\\ndatatable (Count:long, status:string, status_count:long) [0,\\\"Low\\\",1, 0,\\\"Medium\\\",2, 0,\\\"High\\\",3, ]\\r\\n|union\\r\\n(\\r\\nABAPAuditLog_CL\\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where SystemID_s in ({Systems}) or  '*' in ({Systems}) \\r\\n| where AlertSeverityText_s <> ''\\r\\n//| summarize count() by AlertSeverityText_s\\r\\n| extend status = case(AlertSeverityText_s==\\\"High\\\", \\\"High\\\",\\r\\n                        AlertSeverityText_s==\\\"Medium\\\", \\\"Medium\\\",\\r\\n                        AlertSeverityText_s==\\\"Low\\\", \\\"Low\\\",\\r\\n                        \\\"True\\\")\\r\\n| where status != \\\"True\\\"\\r\\n| extend status_count = case(status==\\\"Critical\\\", 4, status==\\\"High\\\", 3, status==\\\"Medium\\\", 2, 1)\\r\\n| summarize Count = count() by status, status_count\\r\\n)\\r\\n| summarize Count=sum(Count) by status, status_count\\r\\n| sort by status_count asc\\r\\n\",\n                            \"size\": 4,\n                            \"title\": \"Event Severity \",\n                            \"exportFieldName\": \"status\",\n                            \"exportParameterName\": \"status\",\n                            \"exportDefaultValue\": \"Low\",\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                            \"visualization\": \"tiles\",\n                            \"tileSettings\": {\n                                \"titleContent\": {\n                                    \"columnMatch\": \"status\",\n                                    \"formatter\": 18,\n                                    \"formatOptions\": {\n                                        \"thresholdsOptions\": \"colors\",\n                                        \"thresholdsGrid\": [\n                                            {\n                                                \"operator\": \"==\",\n                                                \"thresholdValue\": \"Low\",\n                                                \"representation\": \"green\",\n                                                \"text\": \"{0}{1}\"\n                                            },\n                                            {\n                                                \"operator\": \"==\",\n                                                \"thresholdValue\": \"Medium\",\n                                                \"representation\": \"orange\",\n                                                \"text\": \"{0}{1}\"\n                                            },\n                                            {\n                                                \"operator\": \"==\",\n                                                \"thresholdValue\": \"High\",\n                                                \"representation\": \"red\",\n                                                \"text\": \"{0}{1}\"\n                                            },\n                                            {\n                                                \"operator\": \"Default\",\n                                                \"representation\": \"blue\",\n                                                \"text\": \"{0}{1}\"\n                                            }\n                                        ]\n                                    }\n                                },\n                                \"leftContent\": {\n                                    \"columnMatch\": \"Count\",\n                                    \"formatter\": 12,\n                                    \"formatOptions\": {\n                                        \"palette\": \"none\"\n                                    },\n                                    \"numberFormat\": {\n                                        \"unit\": 17,\n                                        \"options\": {\n                                            \"style\": \"decimal\",\n                                            \"maximumFractionDigits\": 2,\n                                            \"maximumSignificantDigits\": 3\n                                        }\n                                    }\n                                },\n                                \"showBorder\": true\n                            }\n                        },\n                        \"customWidth\": \"50\",\n                        \"name\": \"query - 11\"\n                    },\n                    {\n                        \"type\": 9,\n                        \"content\": {\n                            \"version\": \"KqlParameterItem/1.0\",\n                            \"parameters\": [\n                                {\n                                    \"id\": \"a4df2a30-4ee5-4ad5-acb7-beded5abb787\",\n                                    \"version\": \"KqlParameterItem/1.0\",\n                                    \"name\": \"User\",\n                                    \"type\": 1,\n                                    \"value\": \"\",\n                                    \"timeContext\": {\n                                        \"durationMs\": 86400000\n                                    }\n                                }\n                            ],\n                            \"style\": \"pills\",\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\"\n                        },\n                        \"customWidth\": \"50\",\n                        \"name\": \"parameters - 7\",\n                        \"styleSettings\": {\n                            \"margin\": \"50px\",\n                            \"padding\": \"30px\"\n                        }\n                    },\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"\\r\\nABAPAuditLog_CL \\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where SystemID_s in ({Systems}) or  '*' in ({Systems}) \\r\\n| where AlertSeverityText_s <> ''\\r\\n| summarize count() by AlertSeverityText_s\\r\\n\",\n                            \"size\": 0,\n                            \"title\": \"Event Severity Pie\",\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                            \"visualization\": \"piechart\",\n                            \"chartSettings\": {\n                                \"seriesLabelSettings\": [\n                                    {\n                                        \"seriesName\": \"Low\",\n                                        \"label\": \"Low\",\n                                        \"color\": \"green\"\n                                    },\n                                    {\n                                        \"seriesName\": \"Medium\",\n                                        \"label\": \"Medium\",\n                                        \"color\": \"orange\"\n                                    },\n                                    {\n                                        \"seriesName\": \"High\",\n                                        \"label\": \"High\",\n                                        \"color\": \"redBright\"\n                                    }\n                                ]\n                            }\n                        },\n                        \"customWidth\": \"40\",\n                        \"name\": \"query - 12\",\n                        \"styleSettings\": {\n                            \"margin\": \"0\",\n                            \"maxWidth\": \"100%\"\n                        }\n                    },\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"ABAPAuditLog_CL \\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where SystemID_s in ({Systems}) or  '*' in ({Systems}) \\r\\n| where AlertSeverityText_s <> ''\\r\\n| where AlertSeverityText_s=='{status}'\\r\\n| where User_s=='{User}'\\r\\n| project TimeGenerated, MessageID=MessageID_s, Severity=AlertSeverityText_s, Message=MessageText_s\\r\\n| order by TimeGenerated desc\\r\\n| take 100\",\n                            \"size\": 1,\n                            \"title\": \"All events with {status} severity by user {User}\",\n                            \"noDataMessage\": \"Please select alert status\",\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                            \"visualization\": \"table\",\n                            \"gridSettings\": {\n                                \"formatters\": [\n                                    {\n                                        \"columnMatch\": \"Severity\",\n                                        \"formatter\": 18,\n                                        \"formatOptions\": {\n                                            \"thresholdsOptions\": \"colors\",\n                                            \"thresholdsGrid\": [\n                                                {\n                                                    \"operator\": \"==\",\n                                                    \"thresholdValue\": \"High\",\n                                                    \"representation\": \"red\",\n                                                    \"text\": \"{0}{1}\"\n                                                },\n                                                {\n                                                    \"operator\": \"==\",\n                                                    \"thresholdValue\": \"Medium\",\n                                                    \"representation\": \"orange\",\n                                                    \"text\": \"{0}{1}\"\n                                                },\n                                                {\n                                                    \"operator\": \"==\",\n                                                    \"thresholdValue\": \"Low\",\n                                                    \"representation\": \"green\",\n                                                    \"text\": \"{0}{1}\"\n                                                },\n                                                {\n                                                    \"operator\": \"Default\",\n                                                    \"representation\": \"blue\",\n                                                    \"text\": \"{0}{1}\"\n                                                }\n                                            ]\n                                        }\n                                    },\n                                    {\n                                        \"columnMatch\": \"Tenant ID\",\n                                        \"formatter\": 1\n                                    }\n                                ]\n                            }\n                        },\n                        \"customWidth\": \"50\",\n                        \"name\": \"query - 12\",\n                        \"styleSettings\": {\n                            \"margin\": \"0px\",\n                            \"padding\": \"0px\"\n                        }\n                    },\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"ABAPAuditLog_CL \\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where SystemID_s in ({Systems}) or  '*' in ({Systems}) \\r\\n| where AlertSeverityText_s <> ''\\r\\n| summarize Alerts = count() by bin(TimeGenerated, 1d)\\r\\n\\r\\n\",\n                            \"size\": 0,\n                            \"aggregation\": 3,\n                            \"title\": \"Events Over Time\",\n                            \"color\": \"blueDark\",\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                            \"visualization\": \"linechart\",\n                            \"chartSettings\": {\n                                \"showDataPoints\": true\n                            }\n                        },\n                        \"name\": \"query - 3\"\n                    },\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"ABAPAuditLog_CL\\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems})) \\r\\n| where AlertSeverityText_s != \\\"Low\\\"\\r\\n| summarize count() by bin(TimeGenerated, 1h), AlertSeverityText_s\",\n                            \"size\": 0,\n                            \"aggregation\": 3,\n                            \"title\": \"Medium and High Severity Events by Severity Over Time\",\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                            \"visualization\": \"timechart\",\n                            \"chartSettings\": {\n                                \"seriesLabelSettings\": [\n                                    {\n                                        \"seriesName\": \"Low\",\n                                        \"color\": \"green\"\n                                    },\n                                    {\n                                        \"seriesName\": \"Medium\",\n                                        \"color\": \"orange\"\n                                    },\n                                    {\n                                        \"seriesName\": \"High\",\n                                        \"color\": \"red\"\n                                    }\n                                ]\n                            }\n                        },\n                        \"name\": \"query - 6\"\n                    }\n                ]\n            },\n            \"conditionalVisibility\": {\n                \"parameterName\": \"workbook-param\",\n                \"comparison\": \"isEqualTo\",\n                \"value\": \"alert\"\n            },\n            \"name\": \"Alerts\"\n        },\n        {\n            \"type\": 12,\n            \"content\": {\n                \"version\": \"NotebookGroup/1.0\",\n                \"groupType\": \"editable\",\n                \"items\": [\n                    {\n                        \"type\": 1,\n                        \"content\": {\n                            \"json\": \"<tr><td><h2 style=\\\"font-family: 'Enriqueta', arial, serif; line-height: 1.25; margin: 0 0 10px; font-size: 24px; font-weight: bold;\\\"><B>Authentication & Authorization</b></h2>\\r\\n<tr><td><p style=\\\"color: #333; font-family: 'Muli', sans-serif; margin-bottom: 15px; font-size: 14px;\\\"><B>Showing data about logins/logouts and user changes.</b></p>\"\n                        },\n                        \"name\": \"text - 4\"\n                    },\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"ABAPAuditLog_CL \\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\\r\\n| where MessageID_s in('AU1','AU2','AUC') and (SystemID_s in ({Systems}) or  '*' in ({Systems})) \\r\\n| summarize  count() by bin(TimeGenerated,1d), MessageText_s\",\n                            \"size\": 0,\n                            \"showAnalytics\": true,\n                            \"title\": \"Logins and Logouts Over Time\",\n                            \"timeBrushParameterName\": \"BrushLogins\",\n                            \"exportToExcelOptions\": \"all\",\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                            \"visualization\": \"barchart\"\n                        },\n                        \"customWidth\": \"100\",\n                        \"name\": \"Logins and Logouts Over Time\",\n                        \"styleSettings\": {\n                            \"maxWidth\": \"100%\"\n                        }\n                    },\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"ABAPAuditLog_CL \\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\\r\\n| project TimeGenerated, Severity=AlertSeverityText_s, SystemID_s, MessageText_s, Type\\r\\n| order by TimeGenerated desc\\r\\n| take 100\",\n                            \"size\": 0,\n                            \"title\": \"Login & Logouts - log view\",\n                            \"showExportToExcel\": true,\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                            \"gridSettings\": {\n                                \"formatters\": [\n                                    {\n                                        \"columnMatch\": \"Severity\",\n                                        \"formatter\": 18,\n                                        \"formatOptions\": {\n                                            \"thresholdsOptions\": \"colors\",\n                                            \"thresholdsGrid\": [\n                                                {\n                                                    \"operator\": \"Default\",\n                                                    \"representation\": \"green\",\n                                                    \"text\": \"{0}{1}\"\n                                                }\n                                            ]\n                                        }\n                                    },\n                                    {\n                                        \"columnMatch\": \"AlertSeverityText_s\",\n                                        \"formatter\": 18,\n                                        \"formatOptions\": {\n                                            \"thresholdsOptions\": \"colors\",\n                                            \"thresholdsGrid\": [\n                                                {\n                                                    \"operator\": \"Default\",\n                                                    \"representation\": \"green\",\n                                                    \"text\": \"{0}{1}\"\n                                                }\n                                            ]\n                                        }\n                                    }\n                                ]\n                            }\n                        },\n                        \"customWidth\": \"100\",\n                        \"name\": \"Login & Logouts details\"\n                    },\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"ABAPAuditLog_CL \\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (MessageID_s  =='AUD') or (MessageID_s == 'AUB') or (MessageID_s == 'AU7') or (MessageID_s == 'AUD8') and (SystemID_s in ({Systems}) or  '*' in ({Systems}))  | summarize count() by bin(TimeGenerated,1d),  MessageID_s,User_s, MessageText_s\",\n                            \"size\": 0,\n                            \"showAnalytics\": true,\n                            \"title\": \"Suspicious user changes\",\n                            \"showExportToExcel\": true,\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                            \"visualization\": \"barchart\",\n                            \"graphSettings\": {\n                                \"type\": 0\n                            },\n                            \"chartSettings\": {\n                                \"seriesLabelSettings\": [\n                                    {\n                                        \"seriesName\": \"AU7\",\n                                        \"label\": \"User Created\"\n                                    },\n                                    {\n                                        \"seriesName\": \"AUD\",\n                                        \"label\": \"User Master Record changed\"\n                                    },\n                                    {\n                                        \"seriesName\": \"AUB\",\n                                        \"label\": \"Authorizations Changed\"\n                                    },\n                                    {\n                                        \"seriesName\": \"AU8\",\n                                        \"label\": \"User Deleted\"\n                                    }\n                                ]\n                            },\n                            \"mapSettings\": {\n                                \"locInfo\": \"LatLong\",\n                                \"sizeSettings\": \"count_\",\n                                \"sizeAggregation\": \"Sum\",\n                                \"legendMetric\": \"count_\",\n                                \"legendAggregation\": \"Sum\",\n                                \"itemColorSettings\": {\n                                    \"type\": \"heatmap\",\n                                    \"colorAggregation\": \"Sum\",\n                                    \"nodeColorField\": \"count_\",\n                                    \"heatmapPalette\": \"greenRed\"\n                                }\n                            }\n                        },\n                        \"customWidth\": \"50\",\n                        \"name\": \"Suspicious user changes\",\n                        \"styleSettings\": {\n                            \"maxWidth\": \"50%\"\n                        }\n                    },\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"ABAPAuditLog_CL \\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (MessageID_s  =='AUD') or (MessageID_s == 'AUB') or (MessageID_s == 'AU7') or (MessageID_s == 'AUD8') and (SystemID_s in ({Systems}) or  '*' in ({Systems}))  | summarize count() by bin(TimeGenerated,1d),  MessageID_s,User_s, MessageText_s\",\n                            \"size\": 0,\n                            \"title\": \"Suspicious user changes table\",\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                            \"visualization\": \"table\",\n                            \"gridSettings\": {\n                                \"formatters\": [\n                                    {\n                                        \"columnMatch\": \"User_s\",\n                                        \"formatter\": 18,\n                                        \"formatOptions\": {\n                                            \"thresholdsOptions\": \"icons\",\n                                            \"thresholdsGrid\": [\n                                                {\n                                                    \"operator\": \"Default\",\n                                                    \"representation\": \"info\",\n                                                    \"text\": \"{0}{1}\"\n                                                }\n                                            ]\n                                        }\n                                    }\n                                ]\n                            }\n                        },\n                        \"customWidth\": \"50\",\n                        \"name\": \"query - 6\"\n                    },\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"ABAPAuditLog_CL \\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where  (MessageID_s  =='BU2') and (SystemID_s in ({Systems}) or  '*' in ({Systems}))\\r\\n| summarize Changes = count() by bin(TimeGenerated,1d)\",\n                            \"size\": 0,\n                            \"aggregation\": 3,\n                            \"title\": \"Password Changes\",\n                            \"color\": \"redBright\",\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                            \"visualization\": \"linechart\"\n                        },\n                        \"customWidth\": \"50\",\n                        \"name\": \"Password Changes\"\n                    },\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"ABAPAuditLog_CL \\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where  (MessageID_s  =='BU2') and (SystemID_s in ({Systems}) or  '*' in ({Systems}))\\r\\n| project TenantId,TimeGenerated, MessageText_s, User_s\",\n                            \"size\": 0,\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\"\n                        },\n                        \"customWidth\": \"50\",\n                        \"name\": \"query - 7\"\n                    }\n                ]\n            },\n            \"conditionalVisibility\": {\n                \"parameterName\": \"workbook-param\",\n                \"comparison\": \"isEqualTo\",\n                \"value\": \"events\"\n            },\n            \"name\": \"Events\"\n        },\n        {\n            \"type\": 12,\n            \"content\": {\n                \"version\": \"NotebookGroup/1.0\",\n                \"groupType\": \"editable\",\n                \"items\": [\n                    {\n                        \"type\": 1,\n                        \"content\": {\n                            \"json\": \"<tr><td><h2 style=\\\"font-family: 'Enriqueta', arial, serif; line-height: 1.25; margin: 0 0 10px; font-size: 24px; font-weight: bold;\\\"><B>Health Overview</b></h2>\\r\\n<tr><td><p style=\\\"color: #333; font-family: 'Muli', sans-serif; margin-bottom: 15px; font-size: 14px;\\\"><B>Showing data about activity in the system</b></p>\"\n                        },\n                        \"name\": \"text - 1\"\n                    },\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"ABAPAuditLog_CL\\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\\r\\n| summarize Number_Of_Users = dcount(User_s) by bin(TimeGenerated,1d)\",\n                            \"size\": 0,\n                            \"title\": \"Users login over time\",\n                            \"color\": \"turquoise\",\n                            \"timeContext\": {\n                                \"durationMs\": 7776000000\n                            },\n                            \"timeContextFromParameter\": \"TimeSelect\",\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                            \"visualization\": \"linechart\",\n                            \"chartSettings\": {\n                                \"showDataPoints\": true\n                            }\n                        },\n                        \"name\": \"query - 2\"\n                    },\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"ABAPAuditLog_CL \\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems})) \\r\\n//| take 1\\r\\n| summarize count() by SystemID_s//, MessageClass_s, MessageID_s, Type\\r\\n//| summarize dcount(User_s) by bin(TimeGenerated,1d)\",\n                            \"size\": 0,\n                            \"title\": \"Number of events ingested by system\",\n                            \"timeContext\": {\n                                \"durationMs\": 7776000000\n                            },\n                            \"timeContextFromParameter\": \"TimeSelect\",\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                            \"visualization\": \"piechart\"\n                        },\n                        \"name\": \"query - 3\"\n                    },\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"ABAPAuditLog_CL \\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems})) \\r\\n//| take 1\\r\\n| summarize count() by MessageClass_s//, MessageID_s, Type\\r\\n//| summarize dcount(User_s) by bin(TimeGenerated,1d)\",\n                            \"size\": 0,\n                            \"title\": \"Message class count\",\n                            \"timeContext\": {\n                                \"durationMs\": 7776000000\n                            },\n                            \"timeContextFromParameter\": \"TimeSelect\",\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                            \"visualization\": \"barchart\"\n                        },\n                        \"name\": \"query - 5\"\n                    },\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"ABAPAuditLog_CL \\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems})) \\r\\n//| take 1\\r\\n| summarize count() by MessageID_s//, Type\\r\\n//| summarize dcount(User_s) by bin(TimeGenerated,1d)\",\n                            \"size\": 0,\n                            \"title\": \"Message IDs count\",\n                            \"timeContext\": {\n                                \"durationMs\": 7776000000\n                            },\n                            \"timeContextFromParameter\": \"TimeSelect\",\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                            \"visualization\": \"barchart\"\n                        },\n                        \"name\": \"query - 5\"\n                    },\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"ABAPAuditLog_CL\\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems})) \\r\\n| where ABAPProgramName_s != \\\"SAPMSSY1\\\" and ABAPProgramName_s != \\\"\\\"\\r\\n| summarize count() by ABAPProgramName_s\",\n                            \"size\": 0,\n                            \"title\": \"ABAP programs executed\",\n                            \"timeContext\": {\n                                \"durationMs\": 604800000\n                            },\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                            \"visualization\": \"piechart\",\n                            \"chartSettings\": {\n                                \"createOtherGroup\": 12\n                            }\n                        },\n                        \"name\": \"query - 5\"\n                    }\n                ]\n            },\n            \"conditionalVisibility\": {\n                \"parameterName\": \"workbook-param\",\n                \"comparison\": \"isEqualTo\",\n                \"value\": \"general\"\n            },\n            \"name\": \"group - 4\"\n        }\n    ],\n    \"fallbackResourceIds\": [\n        \"/subscriptions/fdee8146-8bcf-460f-86f3-3f788c285efd/resourcegroups/iprosis/providers/microsoft.operationalinsights/workspaces/s4h-sentinel-development\"\n    ],\n    \"fromTemplateId\": \"sentinel-UserWorkbook\",\n    \"$schema\": \"https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json\"\n}",
                "version": "1.0",
                "sourceId": "[variables('_workbook-source')]",
                "category": "sentinel"
            }
        },
        {
            "type": "Microsoft.Insights/workbooks",
            "name": "[parameters('workbook2-id')]",
            "location": "[parameters('workspace-location')]",
            "kind": "shared",
            "apiVersion": "2020-02-12",
            "properties": {
                "displayName": "[concat('Preview - ',parameters('workbook2-name'), ' - ', parameters('formattedTimeNow'))]",
                "serializedData": "{\n    \"version\": \"Notebook/1.0\",\n    \"items\": [\n        {\n            \"type\": 11,\n            \"content\": {\n                \"version\": \"LinkItem/1.0\",\n                \"style\": \"tabs\",\n                \"links\": [\n                    {\n                        \"id\": \"1ba57074-aaef-4cd6-9003-ac4fc68396c8\",\n                        \"cellValue\": \"wb-param\",\n                        \"linkTarget\": \"parameter\",\n                        \"linkLabel\": \"Initial Access\",\n                        \"subTarget\": \"init\",\n                        \"style\": \"link\"\n                    },\n                    {\n                        \"id\": \"6eba249f-f4bc-4125-84c8-904e8b886a5b\",\n                        \"cellValue\": \"wb-param\",\n                        \"linkTarget\": \"parameter\",\n                        \"linkLabel\": \"Sensitive Actions\",\n                        \"subTarget\": \"action\",\n                        \"style\": \"link\"\n                    },\n                    {\n                        \"id\": \"9b159c64-7c4d-48d0-a8c7-4da7cba485a6\",\n                        \"cellValue\": \"wb-param\",\n                        \"linkTarget\": \"parameter\",\n                        \"linkLabel\": \"Configuration Changes\",\n                        \"subTarget\": \"config\",\n                        \"style\": \"link\"\n                    },\n                    {\n                        \"id\": \"dd9daa53-50df-4c42-8797-56e8c84530ce\",\n                        \"cellValue\": \"wb-param\",\n                        \"linkTarget\": \"parameter\",\n                        \"linkLabel\": \"Debugging\",\n                        \"subTarget\": \"debug\",\n                        \"style\": \"link\"\n                    }\n                ]\n            },\n            \"name\": \"links - 0\"\n        },\n        {\n            \"type\": 9,\n            \"content\": {\n                \"version\": \"KqlParameterItem/1.0\",\n                \"parameters\": [\n                    {\n                        \"id\": \"f2d3f0e7-a660-4bbf-8008-80d40683aa93\",\n                        \"version\": \"KqlParameterItem/1.0\",\n                        \"name\": \"TimeSelect\",\n                        \"label\": \"Time Range\",\n                        \"type\": 4,\n                        \"isGlobal\": true,\n                        \"value\": {\n                            \"durationMs\": 7776000000\n                        },\n                        \"typeSettings\": {\n                            \"selectableValues\": [\n                                {\n                                    \"durationMs\": 300000\n                                },\n                                {\n                                    \"durationMs\": 900000\n                                },\n                                {\n                                    \"durationMs\": 1800000\n                                },\n                                {\n                                    \"durationMs\": 3600000\n                                },\n                                {\n                                    \"durationMs\": 14400000\n                                },\n                                {\n                                    \"durationMs\": 43200000\n                                },\n                                {\n                                    \"durationMs\": 86400000\n                                },\n                                {\n                                    \"durationMs\": 172800000\n                                },\n                                {\n                                    \"durationMs\": 259200000\n                                },\n                                {\n                                    \"durationMs\": 604800000\n                                },\n                                {\n                                    \"durationMs\": 1209600000\n                                },\n                                {\n                                    \"durationMs\": 2419200000\n                                },\n                                {\n                                    \"durationMs\": 2592000000\n                                },\n                                {\n                                    \"durationMs\": 5184000000\n                                },\n                                {\n                                    \"durationMs\": 7776000000\n                                }\n                            ],\n                            \"allowCustom\": true\n                        },\n                        \"timeContext\": {\n                            \"durationMs\": 86400000\n                        }\n                    },\n                    {\n                        \"id\": \"668dcf40-2cb2-4b88-b5b7-438d1488eb4e\",\n                        \"version\": \"KqlParameterItem/1.0\",\n                        \"name\": \"Systems\",\n                        \"label\": \"System\",\n                        \"type\": 2,\n                        \"isRequired\": true,\n                        \"isGlobal\": true,\n                        \"multiSelect\": true,\n                        \"quote\": \"'\",\n                        \"delimiter\": \",\",\n                        \"query\": \"ABAPAuditLog_CL | summarize  by  SystemID_s \",\n                        \"value\": [\n                            \"value::all\"\n                        ],\n                        \"typeSettings\": {\n                            \"additionalResourceOptions\": [\n                                \"value::all\"\n                            ],\n                            \"showDefault\": false\n                        },\n                        \"timeContext\": {\n                            \"durationMs\": 2592000000\n                        },\n                        \"queryType\": 0,\n                        \"resourceType\": \"microsoft.operationalinsights/workspaces\"\n                    }\n                ],\n                \"style\": \"above\",\n                \"queryType\": 0,\n                \"resourceType\": \"microsoft.operationalinsights/workspaces\"\n            },\n            \"name\": \"parameters - 1\"\n        },\n        {\n            \"type\": 1,\n            \"content\": {\n                \"json\": \"<tr><td><h2 style=\\\"font-family: 'Enriqueta', arial, serif; line-height: 1.25; margin: 0 0 10px; font-size: 24px; font-weight: bold;\\\"><B>Changes during Debug Mode</b></h2>\\r\\n<tr><td><p style=\\\"color: #333; font-family: 'Muli', sans-serif; margin-bottom: 15px; font-size: 14px;\\\"><B>Identifies changes for runtime data during a debugging activity.</b></p>\"\n            },\n            \"conditionalVisibility\": {\n                \"parameterName\": \"wb-param\",\n                \"comparison\": \"isEqualTo\",\n                \"value\": \"debug\"\n            },\n            \"name\": \"text - 6\"\n        },\n        {\n            \"type\": 1,\n            \"content\": {\n                \"json\": \"<tr><td><h2 style=\\\"font-family: 'Enriqueta', arial, serif; line-height: 1.25; margin: 0 0 10px; font-size: 24px; font-weight: bold;\\\"><B>Executions of Sensitive Actions</b></h2>\\r\\n<tr><td><p style=\\\"color: #333; font-family: 'Muli', sans-serif; margin-bottom: 15px; font-size: 14px;\\\"><B>Identifies a direct execution of:</b></p>\\r\\n<tr><td><li style=\\\"color: #333; font-family: 'Muli', sans-serif; margin-bottom: 15px; font-size: 14px;\\\"><B>Sensitive transaction code</b></li>\\r\\n<tr><td><li style=\\\"color: #333; font-family: 'Muli', sans-serif; margin-bottom: 15px; font-size: 14px;\\\"><B>Sensitive ABAP program</b></li>\\r\\n<tr><td><li style=\\\"color: #333; font-family: 'Muli', sans-serif; margin-bottom: 15px; font-size: 14px;\\\"><B>Sensitive function module</b></li>\\r\\n\"\n            },\n            \"conditionalVisibility\": {\n                \"parameterName\": \"wb-param\",\n                \"comparison\": \"isEqualTo\",\n                \"value\": \"action\"\n            },\n            \"name\": \"text - 5\"\n        },\n        {\n            \"type\": 12,\n            \"content\": {\n                \"version\": \"NotebookGroup/1.0\",\n                \"groupType\": \"editable\",\n                \"items\": [\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"// Define Variables\\r\\nlet Role = \\\"Production\\\";\\r\\nlet AuditClasses = dynamic(['AUW']); // Audit Log Classes - Report Started\\r\\nlet allSystemRoles = dynamic(['Sandbox','Developement','QualityAssurance','Training','Production']); // Available System Roles\\r\\nlet allSystemUsage = dynamic (['ERP','CRM','BW','Solman','Gateway','Enterprise Portal']); // Available System Usages\\r\\n// Get Relevant Systems from WatchList\\r\\nlet systemID = _GetWatchlist('SAP - Systems');\\r\\nlet fixedSID = datatable(SystemID:string, SystemRole:string, SystemUsage:string)\\r\\n// Maintain these if WatchList is not available    \\r\\n    [\\\"S4H\\\",\\\"Production\\\",\\\"ERP\\\",\\r\\n    \\\"XXX\\\",\\\"Sandbox\\\",\\\"BW\\\"]\\r\\n; \\r\\n// Get Relevant ABAP Programs\\r\\nlet SensitiveABAPReports = _GetWatchlist('SAP - Sensitive ABAP Programs');\\r\\nlet fixedABAPReports = datatable(ABAPProgram:string)\\r\\n// Maintain these if WatchList is not available    \\r\\n    [\\\"RSPFLDOC\\\"]\\r\\n; \\r\\nlet UnionAbap = \\r\\n    union SensitiveABAPReports, fixedABAPReports\\r\\n    | summarize by ABAPProgram;\\r\\nlet UnitedSystem =\\r\\nunion systemID, fixedSID\\r\\n| summarize by SystemID, SystemRole, SystemUsage\\r\\n| where SystemRole == Role; // Reccommended is Production only\\r\\n//| where SystemRole in (allSystemRoles); // Use this for all system roles\\r\\n// Query logic\\r\\nABAPAuditLog_CL \\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\\r\\n| where MessageID_s in (AuditClasses)\\r\\n| where ABAPProgramName_s in (UnionAbap)\\r\\n| project-rename SystemID = SystemID_s\\r\\n| lookup kind = inner (UnitedSystem) on SystemID\\r\\n| summarize count() by ABAPProgramName_s\",\n                            \"size\": 0,\n                            \"title\": \"Execution of a Sensitive ABAP Program\",\n                            \"color\": \"magenta\",\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                            \"visualization\": \"categoricalbar\"\n                        },\n                        \"customWidth\": \"50\",\n                        \"name\": \"query - 0\",\n                        \"styleSettings\": {\n                            \"margin\": \"5px\"\n                        }\n                    },\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"// Define Variables\\r\\nlet Role = 'Production';\\r\\nlet AuditClasses = dynamic(['AU3']); // Audit Log Classes - Transaction Started\\r\\nlet allSystemRoles = dynamic(['Sandbox','Developement','QualityAssurance','Training','Production']); // Available System Roles\\r\\nlet allSystemUsage = dynamic (['ERP','CRM','BW','Solman','Gateway','Enterprise Portal']); // Available System Usages\\r\\n// Get Relevant Systems from WatchList\\r\\nlet systemID = _GetWatchlist('SAP - Systems');\\r\\nlet fixedSID = datatable(SystemID:string, SystemRole:string, SystemUsage:string)\\r\\n// Maintain these if WatchList is not available    \\r\\n    [\\\"S4H\\\",\\\"Production\\\",\\\"ERP\\\",\\r\\n    \\\"XXX\\\",\\\"Sandbox\\\",\\\"BW\\\"]\\r\\n; \\r\\n// Get Relevant Transaction Codes\\r\\nlet SensitiveTcode = _GetWatchlist('SAP - Sensitive Transactions');\\r\\nlet fixedTcode = datatable(TransactionCode:string)\\r\\n// Maintain these if WatchList is not available    \\r\\n    [\\\"RSAU_CONFIG\\\",\\\"RZ11\\\",\\\"SM19\\\"]\\r\\n; \\r\\nlet UnitedCodes = \\r\\n    union SensitiveTcode, fixedTcode\\r\\n    | summarize by TransactionCode;\\r\\nlet UnitedSystem =\\r\\nunion systemID, fixedSID\\r\\n| summarize by SystemID, SystemRole, SystemUsage\\r\\n| where SystemRole == Role; // Recommended  is Production only\\r\\n//| where SystemRole in (allSystemRoles); // Use this for all system roles\\r\\n// Query logic\\r\\nABAPAuditLog_CL \\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\\r\\n| where MessageID_s in (AuditClasses)\\r\\n| where TransactionCode_s in (UnitedCodes)\\r\\n| project-rename SystemID = SystemID_s\\r\\n| lookup kind = inner (UnitedSystem) on SystemID\\r\\n| summarize count() by TransactionCode_s\",\n                            \"size\": 0,\n                            \"title\": \"Execution of a Sensitive Transaction Code\",\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                            \"visualization\": \"categoricalbar\"\n                        },\n                        \"customWidth\": \"50\",\n                        \"name\": \"query - 2\",\n                        \"styleSettings\": {\n                            \"margin\": \"5px\"\n                        }\n                    },\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"// Define variables\\r\\nlet RelTable = \\\"EUFUNC\\\"; // Relevant table\\r\\nlet AuditLogIn = dynamic(['AU1', 'AU5']); // Messages of connect with user\\r\\nlet SenseModules =  _GetWatchlist('SAP - Sensitive Function Modules');\\r\\nlet fixedModules = datatable(FunctionModule:string)['RSAU_CLEAR_AUDIT_LOG','BAPI_USER_CREATE', 'RFC_GET_TABLE_ENTRIES']; \\r\\nlet UnitedModules =\\r\\ntoscalar(union fixedModules, SenseModules\\r\\n| summarize FunctionModules =  make_set(FunctionModule));\\r\\n// Query logic\\r\\nlet LastLogin = \\r\\nABAPAuditLog_CL\\r\\n| where MessageID_s in (AuditLogIn)\\r\\n| summarize TimeGenerated = arg_max(TimeGenerated, *) by SystemID_s, ClientID_s, User_s; // Get last connection date for user\\r\\nABAPTableDataLog_CL\\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\\r\\n| where TableName_s == RelTable \\r\\n| extend Module = extract(@\\\"\\\\s+(.{1,}\\\\b)\\\\s+\\\", 1, LogKey_s, typeof(string)) // Extract Function Module\\r\\n| where Module in (UnitedModules) // Module is sensitive\\r\\n| lookup kind=inner LastLogin on $left.UserName_s == $right.User_s\\r\\n| summarize by TimeGenerated, Module\\r\\n| summarize count() by Module\",\n                            \"size\": 0,\n                            \"title\": \"Dialog Execution of Sensitive Function Module\",\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                            \"visualization\": \"piechart\"\n                        },\n                        \"customWidth\": \"50\",\n                        \"name\": \"query - 1\"\n                    },\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"let Role = \\\"Production\\\";\\r\\nlet AuditClasses = dynamic(['AUK']); // Audit Log Classes - Successful RFC call &C (function group = &A)\\r\\nlet allSystemRoles = dynamic(['Sandbox', 'Developement', 'QualityAssurance', 'Training', 'Production']); // Available System Roles\\r\\nlet allSystemUsage = dynamic (['ERP', 'CRM', 'BW', 'Solman', 'Gateway', 'Enterprise Portal']); // Available System Usages\\r\\n// Get Relevant Systems from WatchList\\r\\nlet systemID = _GetWatchlist('SAP - Systems');\\r\\nlet fixedSID = datatable(SystemID: string, SystemRole: string, SystemUsage: string)\\r\\n    // Maintain these if WatchList is not available    \\r\\n    [\\\"S4H\\\", \\\"Production\\\", \\\"ERP\\\",\\r\\n    \\\"XXX\\\", \\\"Sandbox\\\", \\\"BW\\\"]\\r\\n; \\r\\n// Get Relevant Function Modules\\r\\nlet SensitiveFM = _GetWatchlist('SAP - Sensitive Function Modules');\\r\\nlet fixedFM = datatable(FunctionModule: string)\\r\\n    // Maintain these if WatchList is not available    \\r\\n    [\\\"RSAU_CLEAR_AUDIT_LOG\\\"]\\r\\n; \\r\\nlet UnitedSystems = union systemID, fixedSID\\r\\n| where SystemRole == Role // Recommended  is Production only\\r\\n| summarize by SystemID;\\r\\n//| where SystemRole in (allSystemRoles); // Use this for all system roles\\r\\nlet UnitedSensitive =  union SensitiveFM, fixedFM\\r\\n| summarize by FunctionModule;\\r\\nABAPAuditLog_CL \\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\\r\\n| where MessageID_s in (AuditClasses)\\r\\n| project-rename FunctionModule = Variable3_s, FunctionGroup = Variable1_s\\r\\n| where SystemID_s in (UnitedSystems) // The systemID is in this list\\r\\n| where FunctionModule in (UnitedSensitive) // Function module is sensitive\\r\\n| summarize by TimeGenerated, FunctionModule\\r\\n| summarize count() by FunctionModule\",\n                            \"size\": 0,\n                            \"title\": \"RFC Execution of a Sensitive Function Module\",\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                            \"visualization\": \"piechart\"\n                        },\n                        \"customWidth\": \"50\",\n                        \"name\": \"query - 3\"\n                    },\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"// Define Variables\\r\\nlet Role = 'Production';\\r\\nlet TranAuditClasses = dynamic(['AU3']); // Audit Log Classes - Transaction Started\\r\\nlet allSystemRoles = dynamic(['Sandbox','Developement','QualityAssurance','Training','Production']); // Available System Roles\\r\\nlet allSystemUsage = dynamic (['ERP','CRM','BW','Solman','Gateway','Enterprise Portal']); // Available System Usages\\r\\n// Get Relevant Systems from WatchList\\r\\nlet systemID = _GetWatchlist('SAP - Systems');\\r\\nlet fixedSID = datatable(SystemID:string, SystemRole:string, SystemUsage:string)\\r\\n// Maintain these if WatchList is not available    \\r\\n    [\\\"S4H\\\",\\\"Production\\\",\\\"ERP\\\",\\r\\n    \\\"XXX\\\",\\\"Sandbox\\\",\\\"BW\\\"]\\r\\n; \\r\\n// Get Relevant Transaction Codes\\r\\nlet SensitiveTcode = _GetWatchlist('SAP - Sensitive Transactions');\\r\\nlet fixedTcode = datatable(TransactionCode:string)\\r\\n// Maintain these if WatchList is not available    \\r\\n    [\\\"RSAU_CONFIG\\\",\\\"RZ11\\\",\\\"SM19\\\"]\\r\\n; \\r\\nlet UnitedCodes = \\r\\n    union SensitiveTcode, fixedTcode\\r\\n    | summarize by TransactionCode;\\r\\nlet UnitedSystem =\\r\\nunion systemID, fixedSID\\r\\n| summarize by SystemID, SystemRole, SystemUsage\\r\\n| where SystemRole == Role; // Recommended  is Production only\\r\\n//| where SystemRole in (allSystemRoles); // Use this for all system roles\\r\\n// Query logic\\r\\nlet Transactions =\\r\\nABAPAuditLog_CL \\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\\r\\n| where MessageID_s in (TranAuditClasses)\\r\\n| where TransactionCode_s in (UnitedCodes)\\r\\n| project-rename SystemID = SystemID_s\\r\\n| lookup kind = inner (UnitedSystem) on SystemID\\r\\n| summarize count() by bin(TimeGenerated, 1h);\\r\\nlet RFCAuditClasses = dynamic(['AUK']); // Audit Log Classes - Successful RFC call &C (function group = &A)\\r\\n// Get Relevant Function Modules\\r\\nlet SensitiveFM = _GetWatchlist('SAP - Sensitive Function Modules');\\r\\nlet fixedFM = datatable(FunctionModule: string)\\r\\n    // Maintain these if WatchList is not available    \\r\\n    [\\\"RSAU_CLEAR_AUDIT_LOG\\\"]\\r\\n; \\r\\nlet UnitedSensitive =  union SensitiveFM, fixedFM\\r\\n| summarize by FunctionModule;\\r\\nlet RFCFunc =\\r\\nABAPAuditLog_CL \\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\\r\\n| where MessageID_s in (RFCAuditClasses)\\r\\n| project-rename FunctionModule = Variable3_s, FunctionGroup = Variable1_s\\r\\n| where SystemID_s in (UnitedSystem) // The systemID is in this list\\r\\n| where FunctionModule in (UnitedSensitive) // Function module is sensitive\\r\\n| summarize count() by bin(TimeGenerated, 1h);\\r\\n// Define variables\\r\\nlet RelTable = \\\"EUFUNC\\\"; // Relevant table\\r\\nlet AuditLogIn = dynamic(['AU1', 'AU5']); // Messages of connect with user\\r\\nlet SenseModules =  _GetWatchlist('SAP - Sensitive Function Modules');\\r\\nlet fixedModules = datatable(FunctionModule:string)['RSAU_CLEAR_AUDIT_LOG','BAPI_USER_CREATE', 'RFC_GET_TABLE_ENTRIES']; \\r\\nlet UnitedModules =\\r\\ntoscalar(union fixedModules, SenseModules\\r\\n| summarize FunctionModules =  make_set(FunctionModule));\\r\\n// Query logic\\r\\nlet LastLogin = \\r\\nABAPAuditLog_CL\\r\\n| where MessageID_s in (AuditLogIn)\\r\\n| summarize TimeGenerated = arg_max(TimeGenerated, *) by SystemID_s, ClientID_s, User_s; // Get last connection date for user\\r\\nlet DialogFunc =\\r\\nABAPTableDataLog_CL\\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\\r\\n| where TableName_s == RelTable \\r\\n| extend Module = extract(@\\\"\\\\s+(.{1,}\\\\b)\\\\s+\\\", 1, LogKey_s, typeof(string)) // Extract Function Module\\r\\n| extend FunctionGroup = extract(@\\\"^FL([^\\\\s]*)\\\\s\\\", 1, LogKey_s, typeof(string)) // Extract Function Group\\r\\n| extend ExecutionVariant = extract(@\\\"\\\\b(\\\\w+)$\\\", 1, LogKey_s, typeof(string)) // Extract Execution Varient\\r\\n| where Module in (UnitedModules) // Module is sensitive\\r\\n| lookup kind=inner LastLogin on $left.UserName_s == $right.User_s\\r\\n| summarize count() by bin(TimeGenerated, 1h);\\r\\n// Define Variables\\r\\nlet AuditClasses = dynamic(['AUW']); // Audit Log Classes - Report Started\\r\\n// Get Relevant ABAP Programs\\r\\nlet SensitiveABAPReports = _GetWatchlist('SAP - Sensitive ABAP Programs');\\r\\nlet fixedABAPReports = datatable(ABAPProgram:string)\\r\\n// Maintain these if WatchList is not available    \\r\\n    [\\\"RSPFLDOC\\\"]\\r\\n; \\r\\nlet UnionAbap = \\r\\n    union SensitiveABAPReports, fixedABAPReports\\r\\n    | summarize by ABAPProgram;\\r\\n// Query logic\\r\\nABAPAuditLog_CL \\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\\r\\n| where MessageID_s in (AuditClasses)\\r\\n| where ABAPProgramName_s in (UnionAbap)\\r\\n| project-rename SystemID = SystemID_s\\r\\n| lookup kind = inner (UnitedSystem) on SystemID\\r\\n| summarize count() by bin(TimeGenerated, 1h)\\r\\n| union Transactions\\r\\n| union RFCFunc\\r\\n| union DialogFunc\\r\\n| project-rename Actions = count_\",\n                            \"size\": 0,\n                            \"title\": \"Sensitive Actions by Time\",\n                            \"color\": \"redBright\",\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                            \"visualization\": \"areachart\"\n                        },\n                        \"name\": \"query - 4\"\n                    },\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"// Define Variables\\r\\nlet Role = 'Production';\\r\\nlet TranAuditClasses = dynamic(['AU3']); // Audit Log Classes - Transaction Started\\r\\nlet allSystemRoles = dynamic(['Sandbox','Developement','QualityAssurance','Training','Production']); // Available System Roles\\r\\nlet allSystemUsage = dynamic (['ERP','CRM','BW','Solman','Gateway','Enterprise Portal']); // Available System Usages\\r\\n// Get Relevant Systems from WatchList\\r\\nlet systemID = _GetWatchlist('SAP - Systems');\\r\\nlet fixedSID = datatable(SystemID:string, SystemRole:string, SystemUsage:string)\\r\\n// Maintain these if WatchList is not available    \\r\\n    [\\\"S4H\\\",\\\"Production\\\",\\\"ERP\\\",\\r\\n    \\\"XXX\\\",\\\"Sandbox\\\",\\\"BW\\\"]\\r\\n; \\r\\n// Get Relevant Transaction Codes\\r\\nlet SensitiveTcode = _GetWatchlist('SAP - Sensitive Transactions');\\r\\nlet fixedTcode = datatable(TransactionCode:string)\\r\\n// Maintain these if WatchList is not available    \\r\\n    [\\\"RSAU_CONFIG\\\",\\\"RZ11\\\",\\\"SM19\\\"]\\r\\n; \\r\\nlet UnitedCodes = \\r\\n    union SensitiveTcode, fixedTcode\\r\\n    | summarize by TransactionCode;\\r\\nlet UnitedSystem =\\r\\nunion systemID, fixedSID\\r\\n| summarize by SystemID, SystemRole, SystemUsage\\r\\n| where SystemRole == Role; // Recommended  is Production only\\r\\n//| where SystemRole in (allSystemRoles); // Use this for all system roles\\r\\n// Query logic\\r\\nlet Transactions =\\r\\nABAPAuditLog_CL \\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\\r\\n| where MessageID_s in (TranAuditClasses)\\r\\n| where TransactionCode_s in (UnitedCodes)\\r\\n| project-rename SystemID = SystemID_s\\r\\n| lookup kind = inner (UnitedSystem) on SystemID\\r\\n| summarize count() by bin(TimeGenerated, 1h);\\r\\nlet RFCAuditClasses = dynamic(['AUK']); // Audit Log Classes - Successful RFC call &C (function group = &A)\\r\\n// Get Relevant Function Modules\\r\\nlet SensitiveFM = _GetWatchlist('SAP - Sensitive Function Modules');\\r\\nlet fixedFM = datatable(FunctionModule: string)\\r\\n    // Maintain these if WatchList is not available    \\r\\n    [\\\"RSAU_CLEAR_AUDIT_LOG\\\"]\\r\\n; \\r\\nlet UnitedSensitive =  union SensitiveFM, fixedFM\\r\\n| summarize by FunctionModule;\\r\\nlet RFCFunc =\\r\\nABAPAuditLog_CL \\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\\r\\n| where MessageID_s in (RFCAuditClasses)\\r\\n| project-rename FunctionModule = Variable3_s, FunctionGroup = Variable1_s\\r\\n| where SystemID_s in (UnitedSystem) // The systemID is in this list\\r\\n| where FunctionModule in (UnitedSensitive) // Function module is sensitive\\r\\n| summarize count() by bin(TimeGenerated, 1h);\\r\\n// Define variables\\r\\nlet RelTable = \\\"EUFUNC\\\"; // Relevant table\\r\\nlet AuditLogIn = dynamic(['AU1', 'AU5']); // Messages of connect with user\\r\\nlet SenseModules =  _GetWatchlist('SAP - Sensitive Function Modules');\\r\\nlet fixedModules = datatable(FunctionModule:string)['RSAU_CLEAR_AUDIT_LOG','BAPI_USER_CREATE', 'RFC_GET_TABLE_ENTRIES']; \\r\\nlet UnitedModules =\\r\\ntoscalar(union fixedModules, SenseModules\\r\\n| summarize FunctionModules =  make_set(FunctionModule));\\r\\n// Query logic\\r\\nlet LastLogin = \\r\\nABAPAuditLog_CL\\r\\n| where MessageID_s in (AuditLogIn)\\r\\n| summarize TimeGenerated = arg_max(TimeGenerated, *) by SystemID_s, ClientID_s, User_s; // Get last connection date for user\\r\\nlet DialogFunc =\\r\\nABAPTableDataLog_CL\\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\\r\\n| where TableName_s == RelTable \\r\\n| extend Module = extract(@\\\"\\\\s+(.{1,}\\\\b)\\\\s+\\\", 1, LogKey_s, typeof(string)) // Extract Function Module\\r\\n| extend FunctionGroup = extract(@\\\"^FL([^\\\\s]*)\\\\s\\\", 1, LogKey_s, typeof(string)) // Extract Function Group\\r\\n| extend ExecutionVariant = extract(@\\\"\\\\b(\\\\w+)$\\\", 1, LogKey_s, typeof(string)) // Extract Execution Varient\\r\\n| where Module in (UnitedModules) // Module is sensitive\\r\\n| lookup kind=inner LastLogin on $left.UserName_s == $right.User_s\\r\\n| summarize count() by bin(TimeGenerated, 1h);\\r\\n// Define Variables\\r\\nlet AuditClasses = dynamic(['AUW']); // Audit Log Classes - Report Started\\r\\n// Get Relevant ABAP Programs\\r\\nlet SensitiveABAPReports = _GetWatchlist('SAP - Sensitive ABAP Programs');\\r\\nlet fixedABAPReports = datatable(ABAPProgram:string)\\r\\n// Maintain these if WatchList is not available    \\r\\n    [\\\"RSPFLDOC\\\"]\\r\\n; \\r\\nlet UnionAbap = \\r\\n    union SensitiveABAPReports, fixedABAPReports\\r\\n    | summarize by ABAPProgram;\\r\\n// Query logic\\r\\nABAPAuditLog_CL \\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\\r\\n| where MessageID_s in (AuditClasses)\\r\\n| where ABAPProgramName_s in (UnionAbap)\\r\\n| project-rename SystemID = SystemID_s\\r\\n| lookup kind = inner (UnitedSystem) on SystemID\\r\\n| summarize count() by bin(TimeGenerated, 1h)\\r\\n| union Transactions\\r\\n| union RFCFunc\\r\\n| union DialogFunc\\r\\n| project-rename Actions = count_\\r\\n| make-series Actions=avg(Actions) on TimeGenerated from ago(30d) to ago(0d) step 1h\\r\\n| extend (Anomalies, Score, Actions) = series_decompose_anomalies(Actions, 1.5, -1, 'linefit')\",\n                            \"size\": 0,\n                            \"title\": \"Sensitive Actions Anomalies\",\n                            \"color\": \"redBright\",\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                            \"visualization\": \"timechart\"\n                        },\n                        \"name\": \"query - 4 - Copy\"\n                    }\n                ]\n            },\n            \"conditionalVisibility\": {\n                \"parameterName\": \"wb-param\",\n                \"comparison\": \"isEqualTo\",\n                \"value\": \"action\"\n            },\n            \"name\": \"group - 2\"\n        },\n        {\n            \"type\": 12,\n            \"content\": {\n                \"version\": \"NotebookGroup/1.0\",\n                \"groupType\": \"editable\",\n                \"items\": [\n                    {\n                        \"type\": 12,\n                        \"content\": {\n                            \"version\": \"NotebookGroup/1.0\",\n                            \"groupType\": \"editable\",\n                            \"items\": [\n                                {\n                                    \"type\": 1,\n                                    \"content\": {\n                                        \"json\": \"<tr><td><h2 style=\\\"font-family: 'Enriqueta', arial, serif; line-height: 1.25; margin: 0 0 10px; font-size: 24px; font-weight: bold;\\\"><B>Deactivation of Logs</b></h2>\\r\\n<tr><td><p style=\\\"color: #333; font-family: 'Muli', sans-serif; margin-bottom: 15px; font-size: 14px;\\\"><B>Identifies deactivation of logs.</b></p>\"\n                                    },\n                                    \"conditionalVisibility\": {\n                                        \"parameterName\": \"wb-param\",\n                                        \"comparison\": \"isEqualTo\",\n                                        \"value\": \"config\"\n                                    },\n                                    \"name\": \"text - 6\"\n                                },\n                                {\n                                    \"type\": 3,\n                                    \"content\": {\n                                        \"version\": \"KqlItem/1.0\",\n                                        \"query\": \"// Audit Log Classes - Audit Log Active Status Events\\r\\nlet AuditClasses = dynamic(['AUJ']);\\r\\nABAPAuditLog_CL \\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\\r\\n| where MessageID_s in (AuditClasses)\\r\\n| where Variable1_s == '0' // Audit Active Status = 0\\r\\n| summarize Deactivations = count() by bin(TimeGenerated, 24h)\",\n                                        \"size\": 0,\n                                        \"title\": \"Deactivation of Security Audit Log\",\n                                        \"color\": \"blueDark\",\n                                        \"queryType\": 0,\n                                        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                                        \"visualization\": \"timechart\"\n                                    },\n                                    \"name\": \"query - 0\"\n                                },\n                                {\n                                    \"type\": 3,\n                                    \"content\": {\n                                        \"version\": \"KqlItem/1.0\",\n                                        \"query\": \"Syslog \\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where ProcessName startswith \\\"HDB\\\"\\r\\n| where SyslogMessage contains \\\"AUDIT CONFIGURATION\\\" and \\r\\n    SyslogMessage contains 'global_auditing_state' and \\r\\n    SyslogMessage contains 'False'\\r\\n| summarize Deactivations = count() by Time = bin(TimeGenerated, 1h)\",\n                                        \"size\": 0,\n                                        \"title\": \"HANA DB - Deactivation of Audit Trail\",\n                                        \"color\": \"yellow\",\n                                        \"queryType\": 0,\n                                        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                                        \"visualization\": \"timechart\"\n                                    },\n                                    \"name\": \"query - 1 - Copy\",\n                                    \"styleSettings\": {\n                                        \"margin\": \"0\"\n                                    }\n                                }\n                            ]\n                        },\n                        \"name\": \"group - 7\"\n                    },\n                    {\n                        \"type\": 12,\n                        \"content\": {\n                            \"version\": \"NotebookGroup/1.0\",\n                            \"groupType\": \"editable\",\n                            \"items\": [\n                                {\n                                    \"type\": 1,\n                                    \"content\": {\n                                        \"json\": \"<tr><td><h2 style=\\\"font-family: 'Enriqueta', arial, serif; line-height: 1.25; margin: 0 0 10px; font-size: 24px; font-weight: bold;\\\"><B>Changes in Configuration</b></h2>\\r\\n<tr><td><p style=\\\"color: #333; font-family: 'Muli', sans-serif; margin-bottom: 15px; font-size: 14px;\\\"><B>Identifies changes in configuration in system, client, transactions etc.</b></p>\"\n                                    },\n                                    \"conditionalVisibility\": {\n                                        \"parameterName\": \"wb-param\",\n                                        \"comparison\": \"isEqualTo\",\n                                        \"value\": \"config\"\n                                    },\n                                    \"name\": \"text - 3\"\n                                },\n                                {\n                                    \"type\": 3,\n                                    \"content\": {\n                                        \"version\": \"KqlItem/1.0\",\n                                        \"query\": \"// Audit Log Classes - Audit Log Configuration Events\\r\\nlet AuditClasses = dynamic(['AUE','AUF','AUI','AUJ','FU0','E05']); // Relevant messages\\r\\nABAPAuditLog_CL \\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\\r\\n| where MessageID_s in (AuditClasses)\\r\\n| project \\r\\n// Details\\r\\nTimeGenerated, SystemID_s, User_s, MessageText_s,\\r\\nAccountCustomEntity = Email_s, IPCustomEntity = TerminalIPv6_s, HostCustomEntity = Host_s\\r\\n| summarize Changes = count() by bin(TimeGenerated, 1h)\",\n                                        \"size\": 0,\n                                        \"title\": \"Security Audit Log Configuration Change\",\n                                        \"color\": \"blueDarkDark\",\n                                        \"queryType\": 0,\n                                        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                                        \"visualization\": \"linechart\",\n                                        \"chartSettings\": {\n                                            \"showDataPoints\": true\n                                        }\n                                    },\n                                    \"name\": \"query - 2\"\n                                },\n                                {\n                                    \"type\": 3,\n                                    \"content\": {\n                                        \"version\": \"KqlItem/1.0\",\n                                        \"query\": \"// Audit Log Classes - Audit Log Configuration Events\\r\\nlet AuditClasses = dynamic(['AUE','AUF','AUI','AUJ','FU0','E05']); // Relevant messages\\r\\nABAPAuditLog_CL \\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\\r\\n| where MessageID_s in (AuditClasses)\\r\\n| project \\r\\n// Details\\r\\nTimeGenerated, SystemID_s, User_s, MessageText_s,\\r\\nAccountCustomEntity = Email_s, IPCustomEntity = TerminalIPv6_s, HostCustomEntity = Host_s\\r\\n| summarize Changes = count() by bin(TimeGenerated, 1h)\\r\\n| make-series Changes=avg(Changes) on TimeGenerated from ago(7d) to ago(0d) step 1h \\r\\n| extend (Anomalies, Score, Baseline) = series_decompose_anomalies(Changes, 1.5, -1, 'linefit')\\r\\n| project-away Score\",\n                                        \"size\": 0,\n                                        \"title\": \"Security Audit Log Configuration Change Anomalies\",\n                                        \"color\": \"blueDarkDark\",\n                                        \"queryType\": 0,\n                                        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                                        \"visualization\": \"linechart\",\n                                        \"chartSettings\": {\n                                            \"showDataPoints\": true\n                                        }\n                                    },\n                                    \"name\": \"query - 2 - Copy\"\n                                },\n                                {\n                                    \"type\": 3,\n                                    \"content\": {\n                                        \"version\": \"KqlItem/1.0\",\n                                        \"query\": \"// Audit Log Classes - System Change Configuration\\r\\nlet AuditClasses = dynamic(['EU1']); // Relevant message\\r\\nABAPAuditLog_CL \\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\\r\\n| where MessageID_s in (AuditClasses)\\r\\n| project \\r\\n// Details\\r\\nTimeGenerated, SystemID_s, User_s, TransactionCode_s, SoftwareComponent = Variable1_s, NewModifiabilityStatus = Variable2_s, MessageText_s,\\r\\nAccountCustomEntity = Email_s, IPCustomEntity = TerminalIPv6_s, HostCustomEntity = Host_s\\r\\n\",\n                                        \"size\": 1,\n                                        \"title\": \"System Configuration Change\",\n                                        \"showExportToExcel\": true,\n                                        \"queryType\": 0,\n                                        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                                        \"visualization\": \"table\",\n                                        \"gridSettings\": {\n                                            \"formatters\": [\n                                                {\n                                                    \"columnMatch\": \"User_s\",\n                                                    \"formatter\": 18,\n                                                    \"formatOptions\": {\n                                                        \"thresholdsOptions\": \"icons\",\n                                                        \"thresholdsGrid\": [\n                                                            {\n                                                                \"operator\": \"Default\",\n                                                                \"representation\": \"warning\",\n                                                                \"text\": \"{0}{1}\"\n                                                            }\n                                                        ]\n                                                    }\n                                                },\n                                                {\n                                                    \"columnMatch\": \"NewModifiabilityStatus\",\n                                                    \"formatter\": 18,\n                                                    \"formatOptions\": {\n                                                        \"thresholdsOptions\": \"colors\",\n                                                        \"thresholdsGrid\": [\n                                                            {\n                                                                \"operator\": \"==\",\n                                                                \"thresholdValue\": \"Not Modifiable\",\n                                                                \"representation\": \"redBright\",\n                                                                \"text\": \"{0}{1}\"\n                                                            },\n                                                            {\n                                                                \"operator\": \"==\",\n                                                                \"thresholdValue\": \"Modifiable\",\n                                                                \"representation\": \"green\",\n                                                                \"text\": \"{0}{1}\"\n                                                            },\n                                                            {\n                                                                \"operator\": \"Default\",\n                                                                \"representation\": \"blue\",\n                                                                \"text\": \"{0}{1}\"\n                                                            }\n                                                        ]\n                                                    }\n                                                }\n                                            ]\n                                        }\n                                    },\n                                    \"customWidth\": \"50\",\n                                    \"name\": \"query - 3\"\n                                },\n                                {\n                                    \"type\": 3,\n                                    \"content\": {\n                                        \"version\": \"KqlItem/1.0\",\n                                        \"query\": \"// Audit Log Classes - Client Change Configuration\\r\\nlet AuditClasses = dynamic(['EU2']); // Relevent message\\r\\nABAPAuditLog_CL \\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\\r\\n| where MessageID_s in (AuditClasses)\\r\\n| project-rename  ClientID = Variable1_s \\r\\n| parse Variable2_s with Currency \\\"|\\\" ClientRole \\\"|\\\" RecordingChanges \\\"|\\\" CrossClientObjectChanges \\\"|\\\" ClientCopyProtectionLevel \\\"|\\\" ProtectionSAPUpgrade \\\"|\\\" CATTeCATT \\\"|\\\"  LockedforCopy // Parse every object before the | char \\r\\n| project TimeGenerated, SystemID_s, User_s, ClientID, \\r\\nCurrency,ClientRole,RecordingChanges,CrossClientObjectChanges,ClientCopyProtectionLevel,CATTeCATT,LockedforCopy,ProtectionSAPUpgrade,\\r\\nAccountCustomEntity = Email_s, IPCustomEntity = TerminalIPv6_s, HostCustomEntity = Host_s\\r\\n\",\n                                        \"size\": 1,\n                                        \"title\": \"Client Configuration Change\",\n                                        \"showExportToExcel\": true,\n                                        \"queryType\": 0,\n                                        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                                        \"visualization\": \"table\",\n                                        \"gridSettings\": {\n                                            \"formatters\": [\n                                                {\n                                                    \"columnMatch\": \"ClientID\",\n                                                    \"formatter\": 18,\n                                                    \"formatOptions\": {\n                                                        \"thresholdsOptions\": \"icons\",\n                                                        \"thresholdsGrid\": [\n                                                            {\n                                                                \"operator\": \"Default\",\n                                                                \"representation\": \"info\",\n                                                                \"text\": \"{0}{1}\"\n                                                            }\n                                                        ]\n                                                    }\n                                                }\n                                            ]\n                                        }\n                                    },\n                                    \"customWidth\": \"50\",\n                                    \"name\": \"query - 4\"\n                                },\n                                {\n                                    \"type\": 3,\n                                    \"content\": {\n                                        \"version\": \"KqlItem/1.0\",\n                                        \"query\": \"// Audit Log Classes - Transaction UnLock Events\\r\\n// AUP - Transaction Locked\\r\\nlet AuditClasses = dynamic(['AUQ']); // AUQ - Transaction Unlocked\\r\\nABAPAuditLog_CL \\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\\r\\n| where MessageID_s in (AuditClasses)\\r\\n| project-rename TransactionCode = Variable1_s\\r\\n| parse TransactionCode with \\\"( TR ) \\\" _TCODE \\\" - \\\" ClientTR // Parse to _TCODE and ClientTR\\r\\n// Specific Client Action (SM01_CUS) / Cross Client (SM01_DEV)\\r\\n| extend TransactionCode = iif(_TCODE != \\\"\\\",_TCODE, TransactionCode) // Check if _TCODE is not empty\\r\\n| extend ClientTR = iif(ClientTR != \\\"\\\",ClientTR, \\\"CrossClient\\\") // Check if ClientTR is not empty\\r\\n| summarize count() by TransactionCode\\r\\n\\r\\n\",\n                                        \"size\": 0,\n                                        \"title\": \"Transactions Unlocked\",\n                                        \"queryType\": 0,\n                                        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                                        \"visualization\": \"barchart\"\n                                    },\n                                    \"customWidth\": \"50\",\n                                    \"name\": \"query - 5\",\n                                    \"styleSettings\": {\n                                        \"margin\": \"2px\"\n                                    }\n                                },\n                                {\n                                    \"type\": 3,\n                                    \"content\": {\n                                        \"version\": \"KqlItem/1.0\",\n                                        \"query\": \"// Define variables\\r\\nlet AuditClasses = dynamic(['BU4']); // Message of dynamic ABAP program\\r\\nlet TranForABAPGen = _GetWatchlist(\\\"SAP - Transactions for ABAP Generations\\\"); // Transactions to exclude\\r\\n// Maintain if watchlist is not available\\r\\nlet fixedTran = datatable(TransactionCode:string)['SE11','SE12', \\\"SE16\\\", \\\"SE16N\\\"];\\r\\nlet UnitedTransactions =\\r\\ntoscalar(union TranForABAPGen, fixedTran\\r\\n| summarize Transactions = make_set(TransactionCode));\\r\\n// Query logic\\r\\nABAPAuditLog_CL\\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\\r\\n| where MessageID_s in (AuditClasses)\\r\\n| where TransactionCode_s !in (UnitedTransactions) // Exclude transactions\\r\\n| summarize count() by ABAPProgramName_s\",\n                                        \"size\": 0,\n                                        \"title\": \"Dynamic ABAP Programs\",\n                                        \"queryType\": 0,\n                                        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                                        \"visualization\": \"categoricalbar\"\n                                    },\n                                    \"customWidth\": \"50\",\n                                    \"name\": \"query - 6\",\n                                    \"styleSettings\": {\n                                        \"margin\": \"4px\"\n                                    }\n                                }\n                            ]\n                        },\n                        \"name\": \"group - 6\"\n                    }\n                ]\n            },\n            \"conditionalVisibility\": {\n                \"parameterName\": \"wb-param\",\n                \"comparison\": \"isEqualTo\",\n                \"value\": \"config\"\n            },\n            \"name\": \"group - 3\"\n        },\n        {\n            \"type\": 12,\n            \"content\": {\n                \"version\": \"NotebookGroup/1.0\",\n                \"groupType\": \"editable\",\n                \"items\": [\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"let Role = 'Production';\\r\\nlet DebuggerProgram = 'RSTPDAMAIN';\\r\\nlet AuditClasses = dynamic(['CUK','CUL','CUM','CUN','CUO','CUP']); // Audit Log Classes - Debug Activities\\r\\nlet allSystemRoles = dynamic(['Sandbox','Developement','QualityAssurance','Training','Production']); // Available System Roles\\r\\nlet allSystemUsage = dynamic (['ERP','CRM','BW','Solman','Gateway','Enterprise Portal']); // Available System Usages\\r\\n// Get Relevant Systems from WatchList\\r\\nlet systemID = _GetWatchlist('SAP - Systems')\\r\\n| where SystemRole == Role; // Reccommended is Production only\\r\\nlet fixedSID = datatable(SystemID:string, SystemRole:string, SystemUsage:string)\\r\\n// Maintain these if WatchList is not available    \\r\\n    [\\\"S4H\\\",\\\"Production\\\",\\\"ERP\\\",\\r\\n    \\\"XXX\\\",\\\"Sandbox\\\",\\\"BW\\\"]\\r\\n    | where SystemRole == Role // Reccommended is Production only\\r\\n; \\r\\nlet SystemUnited = union systemID, fixedSID\\r\\n| summarize by SystemID, SystemRole, SystemUsage;\\r\\n//| where SystemRole in (allSystemRoles); // Use this for all system roles\\r\\nABAPAuditLog_CL \\r\\n    | where TimeGenerated {TimeSelect}\\r\\n    | where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\\r\\n    | where MessageID_s in (AuditClasses) or ABAPProgramName_s == DebuggerProgram // Get logs by messege ID or program name\\r\\n    | extend Object = extract(@\\\":\\\\s\\\\(?(\\\\w{1,}\\\\s?-?\\\\w{1,})\\\", 1, MessageText_s, typeof(string)) // Extract Object\\r\\n    | extend Action = extract(@\\\":\\\\s\\\\(?(\\\\w{1,}\\\\s?-?\\\\w{1,}.{1,}?)\\\\)?\\\\(\\\", 1, MessageText_s, typeof(string)) // Extract Action\\r\\n    | extend Program = extract(@\\\"Prgm:(\\\\w{1,})\\\", 1, MessageText_s, typeof(string)) // Extract Program\\r\\n    | extend Function = extract(@\\\"Funct:(\\\\w{1,})\\\", 1, MessageText_s, typeof(string)) // Extract Function\\r\\n    | extend Include = extract(@\\\"Incl:(\\\\w{1,})\\\", 1, MessageText_s, typeof(string)) // Extract Include\\r\\n    | extend Line = extract(@\\\"Line:(\\\\w{1,})\\\", 1, MessageText_s, typeof(string)) // Extract Line\\r\\n    | project-rename SystemID = SystemID_s\\r\\n    | lookup kind=inner (SystemUnited) on SystemID\\r\\n    | order by TimeGenerated asc\\r\\n    | project TimeGenerated, User_s, MessageText_s, ABAPProgramName_s, TransactionCode_s, SystemID, SystemRole, SystemUsage,MessageID_s, AccountCustomEntity = Email_s, IPCustomEntity = TerminalIPv6_s, HostCustomEntity = Host_s, Object , Action, Program, Function, Include, Line\",\n                            \"size\": 1,\n                            \"title\": \"Debugging Activities (Press to Investigate)\",\n                            \"exportFieldName\": \"User_s\",\n                            \"exportParameterName\": \"User\",\n                            \"exportDefaultValue\": \"SAP\",\n                            \"showExportToExcel\": true,\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                            \"visualization\": \"table\",\n                            \"gridSettings\": {\n                                \"formatters\": [\n                                    {\n                                        \"columnMatch\": \"ABAPProgramName_s\",\n                                        \"formatter\": 18,\n                                        \"formatOptions\": {\n                                            \"thresholdsOptions\": \"icons\",\n                                            \"thresholdsGrid\": [\n                                                {\n                                                    \"operator\": \"Default\",\n                                                    \"representation\": \"warning\",\n                                                    \"text\": \"{0}{1}\"\n                                                }\n                                            ]\n                                        }\n                                    }\n                                ]\n                            }\n                        },\n                        \"name\": \"query - 3\"\n                    },\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"let Role = 'Production';\\r\\nlet AuditClasses = dynamic(['CUL']); // Audit Log Classes - Debug Change\\r\\nlet allSystemRoles = dynamic(['Sandbox','Developement','QualityAssurance','Training','Production']); // Available System Roles\\r\\nlet allSystemUsage = dynamic (['ERP','CRM','BW','Solman','Gateway','Enterprise Portal']); // Available System Usages\\r\\n// Get Relevant Systems from WatchList\\r\\nlet systemID = _GetWatchlist('SAP - Systems');\\r\\nlet fixedSID = datatable(SystemID:string, SystemRole:string, SystemUsage:string)\\r\\n// Maintain these if WatchList is not available    \\r\\n    [\\\"S4H\\\",\\\"Production\\\",\\\"ERP\\\",\\r\\n    \\\"XXX\\\",\\\"Sandbox\\\",\\\"BW\\\"]\\r\\n;\\r\\nlet UnitedSystem = \\r\\nunion systemID, fixedSID\\r\\n| summarize by SystemID, SystemRole, SystemUsage\\r\\n| where SystemRole == Role; // Recommended  is Production only\\r\\n//| where SystemRole in (allSystemRoles); // Use this for all system roles\\r\\nABAPAuditLog_CL \\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\\r\\n| where MessageID_s in (AuditClasses)\\r\\n| project-rename SystemID = SystemID_s\\r\\n| lookup kind = inner (UnitedSystem) on SystemID\\r\\n| summarize count() by User_s\\r\\n\",\n                            \"size\": 0,\n                            \"title\": \"Data Changes By User\",\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                            \"visualization\": \"piechart\"\n                        },\n                        \"customWidth\": \"50\",\n                        \"name\": \"query - 5\"\n                    },\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"ABAPAuditLog_CL \\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\\r\\n| where User_s=='{User}'\\r\\n| order by TimeGenerated desc\\r\\n| project TimeGenerated, SystemID_s, ClientID_s, MessageID_s ,MessageClass_s, MessageText_s\\r\\n| take 20\",\n                            \"size\": 1,\n                            \"title\": \"Detailed Activity of Suspicious User: {User}\",\n                            \"showExportToExcel\": true,\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\"\n                        },\n                        \"customWidth\": \"50\",\n                        \"conditionalVisibility\": {\n                            \"parameterName\": \"User\",\n                            \"comparison\": \"isNotEqualTo\",\n                            \"value\": \"SAP\"\n                        },\n                        \"name\": \"query - 4\"\n                    }\n                ]\n            },\n            \"conditionalVisibility\": {\n                \"parameterName\": \"wb-param\",\n                \"comparison\": \"isEqualTo\",\n                \"value\": \"debug\"\n            },\n            \"name\": \"group - 7\"\n        },\n        {\n            \"type\": 12,\n            \"content\": {\n                \"version\": \"NotebookGroup/1.0\",\n                \"groupType\": \"editable\",\n                \"items\": [\n                    {\n                        \"type\": 1,\n                        \"content\": {\n                            \"json\": \"<tr><td><h2 style=\\\"font-family: 'Enriqueta', arial, serif; line-height: 1.25; margin: 0 0 10px; font-size: 24px; font-weight: bold;\\\"><B>Multiple Logons By</b></h2>\\r\\n<tr><td><li style=\\\"color: #333; font-family: 'Muli', sans-serif; margin-bottom: 15px; font-size: 14px;\\\"><B>IP - Identifies logon of several users from same IP within scheduled time interval.</b></li>\\r\\n<tr><td><li style=\\\"color: #333; font-family: 'Muli', sans-serif; margin-bottom: 15px; font-size: 14px;\\\"><B>User - Identifies logon of the same user from several terminals within scheduled time interval.</b></li>\"\n                        },\n                        \"name\": \"text - 5\"\n                    },\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"// Define variables\\r\\n// Audit Log Classes - Dialog Logon Successful, RFC Logon Successful\\r\\nlet AuditClasses = dynamic(['AU1','AU5']);\\r\\n// Dialog / CPIC / RFC Int / RFC Ext / SRFC / User Switch / HTTP / Restore Session / API Call\\r\\nlet DialogLogonTypes = dynamic(['A', 'C', 'F', 'R', 'S', 'U', 'H', 'u', ' ']);\\r\\nlet excUsers = _GetWatchlist('SAP - Excluded Users'); // Users that should be removed from query\\r\\nlet fixedExcUsers = datatable(User:string)\\r\\n// Maintain these if WatchList is not available    \\r\\n    [\\\"SYSWF\\\"]\\r\\n; \\r\\nlet UnitedExcUsers =\\r\\ntoscalar(union excUsers, fixedExcUsers\\r\\n| summarize Users = make_set(User));\\r\\nlet IPThreshold = 1;\\r\\n// Query Logic\\r\\nABAPAuditLog_CL \\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems})) \\r\\n| where MessageID_s in (AuditClasses)\\r\\n| where Variable1_s in (DialogLogonTypes)\\r\\n| where User_s !in (UnitedExcUsers)\\r\\n| summarize CountIP = dcount(TerminalIPv6_s), IPs = make_set(TerminalIPv6_s), StartTime = min(TimeGenerated), EndTime = max(TimeGenerated) by SystemID_s, ClientID_s, User_s, Email_s\\r\\n| where CountIP > IPThreshold // Count of IP logins from the user is higher than threshold\\r\\n| mv-expand IPs to typeof(string ) // Show for each IP\\r\\n| project SystemID_s, ClientID_s, User_s,\\r\\n    AccountCustomEntity = Email_s, IPCustomEntity = IPs, StartTime, EndTime\\r\\n| order by StartTime, EndTime desc\",\n                            \"size\": 1,\n                            \"title\": \"Multiple Logons by User (Press to Investigate)\",\n                            \"exportFieldName\": \"User_s\",\n                            \"exportParameterName\": \"UserU\",\n                            \"exportDefaultValue\": \"SAP\",\n                            \"showExportToExcel\": true,\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                            \"gridSettings\": {\n                                \"formatters\": [\n                                    {\n                                        \"columnMatch\": \"User_s\",\n                                        \"formatter\": 18,\n                                        \"formatOptions\": {\n                                            \"thresholdsOptions\": \"icons\",\n                                            \"thresholdsGrid\": [\n                                                {\n                                                    \"operator\": \"Default\",\n                                                    \"representation\": \"warning\",\n                                                    \"text\": \"{0}{1}\"\n                                                }\n                                            ]\n                                        }\n                                    }\n                                ]\n                            }\n                        },\n                        \"customWidth\": \"50\",\n                        \"name\": \"query - 0\"\n                    },\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"// Define variables\\r\\nlet AuditClasses = dynamic(['AU1', 'AU5']); // Audit Log Classes - Dialog Logon Successful, RFC Logon Successful\\r\\nlet DialogLogonTypes = dynamic(['A', 'C', 'F', 'R', 'S', 'U', 'H', 'u', ' ']); // Dialog / CPIC / RFC Int / RFC Ext / SRFC / User Switch / HTTP / Restore Session / API Call\\r\\nlet excNetworks = _GetWatchlist('SAP - Excluded Networks'); // Networks that should be removed from query\\r\\nlet fixedNetworks =\\r\\ndatatable(Network:string)\\r\\n// Maintain these if WatchList is not available    \\r\\n    [\\\"111.68.128.0/1\\\", \\\"123.68.128.0/1\\\"]\\r\\n; \\r\\nlet UnitedNetworks =\\r\\ntoscalar(union excNetworks, fixedNetworks\\r\\n| summarize Networks = make_set(Network));\\r\\nlet UsersperIP = 1;\\r\\n// Query logic\\r\\nABAPAuditLog_CL \\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems})) \\r\\n| where MessageID_s in (AuditClasses)\\r\\n| where Variable1_s in (DialogLogonTypes)\\r\\n| where TerminalIPv6_s !in (UnitedNetworks)\\r\\n| extend UserandEmail = pack(\\\"ID\\\", User_s, \\\"Email\\\", Email_s)\\r\\n| summarize CountUsers = dcount(strcat(User_s, \\\"_&_\\\", Email_s)), Users = make_set(UserandEmail), StartTime = min(TimeGenerated), EndTime = max(TimeGenerated) \\r\\n    by SystemID_s, ClientID_s, TerminalIPv6_s\\r\\n| where CountUsers > UsersperIP\\r\\n| mv-expand Users \\r\\n| evaluate bag_unpack(Users, \\\"User_\\\")\\r\\n| project SystemID_s, ClientID_s, column_ifexists(\\\"User_ID\\\", \\\"\\\"), AccountCustomEntity = column_ifexists(\\\"User_Email\\\", \\\"\\\"), IPCustomEntity = TerminalIPv6_s, StartTime, EndTime\\r\\n| order by StartTime, EndTime desc\\r\\n\",\n                            \"size\": 1,\n                            \"title\": \"Multiple Logons by IP (Press to Investigate)\",\n                            \"exportFieldName\": \"User_ID\",\n                            \"exportParameterName\": \"UserIP\",\n                            \"exportDefaultValue\": \"SAP\",\n                            \"showExportToExcel\": true,\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                            \"gridSettings\": {\n                                \"formatters\": [\n                                    {\n                                        \"columnMatch\": \"IPCustomEntity\",\n                                        \"formatter\": 18,\n                                        \"formatOptions\": {\n                                            \"thresholdsOptions\": \"icons\",\n                                            \"thresholdsGrid\": [\n                                                {\n                                                    \"operator\": \"Default\",\n                                                    \"representation\": \"warning\",\n                                                    \"text\": \"{0}{1}\"\n                                                }\n                                            ]\n                                        }\n                                    }\n                                ]\n                            }\n                        },\n                        \"customWidth\": \"50\",\n                        \"name\": \"query - 1\"\n                    },\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"ABAPAuditLog_CL \\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\\r\\n| where User_s=='{UserU}'\\r\\n| order by TimeGenerated desc\\r\\n| project TimeGenerated, SystemID_s, ClientID_s, MessageID_s ,MessageClass_s, MessageText_s\\r\\n| take 20\",\n                            \"size\": 1,\n                            \"title\": \"{UserU} Detailed Activity\",\n                            \"showExportToExcel\": true,\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\"\n                        },\n                        \"customWidth\": \"50\",\n                        \"conditionalVisibility\": {\n                            \"parameterName\": \"UserU\",\n                            \"comparison\": \"isNotEqualTo\",\n                            \"value\": \"SAP\"\n                        },\n                        \"name\": \"query - 2\"\n                    },\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"ABAPAuditLog_CL \\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\\r\\n| where User_s=='{UserIP}'\\r\\n| order by TimeGenerated desc\\r\\n| project TimeGenerated, SystemID_s, ClientID_s, MessageID_s ,MessageClass_s, MessageText_s\\r\\n| take 20\",\n                            \"size\": 1,\n                            \"title\": \"{UserIP} Detailed Activity\",\n                            \"showExportToExcel\": true,\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\"\n                        },\n                        \"customWidth\": \"50\",\n                        \"conditionalVisibility\": {\n                            \"parameterName\": \"UserIP\",\n                            \"comparison\": \"isNotEqualTo\",\n                            \"value\": \"SAP\"\n                        },\n                        \"name\": \"query - 2 - Copy\"\n                    },\n                    {\n                        \"type\": 1,\n                        \"content\": {\n                            \"json\": \"<tr><td><h2 style=\\\"font-family: 'Enriqueta', arial, serif; line-height: 1.25; margin: 0 0 10px; font-size: 24px; font-weight: bold;\\\"><B>Logon Attempts</b></h2>\\r\\n<tr><td><li style=\\\"color: #333; font-family: 'Muli', sans-serif; margin-bottom: 15px; font-size: 14px;\\\"><B>Users logon from unknown networks.</b></li>\\r\\n<tr><td><li style=\\\"color: #333; font-family: 'Muli', sans-serif; margin-bottom: 15px; font-size: 14px;\\\"><B>Try to brute force into the system.</b></li>\"\n                        },\n                        \"name\": \"text - 7\"\n                    },\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"// Define variables\\r\\n// Audit Log Classes - Failed Logons / Password Check\\r\\nlet AuditClasses = dynamic(['AUO', 'AU2', 'AU6', 'BU1']);\\r\\nlet perIPLimit = 6;\\r\\n// Query logic\\r\\nABAPAuditLog_CL \\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems})) \\r\\n| where MessageID_s in (AuditClasses)\\r\\n| extend DetailsBy = pack(\\\"User\\\", User_s, \\\"Email\\\", Email_s, \\\"SystemID\\\", SystemID_s, \\\"ClientID\\\", ClientID_s)\\r\\n| summarize LoginbyIPAttempts = count(), Details = make_set(DetailsBy), StartTime = min(TimeGenerated), EndTime = max(TimeGenerated) \\r\\n    by TerminalIPv6_s\\r\\n// Check if number of login attempts per IP is higher than limit\\r\\n| where LoginbyIPAttempts > perIPLimit \\r\\n| mv-expand Details\\r\\n| evaluate bag_unpack(Details, \\\"Details_\\\")\\r\\n| project \\r\\n    StartTime, EndTime, IPCustomEntity = TerminalIPv6_s,\\r\\n    AccountCustomEntity = column_ifexists(\\\"Details_Email\\\", \\\"\\\"), column_ifexists(\\\"Details_User\\\", \\\"\\\"),\\r\\n    column_ifexists(\\\"Details_SystemID\\\", \\\"\\\"),\\r\\n    column_ifexists(\\\"Details_ClientID\\\", \\\"\\\")\\r\\n| summarize count() by Details_User\",\n                            \"size\": 0,\n                            \"title\": \"Brute Force Attacks by User\",\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                            \"visualization\": \"barchart\",\n                            \"chartSettings\": {\n                                \"ySettings\": {\n                                    \"max\": 10\n                                }\n                            }\n                        },\n                        \"name\": \"query - 4\"\n                    },\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"let AuditClasses = dynamic(['AU1','AU5']); // Audit Log Classes - Dialog Logon Successful, RFC Logon Successful\\r\\n// Dialog / CPIC / RFC Int / RFC Ext / SRFC / User Switch / HTTP / Restore Session / API Call\\r\\nlet DialogLogonTypes = dynamic(['A', 'C', 'F', 'R', 'S', 'U', 'H', 'u', ' ']);\\r\\nlet Networks = _GetWatchlist('SAP - Networks'); \\r\\nlet fixedNetworks = datatable(Network: string)['111.68.128.0/17']; // Maintain these if watchlist is not available\\r\\nlet allNetworks = union Networks, fixedNetworks\\r\\n    | summarize by Network;\\r\\nABAPAuditLog_CL\\r\\n// Add audit classes\\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems})) \\r\\n| where MessageID_s in (AuditClasses)\\r\\n| where Variable1_s in (DialogLogonTypes) // Is a dialog logon type from the list\\r\\n| where isnotempty(TerminalIPv6_s) // There is a Ipv6 address\\r\\n| evaluate ipv4_lookup(allNetworks, TerminalIPv6_s, Network, return_unmatched = true)\\r\\n// Similar to regular lookup, by ipv4 address, unmatched is like left join\\r\\n| where isempty(Network) // Network is not familiar\\r\\n// Details\\r\\n| project TimeGenerated, SystemID_s, ClientID_s, User_s, TransactionCode_s, MessageText_s, AccountCustomEntity = Email_s, IPCustomEntity = TerminalIPv6_s, HostCustomEntity = Host_s\\r\\n| summarize count() by IPCustomEntity\",\n                            \"size\": 0,\n                            \"title\": \"Logins by Unexpected Networks\",\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                            \"visualization\": \"piechart\"\n                        },\n                        \"name\": \"query - 5\"\n                    }\n                ]\n            },\n            \"conditionalVisibility\": {\n                \"parameterName\": \"wb-param\",\n                \"comparison\": \"isEqualTo\",\n                \"value\": \"init\"\n            },\n            \"name\": \"group - 3\"\n        }\n    ],\n    \"fallbackResourceIds\": [\n        \"/subscriptions/fdee8146-8bcf-460f-86f3-3f788c285efd/resourcegroups/iprosis/providers/microsoft.operationalinsights/workspaces/s4h-sentinel-development\"\n    ],\n    \"fromTemplateId\": \"sentinel-UserWorkbook\",\n    \"$schema\": \"https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json\"\n}",
                "version": "1.0",
                "sourceId": "[variables('_workbook-source')]",
                "category": "sentinel"
            }
        },
        {
            "type": "Microsoft.Insights/workbooks",
            "name": "[parameters('workbook3-id')]",
            "location": "[parameters('workspace-location')]",
            "kind": "shared",
            "apiVersion": "2020-02-12",
            "properties": {
                "displayName": "[concat('Preview - ',parameters('workbook3-name'), ' - ', parameters('formattedTimeNow'))]",
                "serializedData": "{\n    \"version\": \"Notebook/1.0\",\n    \"items\": [\n        {\n            \"type\": 11,\n            \"content\": {\n                \"version\": \"LinkItem/1.0\",\n                \"style\": \"tabs\",\n                \"links\": [\n                    {\n                        \"id\": \"b4b1bd11-1f18-4903-a3b6-57fd50e0c302\",\n                        \"cellValue\": \"wb-param\",\n                        \"linkTarget\": \"parameter\",\n                        \"linkLabel\": \"ICF Services\",\n                        \"subTarget\": \"ICF\",\n                        \"style\": \"link\"\n                    },\n                    {\n                        \"id\": \"a91adc06-f8ab-465f-afb4-4d9008751fb0\",\n                        \"cellValue\": \"wb-param\",\n                        \"linkTarget\": \"parameter\",\n                        \"linkLabel\": \"Insecure Operations\",\n                        \"subTarget\": \"insec\",\n                        \"style\": \"link\"\n                    },\n                    {\n                        \"id\": \"a0cced2e-7f7c-4fd8-96e3-914896fce721\",\n                        \"cellValue\": \"wb-param\",\n                        \"linkTarget\": \"parameter\",\n                        \"linkLabel\": \"Tables\",\n                        \"subTarget\": \"table\",\n                        \"style\": \"link\"\n                    },\n                    {\n                        \"id\": \"089fc110-be01-4857-9661-351c5f6c2db4\",\n                        \"cellValue\": \"wb-param\",\n                        \"linkTarget\": \"parameter\",\n                        \"linkLabel\": \"Spool & Downloads\",\n                        \"subTarget\": \"spd\",\n                        \"style\": \"link\"\n                    },\n                    {\n                        \"id\": \"cb455011-06fb-4334-bb99-dd9714cd2419\",\n                        \"cellValue\": \"wb-param\",\n                        \"linkTarget\": \"parameter\",\n                        \"linkLabel\": \"FTP & Dynamic RFC\",\n                        \"subTarget\": \"ftp\",\n                        \"style\": \"link\"\n                    }\n                ]\n            },\n            \"name\": \"links - 0\"\n        },\n        {\n            \"type\": 9,\n            \"content\": {\n                \"version\": \"KqlParameterItem/1.0\",\n                \"parameters\": [\n                    {\n                        \"id\": \"8476146a-f4de-40d9-b0f7-ab1e994c8145\",\n                        \"version\": \"KqlParameterItem/1.0\",\n                        \"name\": \"TimeSelect\",\n                        \"label\": \"Time Range\",\n                        \"type\": 4,\n                        \"isGlobal\": true,\n                        \"value\": {\n                            \"durationMs\": 7776000000\n                        },\n                        \"typeSettings\": {\n                            \"selectableValues\": [\n                                {\n                                    \"durationMs\": 300000\n                                },\n                                {\n                                    \"durationMs\": 900000\n                                },\n                                {\n                                    \"durationMs\": 1800000\n                                },\n                                {\n                                    \"durationMs\": 3600000\n                                },\n                                {\n                                    \"durationMs\": 14400000\n                                },\n                                {\n                                    \"durationMs\": 43200000\n                                },\n                                {\n                                    \"durationMs\": 86400000\n                                },\n                                {\n                                    \"durationMs\": 172800000\n                                },\n                                {\n                                    \"durationMs\": 259200000\n                                },\n                                {\n                                    \"durationMs\": 604800000\n                                },\n                                {\n                                    \"durationMs\": 1209600000\n                                },\n                                {\n                                    \"durationMs\": 2419200000\n                                },\n                                {\n                                    \"durationMs\": 2592000000\n                                },\n                                {\n                                    \"durationMs\": 5184000000\n                                },\n                                {\n                                    \"durationMs\": 7776000000\n                                }\n                            ],\n                            \"allowCustom\": true\n                        },\n                        \"timeContext\": {\n                            \"durationMs\": 86400000\n                        }\n                    },\n                    {\n                        \"id\": \"07a16f20-8412-4d88-9a8b-1ab9f48c4a62\",\n                        \"version\": \"KqlParameterItem/1.0\",\n                        \"name\": \"Systems\",\n                        \"label\": \"System\",\n                        \"type\": 2,\n                        \"isRequired\": true,\n                        \"isGlobal\": true,\n                        \"multiSelect\": true,\n                        \"quote\": \"'\",\n                        \"delimiter\": \",\",\n                        \"query\": \"ABAPAuditLog_CL | summarize  by  SystemID_s \",\n                        \"value\": [\n                            \"value::all\"\n                        ],\n                        \"typeSettings\": {\n                            \"additionalResourceOptions\": [\n                                \"value::all\"\n                            ]\n                        },\n                        \"queryType\": 0,\n                        \"resourceType\": \"microsoft.operationalinsights/workspaces\"\n                    }\n                ],\n                \"style\": \"above\",\n                \"queryType\": 0,\n                \"resourceType\": \"microsoft.operationalinsights/workspaces\"\n            },\n            \"name\": \"parameters - 1\"\n        },\n        {\n            \"type\": 1,\n            \"content\": {\n                \"json\": \"<tr><td><h2 style=\\\"font-family: 'Enriqueta', arial, serif; line-height: 1.25; margin: 0 0 10px; font-size: 24px; font-weight: bold;\\\"><B>Internet Communication Framework Services</b></h2>\\r\\n<tr><td><p style=\\\"color: #333; font-family: 'Muli', sans-serif; margin-bottom: 15px; font-size: 14px;\\\"><B>Identifies activation or deactivation of ICF Services, new services/handlers.</b></p>\"\n            },\n            \"conditionalVisibility\": {\n                \"parameterName\": \"wb-param\",\n                \"comparison\": \"isEqualTo\",\n                \"value\": \"ICF\"\n            },\n            \"name\": \"text - 3\"\n        },\n        {\n            \"type\": 12,\n            \"content\": {\n                \"version\": \"NotebookGroup/1.0\",\n                \"groupType\": \"editable\",\n                \"items\": [\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"let ActivatedICF =\\r\\nABAPTableDataLog_CL\\r\\n| where TableName_s == \\\"ICFSERVLOC\\\"\\r\\n| lookup ABAPTableDataLog_CL on TimeGenerated, LogKey_s, DBLogID_s // Lookup for combining the data\\r\\n| where TableField_s == \\\"ICF_NAME\\\" // Service name\\r\\n| where TableField_s1 == \\\"ICFACTIVE\\\" // Active status\\r\\n| where OldValue_s == NewValue_s and OldValue_s != \\\"\\\" \\r\\n| where NewValue_s1 == \\\"X\\\" // Status is activated\\r\\n| project TimeGenerated, Service = NewValue_s, ICFServiceStatus = \\\"Activated\\\";\\r\\nABAPTableDataLog_CL\\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\\r\\n| where TableName_s == \\\"ICFSERVLOC\\\"\\r\\n| lookup ABAPTableDataLog_CL on TimeGenerated, LogKey_s, DBLogID_s // Lookup for combining the data\\r\\n| where TableField_s == \\\"ICF_NAME\\\" // Service name\\r\\n| where TableField_s1 == \\\"ICFACTIVE\\\" // Active status\\r\\n| where OldValue_s1 == \\\"X\\\" // Was activated\\r\\n| where NewValue_s1 == \\\"\\\" // Not activated now\\r\\n| where OldValue_s == NewValue_s and OldValue_s != \\\"\\\"\\r\\n| project TimeGenerated, Service = NewValue_s, ICFServiceStatus = \\\"Deactivated\\\"\\r\\n| union ActivatedICF\\r\\n| summarize count() by Service, ICFServiceStatus\\r\\n\",\n                            \"size\": 0,\n                            \"title\": \"ICF Service by Operation\",\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                            \"visualization\": \"barchart\",\n                            \"chartSettings\": {\n                                \"xAxis\": \"ICFServiceStatus\",\n                                \"xSettings\": {\n                                    \"numberFormatSettings\": {\n                                        \"unit\": 0,\n                                        \"options\": {\n                                            \"style\": \"decimal\",\n                                            \"useGrouping\": true\n                                        }\n                                    }\n                                }\n                            }\n                        },\n                        \"customWidth\": \"50\",\n                        \"name\": \"query - 0\",\n                        \"styleSettings\": {\n                            \"margin\": \"4px\"\n                        }\n                    },\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"let ActivatedICF =\\r\\nABAPTableDataLog_CL\\r\\n| where TableName_s == \\\"ICFSERVLOC\\\"\\r\\n| lookup ABAPTableDataLog_CL on TimeGenerated, LogKey_s, DBLogID_s // Lookup for combining the data\\r\\n| where TableField_s == \\\"ICF_NAME\\\" // Service name\\r\\n| where TableField_s1 == \\\"ICFACTIVE\\\" // Active status\\r\\n| where OldValue_s == NewValue_s and OldValue_s != \\\"\\\" \\r\\n| where NewValue_s1 == \\\"X\\\" // Status is activated\\r\\n| project TimeGenerated, Service = NewValue_s, ICFServiceStatus = \\\"Activated\\\";\\r\\nABAPTableDataLog_CL\\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\\r\\n| where TableName_s == \\\"ICFSERVLOC\\\"\\r\\n| lookup ABAPTableDataLog_CL on TimeGenerated, LogKey_s, DBLogID_s // Lookup for combining the data\\r\\n| where TableField_s == \\\"ICF_NAME\\\" // Service name\\r\\n| where TableField_s1 == \\\"ICFACTIVE\\\" // Active status\\r\\n| where OldValue_s1 == \\\"X\\\" // Was activated\\r\\n| where NewValue_s1 == \\\"\\\" // Not activated now\\r\\n| where OldValue_s == NewValue_s and OldValue_s != \\\"\\\"\\r\\n| project TimeGenerated, Service = NewValue_s, ICFServiceStatus = \\\"Deactivated\\\"\\r\\n| union ActivatedICF\\r\\n\",\n                            \"size\": 0,\n                            \"title\": \"Activation or Deactivation of ICF Service\",\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                            \"visualization\": \"table\",\n                            \"gridSettings\": {\n                                \"formatters\": [\n                                    {\n                                        \"columnMatch\": \"ICFServiceStatus\",\n                                        \"formatter\": 18,\n                                        \"formatOptions\": {\n                                            \"thresholdsOptions\": \"colors\",\n                                            \"thresholdsGrid\": [\n                                                {\n                                                    \"operator\": \"==\",\n                                                    \"thresholdValue\": \"Activated\",\n                                                    \"representation\": \"green\",\n                                                    \"text\": \"{0}{1}\"\n                                                },\n                                                {\n                                                    \"operator\": \"==\",\n                                                    \"thresholdValue\": \"Deactivated\",\n                                                    \"representation\": \"redBright\",\n                                                    \"text\": \"{0}{1}\"\n                                                },\n                                                {\n                                                    \"operator\": \"Default\",\n                                                    \"representation\": \"blue\",\n                                                    \"text\": \"{0}{1}\"\n                                                }\n                                            ]\n                                        }\n                                    }\n                                ]\n                            }\n                        },\n                        \"customWidth\": \"50\",\n                        \"name\": \"query - 1\",\n                        \"styleSettings\": {\n                            \"margin\": \"4px\"\n                        }\n                    },\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"ABAPTableDataLog_CL\\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\\r\\n| where TableName_s == \\\"ICFSERVLOC\\\"\\r\\n| where TableField_s == \\\"ICF_NAME\\\" // Service name\\r\\n| where OldValue_s == \\\"\\\" and NewValue_s != \\\"\\\" // New value is inserted in name -> new service\\r\\n| order by TimeGenerated desc\\r\\n| project TimeGenerated, Service = NewValue_s\\r\\n| summarize Services_Created = count() by bin (TimeGenerated, 24h)\",\n                            \"size\": 1,\n                            \"title\": \"Services Created by Time\",\n                            \"color\": \"green\",\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                            \"visualization\": \"timechart\",\n                            \"chartSettings\": {\n                                \"ySettings\": {\n                                    \"max\": 10\n                                }\n                            }\n                        },\n                        \"customWidth\": \"50\",\n                        \"name\": \"query - 3\",\n                        \"styleSettings\": {\n                            \"margin\": \"4px\"\n                        }\n                    },\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"ABAPTableDataLog_CL\\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\\r\\n| where TableName_s == \\\"ICFSERVLOC\\\"\\r\\n| where TableField_s == \\\"ICF_NAME\\\" // Service name\\r\\n| where OldValue_s == \\\"\\\" and NewValue_s != \\\"\\\" // New value is inserted in name -> new service\\r\\n| order by TimeGenerated desc\\r\\n| project TimeGenerated, Service = NewValue_s\\r\\n| summarize by Service\",\n                            \"size\": 1,\n                            \"title\": \"New ICF Services\",\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                            \"visualization\": \"tiles\",\n                            \"tileSettings\": {\n                                \"showBorder\": false,\n                                \"titleContent\": {\n                                    \"columnMatch\": \"Service\",\n                                    \"formatter\": 1\n                                },\n                                \"leftContent\": {\n                                    \"columnMatch\": \"count_\",\n                                    \"formatter\": 12,\n                                    \"formatOptions\": {\n                                        \"palette\": \"auto\"\n                                    },\n                                    \"numberFormat\": {\n                                        \"unit\": 17,\n                                        \"options\": {\n                                            \"maximumSignificantDigits\": 3,\n                                            \"maximumFractionDigits\": 2\n                                        }\n                                    }\n                                }\n                            }\n                        },\n                        \"customWidth\": \"50\",\n                        \"name\": \"query - 2\",\n                        \"styleSettings\": {\n                            \"margin\": \"4px\"\n                        }\n                    },\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"ABAPTableDataLog_CL\\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\\r\\n| where TableName_s == \\\"ICFHANDLER\\\"\\r\\n| where TableField_s == \\\"ICF_NAME\\\" // Service name\\r\\n| where OldValue_s == \\\"\\\" and NewValue_s != \\\"\\\" // New value is inserted in name -> new service\\r\\n| order by TimeGenerated desc\\r\\n| project TimeGenerated, Service = NewValue_s\\r\\n| summarize Handlers_Created = count() by bin(TimeGenerated, 24h)\",\n                            \"size\": 1,\n                            \"title\": \"Handlers Created by Time\",\n                            \"color\": \"blueDarkDark\",\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                            \"visualization\": \"timechart\",\n                            \"tileSettings\": {\n                                \"showBorder\": false,\n                                \"titleContent\": {\n                                    \"columnMatch\": \"Service\",\n                                    \"formatter\": 1\n                                },\n                                \"leftContent\": {\n                                    \"columnMatch\": \"count_\",\n                                    \"formatter\": 12,\n                                    \"formatOptions\": {\n                                        \"palette\": \"auto\"\n                                    },\n                                    \"numberFormat\": {\n                                        \"unit\": 17,\n                                        \"options\": {\n                                            \"maximumSignificantDigits\": 3,\n                                            \"maximumFractionDigits\": 2\n                                        }\n                                    }\n                                }\n                            },\n                            \"chartSettings\": {\n                                \"ySettings\": {\n                                    \"max\": 10\n                                }\n                            }\n                        },\n                        \"customWidth\": \"50\",\n                        \"name\": \"query - 4 - Copy\",\n                        \"styleSettings\": {\n                            \"margin\": \"4px\"\n                        }\n                    },\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"ABAPTableDataLog_CL\\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\\r\\n| where TableName_s == \\\"ICFHANDLER\\\"\\r\\n| where TableField_s == \\\"ICF_NAME\\\" // Service name\\r\\n| where OldValue_s == \\\"\\\" and NewValue_s != \\\"\\\" // New value is inserted in name -> new service\\r\\n| order by TimeGenerated desc\\r\\n| project TimeGenerated, Service = NewValue_s\\r\\n| summarize by Service\",\n                            \"size\": 1,\n                            \"title\": \"New ICF Service Handlers\",\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                            \"visualization\": \"tiles\",\n                            \"tileSettings\": {\n                                \"showBorder\": false,\n                                \"titleContent\": {\n                                    \"columnMatch\": \"Service\",\n                                    \"formatter\": 1\n                                },\n                                \"leftContent\": {\n                                    \"columnMatch\": \"count_\",\n                                    \"formatter\": 12,\n                                    \"formatOptions\": {\n                                        \"palette\": \"auto\"\n                                    },\n                                    \"numberFormat\": {\n                                        \"unit\": 17,\n                                        \"options\": {\n                                            \"maximumSignificantDigits\": 3,\n                                            \"maximumFractionDigits\": 2\n                                        }\n                                    }\n                                }\n                            }\n                        },\n                        \"customWidth\": \"50\",\n                        \"name\": \"query - 4\",\n                        \"styleSettings\": {\n                            \"margin\": \"4px\"\n                        }\n                    }\n                ]\n            },\n            \"conditionalVisibility\": {\n                \"parameterName\": \"wb-param\",\n                \"comparison\": \"isEqualTo\",\n                \"value\": \"ICF\"\n            },\n            \"name\": \"group - 2\"\n        },\n        {\n            \"type\": 12,\n            \"content\": {\n                \"version\": \"NotebookGroup/1.0\",\n                \"groupType\": \"editable\",\n                \"items\": [\n                    {\n                        \"type\": 1,\n                        \"content\": {\n                            \"json\": \"<tr><td><h2 style=\\\"font-family: 'Enriqueta', arial, serif; line-height: 1.25; margin: 0 0 10px; font-size: 24px; font-weight: bold;\\\"><B>Executions of Obsolete/Insecure Operations</b></h2>\\r\\n<tr><td><p style=\\\"color: #333; font-family: 'Muli', sans-serif; margin-bottom: 15px; font-size: 14px;\\\"><B>Identifies execution of:</b></p>\\r\\n<tr><td><li style=\\\"color: #333; font-family: 'Muli', sans-serif; margin-bottom: 15px; font-size: 14px;\\\"><B>Obsolete/insecure Function Module</b></lie>\\r\\n<tr><td><li style=\\\"color: #333; font-family: 'Muli', sans-serif; margin-bottom: 15px; font-size: 14px;\\\"><B>Obsolete/insecure ABAP Program</b></lie>\"\n                        },\n                        \"name\": \"text - 5\"\n                    },\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"// Define variables\\r\\nlet RelTable = \\\"EUFUNC\\\"; // Relevant table\\r\\nlet AuditLogIn = dynamic(['AU1', 'AU5']); // Messages of connect with user\\r\\nlet ObsoleteModules =  _GetWatchlist('SAP - Obsolete Function Modules');\\r\\n// Maintain if watchlist is not available\\r\\nlet fixedModules = datatable(FunctionModule:string)['TH_SAPREL','TH_SAPREL2', 'TH_SAPREL3','SUSR_RFC_USER_INTERFACE','RFC_ABAP_INSTALL_AND_RUN']; \\r\\nlet UnitedModules =\\r\\ntoscalar(union fixedModules, ObsoleteModules\\r\\n| summarize FunctionModules =  make_set(FunctionModule));\\r\\n// Query logic\\r\\nlet LastLogin = \\r\\nABAPAuditLog_CL\\r\\n| where MessageID_s in (AuditLogIn)\\r\\n| summarize TimeGenerated = arg_max(TimeGenerated, *) by SystemID_s, ClientID_s, User_s; // Get last connection date for user\\r\\nABAPTableDataLog_CL\\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\\r\\n| where TableName_s == RelTable\\r\\n| extend Module = extract(@\\\"\\\\s+(.{1,}\\\\b)\\\\s+\\\", 1, LogKey_s, typeof(string)) // Extract Function Module\\r\\n| extend FunctionGroup = extract(@\\\"^FL([^\\\\s]*)\\\\s\\\", 1, LogKey_s, typeof(string)) // Extract Function Group\\r\\n| extend ExecutionVariant = extract(@\\\"\\\\b(\\\\w+)$\\\", 1, LogKey_s, typeof(string)) // Extract Execution Varient\\r\\n| where Module in (UnitedModules) // Module is obsolete\\r\\n| lookup kind=inner LastLogin on $left.UserName_s == $right.User_s\\r\\n| summarize by TimeGenerated, SystemID_s, ClientID_s,  AccountCustomEntity = Email_s, IPCustomEntity = TerminalIPv6_s, HostCustomEntity = Host_s, Module, FunctionGroup, ExecutionVariant\",\n                            \"size\": 0,\n                            \"title\": \"Execution of Obsolete or Insecure Function Module\",\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                            \"gridSettings\": {\n                                \"formatters\": [\n                                    {\n                                        \"columnMatch\": \"Module\",\n                                        \"formatter\": 18,\n                                        \"formatOptions\": {\n                                            \"thresholdsOptions\": \"icons\",\n                                            \"thresholdsGrid\": [\n                                                {\n                                                    \"operator\": \"Default\",\n                                                    \"representation\": \"warning\",\n                                                    \"text\": \"{0}{1}\"\n                                                }\n                                            ]\n                                        }\n                                    }\n                                ]\n                            }\n                        },\n                        \"customWidth\": \"50\",\n                        \"name\": \"query - 0\",\n                        \"styleSettings\": {\n                            \"margin\": \"4px\"\n                        }\n                    },\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"// Define variables\\r\\nlet RelTable = \\\"EUFUNC\\\"; // Relevant table\\r\\nlet AuditLogIn = dynamic(['AU1', 'AU5']); // Messages of connect with user\\r\\nlet ObsoleteModules =  _GetWatchlist('SAP - Obsolete Function Modules');\\r\\n// Maintain if watchlist is not available\\r\\nlet fixedModules = datatable(FunctionModule:string)['TH_SAPREL','TH_SAPREL2', 'TH_SAPREL3','SUSR_RFC_USER_INTERFACE','RFC_ABAP_INSTALL_AND_RUN']; \\r\\nlet UnitedModules =\\r\\ntoscalar(union fixedModules, ObsoleteModules\\r\\n| summarize FunctionModules =  make_set(FunctionModule));\\r\\n// Query logic\\r\\nlet LastLogin = \\r\\nABAPAuditLog_CL\\r\\n| where MessageID_s in (AuditLogIn)\\r\\n| summarize TimeGenerated = arg_max(TimeGenerated, *) by SystemID_s, ClientID_s, User_s; // Get last connection date for user\\r\\nABAPTableDataLog_CL\\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\\r\\n| where TableName_s == RelTable\\r\\n| extend Module = extract(@\\\"\\\\s+(.{1,}\\\\b)\\\\s+\\\", 1, LogKey_s, typeof(string)) // Extract Function Module\\r\\n| extend FunctionGroup = extract(@\\\"^FL([^\\\\s]*)\\\\s\\\", 1, LogKey_s, typeof(string)) // Extract Function Group\\r\\n| extend ExecutionVariant = extract(@\\\"\\\\b(\\\\w+)$\\\", 1, LogKey_s, typeof(string)) // Extract Execution Varient\\r\\n| where Module in (UnitedModules) // Module is obsolete\\r\\n| lookup kind=inner LastLogin on $left.UserName_s == $right.User_s\\r\\n| summarize by TimeGenerated, SystemID_s, ClientID_s,  AccountCustomEntity = Email_s, IPCustomEntity = TerminalIPv6_s, HostCustomEntity = Host_s, Module, FunctionGroup, ExecutionVariant\\r\\n| summarize count() by Module\",\n                            \"size\": 0,\n                            \"title\": \"Obsolete or Insecure Function Module Execution Count\",\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                            \"visualization\": \"barchart\"\n                        },\n                        \"customWidth\": \"50\",\n                        \"name\": \"query - 0 - Copy\",\n                        \"styleSettings\": {\n                            \"margin\": \"4px\"\n                        }\n                    },\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"// Define Variables\\r\\nlet AuditClasses = dynamic(['AUW']); // Audit Log Classes - Report Started\\r\\nlet ObsoletePrograms = _GetWatchlist(\\\"SAP - Obsolete Programs\\\");\\r\\n// Maintain if watchlist is not available\\r\\nlet fixedObPrograms = datatable(ABAPProgram:string)['RSAU_READ_LOG'];\\r\\nlet UnitedPrograms =\\r\\ntoscalar(union fixedObPrograms, ObsoletePrograms\\r\\n| summarize Programs = make_set(ABAPProgram));\\r\\n// Query logic\\r\\nABAPAuditLog_CL \\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\\r\\n| where MessageID_s in (AuditClasses)\\r\\n| where ABAPProgramName_s in (UnitedPrograms) // The program is obsolete\\r\\n| project TimeGenerated, SystemID_s, ClientID_s, User_s, ABAPProgramName_s, MessageText_s, TransactionCode_s, MessageID_s, AccountCustomEntity = Email_s, IPCustomEntity = TerminalIPv6_s, HostCustomEntity = Host_s\",\n                            \"size\": 0,\n                            \"title\": \"Execution of Obsolete or Insecure Program\",\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                            \"visualization\": \"table\",\n                            \"gridSettings\": {\n                                \"formatters\": [\n                                    {\n                                        \"columnMatch\": \"ABAPProgramName_s\",\n                                        \"formatter\": 18,\n                                        \"formatOptions\": {\n                                            \"thresholdsOptions\": \"icons\",\n                                            \"thresholdsGrid\": [\n                                                {\n                                                    \"operator\": \"Default\",\n                                                    \"representation\": \"warning\",\n                                                    \"text\": \"{0}{1}\"\n                                                }\n                                            ]\n                                        }\n                                    }\n                                ]\n                            }\n                        },\n                        \"customWidth\": \"50\",\n                        \"name\": \"query - 1\",\n                        \"styleSettings\": {\n                            \"margin\": \"4px\"\n                        }\n                    },\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"// Define Variables\\r\\nlet AuditClasses = dynamic(['AUW']); // Audit Log Classes - Report Started\\r\\nlet ObsoletePrograms = _GetWatchlist(\\\"SAP - Obsolete Programs\\\");\\r\\n// Maintain if watchlist is not available\\r\\nlet fixedObPrograms = datatable(ABAPProgram:string)['RSAU_READ_LOG'];\\r\\nlet UnitedPrograms =\\r\\ntoscalar(union fixedObPrograms, ObsoletePrograms\\r\\n| summarize Programs = make_set(ABAPProgram));\\r\\n// Query logic\\r\\nABAPAuditLog_CL \\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\\r\\n| where MessageID_s in (AuditClasses)\\r\\n| where ABAPProgramName_s in (UnitedPrograms) // The program is obsolete\\r\\n| summarize count() by ABAPProgramName_s\",\n                            \"size\": 0,\n                            \"title\": \"Obsolete or Insecure Program Execution Count\",\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                            \"visualization\": \"barchart\"\n                        },\n                        \"customWidth\": \"50\",\n                        \"name\": \"query - 1 - Copy\",\n                        \"styleSettings\": {\n                            \"margin\": \"4px\"\n                        }\n                    },\n                    {\n                        \"type\": 1,\n                        \"content\": {\n                            \"json\": \"<tr><td><h2 style=\\\"font-family: 'Enriqueta', arial, serif; line-height: 1.25; margin: 0 0 10px; font-size: 24px; font-weight: bold;\\\"><B>Test Function Module</b></h2>\\r\\n<tr><Td><p style=\\\"color: #333; font-family: 'Muli', sans-serif; margin-bottom: 15px; font-size: 14px;\\\">Identifies testing of a function module.</b></p>\"\n                        },\n                        \"name\": \"text - 6\"\n                    },\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"let Role = 'Production';\\r\\nlet ProgramName = 'RS_TESTFRAME_CALL';\\r\\nlet AuditClasses = dynamic(['AUW']); // Audit Log Classes - Report Started\\r\\nlet allSystemRoles = dynamic(['Sandbox', 'Developement', 'QualityAssurance', 'Training', 'Production']); // Available System Roles\\r\\nlet allSystemUsage = dynamic (['ERP', 'CRM', 'BW', 'Solman', 'Gateway', 'Enterprise Portal']); // Available System Usages\\r\\n// Get Relevant Systems from WatchList\\r\\nlet systemID = _GetWatchlist('SAP - Systems');\\r\\nlet fixedSID = datatable(SystemID: string, SystemRole: string, SystemUsage: string)\\r\\n    // Maintain these if WatchList is not available    \\r\\n    [\\\"S4H\\\", \\\"Production\\\", \\\"ERP\\\",\\r\\n    \\\"XXX\\\", \\\"Sandbox\\\", \\\"BW\\\"]\\r\\n; \\r\\nlet UnitedSystem = \\r\\nunion systemID, fixedSID\\r\\n| summarize by SystemID, SystemRole, SystemUsage\\r\\n| where SystemRole == Role; // Reccommended is Production only\\r\\n//| where SystemRole in (allSystemRoles); // Use this for all system roles\\r\\nABAPAuditLog_CL \\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\\r\\n| where MessageID_s in (AuditClasses)\\r\\n| where ABAPProgramName_s == ProgramName\\r\\n| project-rename SystemID = SystemID_s\\r\\n| lookup kind = inner (UnitedSystem) on SystemID\\r\\n| order by TimeGenerated asc\\r\\n| project TimeGenerated, User_s, SystemID, ClientID_s, MessageText_s, MessageID_s,\\r\\n    AccountCustomEntity = Email_s, IPCustomEntity = TerminalIPv6_s, HostCustomEntity = Host_s \",\n                            \"size\": 0,\n                            \"title\": \"Activity of Function Module Tests \",\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\"\n                        },\n                        \"customWidth\": \"50\",\n                        \"name\": \"query - 4\",\n                        \"styleSettings\": {\n                            \"margin\": \"4px\"\n                        }\n                    },\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"let Role = 'Production';\\r\\nlet ProgramName = 'RS_TESTFRAME_CALL';\\r\\nlet AuditClasses = dynamic(['AUW']); // Audit Log Classes - Report Started\\r\\nlet allSystemRoles = dynamic(['Sandbox', 'Developement', 'QualityAssurance', 'Training', 'Production']); // Available System Roles\\r\\nlet allSystemUsage = dynamic (['ERP', 'CRM', 'BW', 'Solman', 'Gateway', 'Enterprise Portal']); // Available System Usages\\r\\n// Get Relevant Systems from WatchList\\r\\nlet systemID = _GetWatchlist('SAP - Systems');\\r\\nlet fixedSID = datatable(SystemID: string, SystemRole: string, SystemUsage: string)\\r\\n    // Maintain these if WatchList is not available    \\r\\n    [\\\"S4H\\\", \\\"Production\\\", \\\"ERP\\\",\\r\\n    \\\"XXX\\\", \\\"Sandbox\\\", \\\"BW\\\"]\\r\\n; \\r\\nlet UnitedSystem = \\r\\nunion systemID, fixedSID\\r\\n| summarize by SystemID, SystemRole, SystemUsage\\r\\n| where SystemRole == Role; // Reccommended is Production only\\r\\n//| where SystemRole in (allSystemRoles); // Use this for all system roles\\r\\nABAPAuditLog_CL \\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\\r\\n| where MessageID_s in (AuditClasses)\\r\\n| where ABAPProgramName_s == ProgramName\\r\\n| project-rename SystemID = SystemID_s\\r\\n| lookup kind = inner (UnitedSystem) on SystemID\\r\\n| summarize count() by User_s\",\n                            \"size\": 0,\n                            \"title\": \"Users Test Functions\",\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                            \"visualization\": \"piechart\"\n                        },\n                        \"customWidth\": \"50\",\n                        \"name\": \"query - 4 - Copy\",\n                        \"styleSettings\": {\n                            \"margin\": \"4px\"\n                        }\n                    }\n                ]\n            },\n            \"conditionalVisibility\": {\n                \"parameterName\": \"wb-param\",\n                \"comparison\": \"isEqualTo\",\n                \"value\": \"insec\"\n            },\n            \"name\": \"group - 4\"\n        },\n        {\n            \"type\": 12,\n            \"content\": {\n                \"version\": \"NotebookGroup/1.0\",\n                \"groupType\": \"editable\",\n                \"items\": [\n                    {\n                        \"type\": 1,\n                        \"content\": {\n                            \"json\": \"<tr><td><h2 style=\\\"font-family: 'Enriqueta', arial, serif; line-height: 1.25; margin: 0 0 10px; font-size: 24px; font-weight: bold;\\\"><B>Sensitive Tables Direct Access By RFC Logon</b></h2>\\r\\n<tr><td><p style=\\\"color: #333; font-family: 'Muli', sans-serif; margin-bottom: 15px; font-size: 14px;\\\"><B>Identifies generic table access by RFC logon</b></p>\"\n                        },\n                        \"name\": \"text - 5\"\n                    },\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"// Define variables\\r\\nlet Role = \\\"Production\\\";\\r\\nlet AuditClasses = dynamic(['CUZ']); // RFC, Audit Log Classes - Generic Table Access \\r\\nlet allSystemRoles = dynamic(['Sandbox','Developement','QualityAssurance','Training','Production']); // Available System Roles\\r\\nlet allSystemUsage = dynamic (['ERP','CRM','BW','Solman','Gateway','Enterprise Portal']); // Available System Usages\\r\\n// Get Relevant Systems from WatchList\\r\\nlet systemID = _GetWatchlist('SAP - Systems');\\r\\nlet fixedSID = datatable(SystemID:string, SystemRole:string, SystemUsage:string)\\r\\n// Maintain these if WatchList is not available    \\r\\n    [\\\"S4H\\\",\\\"Production\\\",\\\"ERP\\\",\\r\\n    \\\"XXX\\\",\\\"Sandbox\\\",\\\"BW\\\"]\\r\\n; \\r\\n// Get Relevant Tables\\r\\nlet SensitiveTables = _GetWatchlist('SAP - Sensitive Tables');\\r\\nlet fixedTables = datatable(Table:string)\\r\\n// Maintain these if WatchList is not available    \\r\\n    [\\\"USR02\\\"]\\r\\n; \\r\\nlet RelSystemID = union systemID, fixedSID // Create a variable that stores relevent Systems\\r\\n| where SystemRole == Role // Reccommended is Production only\\r\\n//| where SystemRole in (allSystemRoles); // Use this for all system roles\\r\\n| summarize by SystemID;\\r\\nlet SensitiveUnionTables = union SensitiveTables, fixedTables // Create a variable that stores relevent sensitive tables\\r\\n    | summarize by Table;\\r\\n// Query logic\\r\\nABAPAuditLog_CL \\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\\r\\n| project-rename Table = Variable1_s, Activity = Variable2_s\\r\\n| where MessageID_s in (AuditClasses)\\r\\n| where SystemID_s in (RelSystemID)\\r\\n| where Table in (SensitiveUnionTables)\\r\\n| order by TimeGenerated asc\\r\\n| project TimeGenerated, SystemID_s, ClientID_s, User_s, TransactionCode_s, ABAPProgramName_s, Table,   Activity, MessageText_s, MessageID_s,\\r\\nAccountCustomEntity = Email_s, IPCustomEntity = TerminalIPv6_s, HostCustomEntity = Host_s\",\n                            \"size\": 1,\n                            \"title\": \"Sensitive Tables Accessed\",\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                            \"gridSettings\": {\n                                \"formatters\": [\n                                    {\n                                        \"columnMatch\": \"Table\",\n                                        \"formatter\": 18,\n                                        \"formatOptions\": {\n                                            \"thresholdsOptions\": \"icons\",\n                                            \"thresholdsGrid\": [\n                                                {\n                                                    \"operator\": \"Default\",\n                                                    \"representation\": \"info\",\n                                                    \"text\": \"{0}{1}\"\n                                                }\n                                            ]\n                                        }\n                                    }\n                                ]\n                            }\n                        },\n                        \"customWidth\": \"50\",\n                        \"name\": \"query - 0\",\n                        \"styleSettings\": {\n                            \"margin\": \"10px\"\n                        }\n                    },\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"// Define variables\\r\\nlet Role = \\\"Production\\\";\\r\\nlet AuditClasses = dynamic(['CUZ']); // RFC, Audit Log Classes - Generic Table Access \\r\\nlet allSystemRoles = dynamic(['Sandbox','Developement','QualityAssurance','Training','Production']); // Available System Roles\\r\\nlet allSystemUsage = dynamic (['ERP','CRM','BW','Solman','Gateway','Enterprise Portal']); // Available System Usages\\r\\n// Get Relevant Systems from WatchList\\r\\nlet systemID = _GetWatchlist('SAP - Systems');\\r\\nlet fixedSID = datatable(SystemID:string, SystemRole:string, SystemUsage:string)\\r\\n// Maintain these if WatchList is not available    \\r\\n    [\\\"S4H\\\",\\\"Production\\\",\\\"ERP\\\",\\r\\n    \\\"XXX\\\",\\\"Sandbox\\\",\\\"BW\\\"]\\r\\n; \\r\\n// Get Relevant Tables\\r\\nlet SensitiveTables = _GetWatchlist('SAP - Sensitive Tables');\\r\\nlet fixedTables = datatable(Table:string)\\r\\n// Maintain these if WatchList is not available    \\r\\n    [\\\"USR02\\\"]\\r\\n; \\r\\nlet RelSystemID = union systemID, fixedSID // Create a variable that stores relevent Systems\\r\\n| where SystemRole == Role // Reccommended is Production only\\r\\n//| where SystemRole in (allSystemRoles); // Use this for all system roles\\r\\n| summarize by SystemID;\\r\\nlet SensitiveUnionTables = union SensitiveTables, fixedTables // Create a variable that stores relevent sensitive tables\\r\\n    | summarize by Table;\\r\\n// Query logic\\r\\nABAPAuditLog_CL \\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\\r\\n| project-rename Table = Variable1_s, Activity = Variable2_s\\r\\n| where MessageID_s in (AuditClasses)\\r\\n| where SystemID_s in (RelSystemID)\\r\\n| where Table in (SensitiveUnionTables)\\r\\n| summarize count() by Table\",\n                            \"size\": 0,\n                            \"title\": \"Tables Distribution\",\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                            \"visualization\": \"barchart\"\n                        },\n                        \"customWidth\": \"50\",\n                        \"name\": \"query - 0 - Copy\",\n                        \"styleSettings\": {\n                            \"margin\": \"10px\"\n                        }\n                    },\n                    {\n                        \"type\": 1,\n                        \"content\": {\n                            \"json\": \"<tr><td><h2 style=\\\"font-family: 'Enriqueta', arial, serif; line-height: 1.25; margin: 0 0 10px; font-size: 24px; font-weight: bold;\\\"><B>Sensitive Tables Direct Access By Dialog Logon</b></h2>\\r\\n<tr><td><p style=\\\"color: #333; font-family: 'Muli', sans-serif; margin-bottom: 15px; font-size: 14px;\\\"><B>Identifies generic table access by dialog logon.</b></p>\"\n                        },\n                        \"name\": \"text - 5 - Copy\"\n                    },\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"// Define variables\\r\\nlet Role = \\\"Production\\\";\\r\\nlet AuditClasses = dynamic(['DU9']); // Dialog, Audit Log Classes - Generic Table Access \\r\\nlet allSystemRoles = dynamic(['Sandbox','Developement','QualityAssurance','Training','Production']); // Available System Roles\\r\\nlet allSystemUsage = dynamic (['ERP','CRM','BW','Solman','Gateway','Enterprise Portal']); // Available System Usages\\r\\n// Get Relevant Systems from WatchList\\r\\nlet systemID = _GetWatchlist('SAP - Systems');\\r\\nlet fixedSID = datatable(SystemID:string, SystemRole:string, SystemUsage:string)\\r\\n// Maintain these if WatchList is not available    \\r\\n    [\\\"S4H\\\",\\\"Production\\\",\\\"ERP\\\",\\r\\n    \\\"XXX\\\",\\\"Sandbox\\\",\\\"BW\\\"]\\r\\n; \\r\\n// Get Relevant Tables\\r\\nlet SensitiveTables = _GetWatchlist('SAP - Sensitive Tables');\\r\\nlet fixedTables = datatable(Table:string)\\r\\n// Maintain these if WatchList is not available    \\r\\n    [\\\"USR02\\\"]\\r\\n; \\r\\nlet RelSystemID = union systemID, fixedSID // Create a variable that stores relevant Systems\\r\\n| where SystemRole == Role // Recommended  is Production only\\r\\n//| where SystemRole in (allSystemRoles); // Use this for all system roles\\r\\n| summarize by SystemID;\\r\\nlet SensitiveUnionTables = union SensitiveTables, fixedTables // Create a variable that stores relevant sensitive tables\\r\\n    | summarize by Table;\\r\\n// Query logic\\r\\nABAPAuditLog_CL \\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\\r\\n| project-rename Table = Variable1_s, Activity = Variable2_s\\r\\n| where MessageID_s in (AuditClasses)\\r\\n| where SystemID_s in (RelSystemID)\\r\\n| where Table in (SensitiveUnionTables)\\r\\n| order by TimeGenerated asc\\r\\n| project TimeGenerated, SystemID_s, ClientID_s, User_s, TransactionCode_s, ABAPProgramName_s, Table,   Activity, MessageText_s, MessageID_s,\\r\\nAccountCustomEntity = Email_s, IPCustomEntity = TerminalIPv6_s, HostCustomEntity = Host_s\",\n                            \"size\": 1,\n                            \"title\": \"Sensitive Tables Accessed\",\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                            \"gridSettings\": {\n                                \"formatters\": [\n                                    {\n                                        \"columnMatch\": \"Table\",\n                                        \"formatter\": 18,\n                                        \"formatOptions\": {\n                                            \"thresholdsOptions\": \"icons\",\n                                            \"thresholdsGrid\": [\n                                                {\n                                                    \"operator\": \"Default\",\n                                                    \"representation\": \"info\",\n                                                    \"text\": \"{0}{1}\"\n                                                }\n                                            ]\n                                        }\n                                    }\n                                ]\n                            }\n                        },\n                        \"customWidth\": \"50\",\n                        \"name\": \"query - 2\",\n                        \"styleSettings\": {\n                            \"margin\": \"10px\"\n                        }\n                    },\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"// Define variables\\r\\nlet Role = \\\"Production\\\";\\r\\nlet AuditClasses = dynamic(['DU9']); // Dialog, Audit Log Classes - Generic Table Access \\r\\nlet allSystemRoles = dynamic(['Sandbox','Developement','QualityAssurance','Training','Production']); // Available System Roles\\r\\nlet allSystemUsage = dynamic (['ERP','CRM','BW','Solman','Gateway','Enterprise Portal']); // Available System Usages\\r\\n// Get Relevant Systems from WatchList\\r\\nlet systemID = _GetWatchlist('SAP - Systems');\\r\\nlet fixedSID = datatable(SystemID:string, SystemRole:string, SystemUsage:string)\\r\\n// Maintain these if WatchList is not available    \\r\\n    [\\\"S4H\\\",\\\"Production\\\",\\\"ERP\\\",\\r\\n    \\\"XXX\\\",\\\"Sandbox\\\",\\\"BW\\\"]\\r\\n; \\r\\n// Get Relevant Tables\\r\\nlet SensitiveTables = _GetWatchlist('SAP - Sensitive Tables');\\r\\nlet fixedTables = datatable(Table:string)\\r\\n// Maintain these if WatchList is not available    \\r\\n    [\\\"USR02\\\"]\\r\\n; \\r\\nlet RelSystemID = union systemID, fixedSID // Create a variable that stores relevant Systems\\r\\n| where SystemRole == Role // Recommended  is Production only\\r\\n//| where SystemRole in (allSystemRoles); // Use this for all system roles\\r\\n| summarize by SystemID;\\r\\nlet SensitiveUnionTables = union SensitiveTables, fixedTables // Create a variable that stores relevant sensitive tables\\r\\n    | summarize by Table;\\r\\n// Query logic\\r\\nABAPAuditLog_CL \\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\\r\\n| project-rename Table = Variable1_s, Activity = Variable2_s\\r\\n| where MessageID_s in (AuditClasses)\\r\\n| where SystemID_s in (RelSystemID)\\r\\n| where Table in (SensitiveUnionTables)\\r\\n| summarize count() by Table\",\n                            \"size\": 0,\n                            \"title\": \"Tables Distribution\",\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                            \"visualization\": \"barchart\"\n                        },\n                        \"customWidth\": \"50\",\n                        \"name\": \"query - 2 - Copy\",\n                        \"styleSettings\": {\n                            \"margin\": \"10px\"\n                        }\n                    },\n                    {\n                        \"type\": 1,\n                        \"content\": {\n                            \"json\": \"<tr><td><h2 style=\\\"font-family: 'Enriqueta', arial, serif; line-height: 1.25; margin: 0 0 10px; font-size: 24px; font-weight: bold;\\\"><B>Tables</b></h2>\\r\\n<tr><td><p style=\\\"color: #333; font-family: 'Muli', sans-serif; margin-bottom: 15px; font-size: 14px;\\\"><B>Logons to tables by type.</b></p>\"\n                        },\n                        \"name\": \"text - 5 - Copy - Copy\"\n                    },\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"// Define variables\\r\\nlet Role = \\\"Production\\\";\\r\\nlet AuditClasses = dynamic(['CUZ']); // RFC, Audit Log Classes - Generic Table Access \\r\\nlet DialogAuditClasses = dynamic(['DU9']); // Dialog, Audit Log Classes - Generic Table Access \\r\\nlet allSystemRoles = dynamic(['Sandbox','Developement','QualityAssurance','Training','Production']); // Available System Roles\\r\\nlet allSystemUsage = dynamic (['ERP','CRM','BW','Solman','Gateway','Enterprise Portal']); // Available System Usages\\r\\n// Get Relevant Systems from WatchList\\r\\nlet systemID = _GetWatchlist('SAP - Systems');\\r\\nlet fixedSID = datatable(SystemID:string, SystemRole:string, SystemUsage:string)\\r\\n// Maintain these if WatchList is not available    \\r\\n    [\\\"S4H\\\",\\\"Production\\\",\\\"ERP\\\",\\r\\n    \\\"XXX\\\",\\\"Sandbox\\\",\\\"BW\\\"]\\r\\n; \\r\\n// Get Relevant Tables\\r\\nlet SensitiveTables = _GetWatchlist('SAP - Sensitive Tables');\\r\\nlet fixedTables = datatable(Table:string)\\r\\n// Maintain these if WatchList is not available    \\r\\n    [\\\"USR02\\\"]\\r\\n; \\r\\nlet RelSystemID = union systemID, fixedSID // Create a variable that stores relevent Systems\\r\\n| where SystemRole == Role // Reccommended is Production only\\r\\n//| where SystemRole in (allSystemRoles); // Use this for all system roles\\r\\n| summarize by SystemID;\\r\\nlet SensitiveUnionTables = union SensitiveTables, fixedTables // Create a variable that stores relevent sensitive tables\\r\\n    | summarize by Table;\\r\\n// Query logic\\r\\nlet RFC = ABAPAuditLog_CL \\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\\r\\n| project-rename Table = Variable1_s, Activity = Variable2_s\\r\\n| where MessageID_s in (AuditClasses)\\r\\n| where SystemID_s in (RelSystemID)\\r\\n| where Table in (SensitiveUnionTables)\\r\\n| order by TimeGenerated asc\\r\\n| extend Type = \\\"RFC\\\";\\r\\nABAPAuditLog_CL \\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\\r\\n| project-rename Table = Variable1_s, Activity = Variable2_s\\r\\n| where MessageID_s in (DialogAuditClasses)\\r\\n| where SystemID_s in (RelSystemID)\\r\\n| where Table in (SensitiveUnionTables)\\r\\n| extend Type = \\\"Dialog\\\"\\r\\n| union RFC\\r\\n| summarize count() by Type\\r\\n\",\n                            \"size\": 0,\n                            \"title\": \"Dialog/RFC Logons\",\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                            \"visualization\": \"piechart\",\n                            \"chartSettings\": {\n                                \"ySettings\": {\n                                    \"numberFormatSettings\": {\n                                        \"unit\": 0,\n                                        \"options\": {\n                                            \"style\": \"decimal\",\n                                            \"useGrouping\": true\n                                        }\n                                    }\n                                }\n                            }\n                        },\n                        \"name\": \"query - 4\"\n                    }\n                ]\n            },\n            \"conditionalVisibility\": {\n                \"parameterName\": \"wb-param\",\n                \"comparison\": \"isEqualTo\",\n                \"value\": \"table\"\n            },\n            \"name\": \"group - 5\"\n        },\n        {\n            \"type\": 12,\n            \"content\": {\n                \"version\": \"NotebookGroup/1.0\",\n                \"groupType\": \"editable\",\n                \"items\": [\n                    {\n                        \"type\": 1,\n                        \"content\": {\n                            \"json\": \"<tr><td><h2 style=\\\"font-family: 'Enriqueta', arial, serif; line-height: 1.25; margin: 0 0 10px; font-size: 24px; font-weight: bold;\\\"><B>Spool Actions</b></h2>\\r\\n<tr><td><p p style=\\\"color: #333; font-family: 'Muli', sans-serif; margin-bottom: 15px; font-size: 14px;\\\"><B>Identifies multiple spools requests for a user within a specific timerange.</b></p>\"\n                        },\n                        \"name\": \"text - 0\"\n                    },\n                    {\n                        \"type\": 9,\n                        \"content\": {\n                            \"version\": \"KqlParameterItem/1.0\",\n                            \"parameters\": [\n                                {\n                                    \"id\": \"ddafbb71-cd42-4a9d-acbf-ff2eaee66f10\",\n                                    \"version\": \"KqlParameterItem/1.0\",\n                                    \"name\": \"threshold1\",\n                                    \"label\": \"Threshold for Multiple Spool Executions\",\n                                    \"type\": 1,\n                                    \"value\": \"3\",\n                                    \"typeSettings\": {\n                                        \"paramValidationRules\": [\n                                            {\n                                                \"regExp\": \"\\\\d\",\n                                                \"match\": true,\n                                                \"message\": \"Enter a number to determine multiple spool threshold\"\n                                            }\n                                        ]\n                                    },\n                                    \"timeContext\": {\n                                        \"durationMs\": 86400000\n                                    }\n                                }\n                            ],\n                            \"style\": \"formVertical\",\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\"\n                        },\n                        \"name\": \"parameters - 15\"\n                    },\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"// Define variables\\r\\nlet AuditLogIn = dynamic(['AU1', 'AU5']); // Messages of connect with user\\r\\nlet HoursBucket = 2h; // // How much time between buckets\\r\\n// Query logic\\r\\nlet LastLogin = \\r\\nABAPAuditLog_CL\\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\\r\\n| where MessageID_s in (AuditLogIn)\\r\\n| summarize TimeGenerated = arg_max(TimeGenerated, *) by SystemID_s, ClientID_s, User_s; // Get last connection date for user\\r\\nABAPSpoolLog_CL // Get all spool requests\\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\\r\\n| summarize UserRequests = count() by bin(TimeGenerated, HoursBucket), SystemID_s, ClientID_s, User_s\\r\\n| where UserRequests >= toint(\\\"{threshold1}\\\") // User requested to print more than threshold\\r\\n| lookup kind=inner LastLogin on User_s // Check IP of last login\\r\\n| project TimeGenerated, SystemID_s, ClientID_s, User_s, AccountCustomEntity = Email_s, IPCustomEntity = TerminalIPv6_s, HostCustomEntity = Host_s, UserRequests\\r\\n\",\n                            \"size\": 1,\n                            \"title\": \"Multiple Spool Executions (Press to Investigate)\",\n                            \"exportFieldName\": \"User_s\",\n                            \"exportParameterName\": \"User1\",\n                            \"exportDefaultValue\": \"SAP\",\n                            \"showExportToExcel\": true,\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                            \"gridSettings\": {\n                                \"formatters\": [\n                                    {\n                                        \"columnMatch\": \"User_s\",\n                                        \"formatter\": 18,\n                                        \"formatOptions\": {\n                                            \"thresholdsOptions\": \"icons\",\n                                            \"thresholdsGrid\": [\n                                                {\n                                                    \"operator\": \"Default\",\n                                                    \"representation\": \"info\",\n                                                    \"text\": \"{0}{1}\"\n                                                }\n                                            ]\n                                        }\n                                    }\n                                ]\n                            }\n                        },\n                        \"name\": \"query - 1\"\n                    },\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"ABAPSpoolLog_CL \\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\\r\\n| where User_s == \\\"{User1}\\\"\\r\\n| project TimeGenerated,SystemID_s, ClientID_s, User_s, SpoolRequestNumber_d, SpoolRequestName_s, SpoolRequestSuffix1_s, SpoolRequestSuffix2_s\",\n                            \"size\": 1,\n                            \"title\": \"{User1} Spool Executions\",\n                            \"showExportToExcel\": true,\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\"\n                        },\n                        \"customWidth\": \"50\",\n                        \"conditionalVisibility\": {\n                            \"parameterName\": \"User1\",\n                            \"comparison\": \"isNotEqualTo\",\n                            \"value\": \"SAP\"\n                        },\n                        \"name\": \"query - 3\"\n                    },\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"// Define variables\\r\\nlet AuditLogIn = dynamic(['AU1', 'AU5']); // Messages of connect with user\\r\\nlet NumberOfRequests = 3; // Number of requests as threshold\\r\\nlet HoursBucket = 2h; // // How much time between buckets\\r\\n// Query logic\\r\\nlet LastLogin = \\r\\nABAPAuditLog_CL\\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\\r\\n| where MessageID_s in (AuditLogIn)\\r\\n| summarize TimeGenerated = arg_max(TimeGenerated, *) by SystemID_s, ClientID_s, User_s; // Get last connection date for user\\r\\nABAPSpoolLog_CL // Get all spool requests\\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\\r\\n| where User_s == \\\"{User1}\\\"\\r\\n| summarize UserRequests = count() by bin(TimeGenerated, HoursBucket), User_s\\r\\n\",\n                            \"size\": 1,\n                            \"title\": \"{User1} Spool Executions by Time\",\n                            \"color\": \"redBright\",\n                            \"showExportToExcel\": true,\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                            \"visualization\": \"timechart\"\n                        },\n                        \"customWidth\": \"50\",\n                        \"conditionalVisibility\": {\n                            \"parameterName\": \"User1\",\n                            \"comparison\": \"isNotEqualTo\",\n                            \"value\": \"SAP\"\n                        },\n                        \"name\": \"query - 1 - Copy\"\n                    },\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"ABAPSpoolLog_CL \\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\\r\\n| project TimeGenerated,SystemID_s, ClientID_s, User_s, SpoolRequestNumber_d, SpoolRequestName_s, SpoolRequestSuffix1_s, SpoolRequestSuffix2_s\\r\\n| summarize count() by SpoolRequestSuffix2_s, SpoolRequestSuffix1_s\",\n                            \"size\": 0,\n                            \"title\": \"Spool Requests by Printer\",\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                            \"visualization\": \"barchart\",\n                            \"chartSettings\": {\n                                \"xAxis\": \"SpoolRequestSuffix1_s\",\n                                \"xSettings\": {\n                                    \"numberFormatSettings\": {\n                                        \"unit\": 0,\n                                        \"options\": {\n                                            \"style\": \"decimal\",\n                                            \"useGrouping\": true\n                                        }\n                                    }\n                                }\n                            }\n                        },\n                        \"name\": \"query - 3 - Copy\"\n                    },\n                    {\n                        \"type\": 1,\n                        \"content\": {\n                            \"json\": \"<tr><td><h2 style=\\\"font-family: 'Enriqueta', arial, serif; line-height: 1.25; margin: 0 0 10px; font-size: 24px; font-weight: bold;\\\"><B>Spool Output Actions</b></h2>\\r\\n<tr><td><p style=\\\"color: #333; font-family: 'Muli', sans-serif; margin-bottom: 15px; font-size: 14px;\\\"><B>Identifies multiple spool outputs for a user within a specific timerange.</b></p>\"\n                        },\n                        \"name\": \"text - 4\"\n                    },\n                    {\n                        \"type\": 9,\n                        \"content\": {\n                            \"version\": \"KqlParameterItem/1.0\",\n                            \"parameters\": [\n                                {\n                                    \"id\": \"86744350-b2b6-417e-9c2b-01d3315933a8\",\n                                    \"version\": \"KqlParameterItem/1.0\",\n                                    \"name\": \"threshold2\",\n                                    \"label\": \"Threshold for Multiple Output Spool Executions\",\n                                    \"type\": 1,\n                                    \"typeSettings\": {\n                                        \"paramValidationRules\": [\n                                            {\n                                                \"regExp\": \"\\\\d\",\n                                                \"match\": true,\n                                                \"message\": \"Enter a number to determine multiple spool output threshold\"\n                                            }\n                                        ]\n                                    },\n                                    \"timeContext\": {\n                                        \"durationMs\": 86400000\n                                    },\n                                    \"value\": \"3\"\n                                }\n                            ],\n                            \"style\": \"formVertical\",\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\"\n                        },\n                        \"name\": \"parameters - 16\"\n                    },\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"// Define variables\\r\\nlet AuditLogIn = dynamic(['AU1', 'AU5']); // Messeges of connect with user\\r\\nlet HoursBucket = 2h; // // How much time between buckets\\r\\n// Query logic\\r\\nlet LastLogin =\\r\\nABAPAuditLog_CL\\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\\r\\n| where MessageID_s in (AuditLogIn)\\r\\n| summarize arg_max(TimeGenerated, *) by SystemID_s, ClientID_s, User_s; // Get last connection date for user\\r\\nABAPSpoolOutputLog_CL // Get all spool outputs\\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\\r\\n| summarize UserPrints = count() by bin(TimeGenerated, HoursBucket), SystemID_s, ClientID_s, User_s\\r\\n| where UserPrints >= toint(\\\"{threshold2}\\\") // User requested to print more than threshold\\r\\n| lookup kind=inner LastLogin on User_s // Get IP of last login\\r\\n| project TimeGenerated, SystemID_s, ClientID_s, User_s, AccountCustomEntity = Email_s, IPCustomEntity = TerminalIPv6_s, HostCustomEntity = Host_s, UserPrints\",\n                            \"size\": 1,\n                            \"title\": \"Multiple Spool Output Executions (Press to Investigate)\",\n                            \"exportFieldName\": \"User_s\",\n                            \"exportParameterName\": \"User2\",\n                            \"exportDefaultValue\": \"SAP\",\n                            \"showExportToExcel\": true,\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                            \"gridSettings\": {\n                                \"formatters\": [\n                                    {\n                                        \"columnMatch\": \"User_s\",\n                                        \"formatter\": 18,\n                                        \"formatOptions\": {\n                                            \"thresholdsOptions\": \"icons\",\n                                            \"thresholdsGrid\": [\n                                                {\n                                                    \"operator\": \"Default\",\n                                                    \"representation\": \"info\",\n                                                    \"text\": \"{0}{1}\"\n                                                }\n                                            ]\n                                        }\n                                    }\n                                ]\n                            }\n                        },\n                        \"name\": \"query - 5\"\n                    },\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"ABAPSpoolOutputLog_CL\\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\\r\\n| where User_s == \\\"{User2}\\\"\\r\\n| project TimeGenerated,SystemID_s, ClientID_s, User_s, SpoolRequestNumber_d, OutputRequestNumber_d, OutputDevice_s, FormatType_s\",\n                            \"size\": 1,\n                            \"title\": \"{User2} Output Spool Executions\",\n                            \"showExportToExcel\": true,\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\"\n                        },\n                        \"customWidth\": \"50\",\n                        \"conditionalVisibility\": {\n                            \"parameterName\": \"User2\",\n                            \"comparison\": \"isNotEqualTo\",\n                            \"value\": \"SAP\"\n                        },\n                        \"name\": \"query - 7\"\n                    },\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"// Define variables\\r\\nlet AuditLogIn = dynamic(['AU1', 'AU5']); // Messeges of connect with user\\r\\nlet NumberOfPrints = 3; // Number of prints as threshold\\r\\nlet HoursBucket = 2h; // // How much time between buckets\\r\\n// Query logic\\r\\nlet LastLogin =\\r\\nABAPAuditLog_CL\\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\\r\\n| where MessageID_s in (AuditLogIn)\\r\\n| summarize arg_max(TimeGenerated, *) by SystemID_s, ClientID_s, User_s; // Get last connection date for user\\r\\nABAPSpoolOutputLog_CL // Get all spool outputs\\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\\r\\n| where User_s == \\\"{User2}\\\"\\r\\n| summarize UserPrints = count() by bin(TimeGenerated, HoursBucket), User_s\",\n                            \"size\": 1,\n                            \"title\": \"{User2} Spool Output Executions by Time\",\n                            \"color\": \"redBright\",\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                            \"visualization\": \"timechart\"\n                        },\n                        \"customWidth\": \"50\",\n                        \"conditionalVisibility\": {\n                            \"parameterName\": \"User2\",\n                            \"comparison\": \"isNotEqualTo\",\n                            \"value\": \"SAP\"\n                        },\n                        \"name\": \"query - 5 - Copy\"\n                    },\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"// Define variables\\r\\nlet AuditLogIn = dynamic(['AU1', 'AU5']); // Messages of connect with user\\r\\n// Query logic\\r\\nlet LastLogin = \\r\\nABAPAuditLog_CL\\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\\r\\n| where MessageID_s in (AuditLogIn)\\r\\n| summarize TimeGenerated = arg_max(TimeGenerated, *) by SystemID_s, ClientID_s, User_s; // Get last connection date for user\\r\\n// Query Logic\\r\\nABAPSpoolOutputLog_CL // Get all spool outputs\\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\\r\\n| lookup kind=inner ABAPSpoolLog_CL on SpoolRequestNumber_d\\r\\n| lookup kind=inner LastLogin on User_s\\r\\n| where User_s != User_s1 // The user that created the request is not the one that printed it\\r\\n| project TimeGenerated, SystemID_s, ClientID_s, UserCreated = User_s1, UserPrinted = User_s, SpoolRequestNumber_d, AccountCustomEntity = Email_s, IPCustomEntity = TerminalIPv6_s, HostCustomEntity = Host_s\",\n                            \"size\": 1,\n                            \"title\": \"Spool Takeover -  User Prints a Spool Request which was Created by Other User\",\n                            \"showExportToExcel\": true,\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                            \"visualization\": \"table\"\n                        },\n                        \"name\": \"query - 8\"\n                    },\n                    {\n                        \"type\": 1,\n                        \"content\": {\n                            \"json\": \"<tr><td><h2 style=\\\"font-family: 'Enriqueta', arial, serif; line-height: 1.25; margin: 0 0 10px; font-size: 24px; font-weight: bold;\\\"><B>Downloads</b></h2>\\r\\n<tr><td><p style=\\\"color: #333; font-family: 'Muli', sans-serif; margin-bottom: 15px; font-size: 14px;\\\"><B>Identifies multiple files downloads for a user within a specific timerange.</b></p>\"\n                        },\n                        \"name\": \"text - 9\"\n                    },\n                    {\n                        \"type\": 9,\n                        \"content\": {\n                            \"version\": \"KqlParameterItem/1.0\",\n                            \"parameters\": [\n                                {\n                                    \"id\": \"f5e82a34-aefe-4331-92e4-1a976742d3e7\",\n                                    \"version\": \"KqlParameterItem/1.0\",\n                                    \"name\": \"threshold3\",\n                                    \"label\": \"Threshold for Multiple Downloads\",\n                                    \"type\": 1,\n                                    \"typeSettings\": {\n                                        \"paramValidationRules\": [\n                                            {\n                                                \"regExp\": \"\\\\d\",\n                                                \"match\": true,\n                                                \"message\": \"Enter a number to determine multiple downloads threshold\"\n                                            }\n                                        ]\n                                    },\n                                    \"timeContext\": {\n                                        \"durationMs\": 86400000\n                                    },\n                                    \"value\": \"3\"\n                                }\n                            ],\n                            \"style\": \"formVertical\",\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\"\n                        },\n                        \"name\": \"parameters - 17\"\n                    },\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"// Define variables\\r\\nlet HoursBucket = 2h; // How much time between buckets\\r\\nlet AuditClasses = dynamic([\\\"AUY\\\"]); // Relevant message\\r\\n// Query logic\\r\\nABAPAuditLog_CL // Get all downloads\\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\\r\\n| where MessageID_s in (AuditClasses)\\r\\n| summarize DownloadsByUser = count() by bin(TimeGenerated, HoursBucket), SystemID_s, ClientID_s, User_s, TerminalIPv6_s, Email_s, Host_s\\r\\n| where DownloadsByUser >= toint(\\\"{threshold3}\\\") // User downloaded more than threshold\\r\\n| project SystemID_s, ClientID_s, User_s, AccountCustomEntity = Email_s, IPCustomEntity = TerminalIPv6_s, HostCustomEntity = Host_s,DownloadsByUser\",\n                            \"size\": 1,\n                            \"title\": \"Multiple Files Download (Press to Investigate)\",\n                            \"exportFieldName\": \"User_s\",\n                            \"exportParameterName\": \"User3\",\n                            \"exportDefaultValue\": \"SAP\",\n                            \"showExportToExcel\": true,\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                            \"visualization\": \"table\",\n                            \"gridSettings\": {\n                                \"formatters\": [\n                                    {\n                                        \"columnMatch\": \"User_s\",\n                                        \"formatter\": 18,\n                                        \"formatOptions\": {\n                                            \"thresholdsOptions\": \"icons\",\n                                            \"thresholdsGrid\": [\n                                                {\n                                                    \"operator\": \"Default\",\n                                                    \"representation\": \"info\",\n                                                    \"text\": \"{0}{1}\"\n                                                }\n                                            ]\n                                        }\n                                    }\n                                ]\n                            }\n                        },\n                        \"name\": \"query - 10\"\n                    },\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"let AuditClasses = dynamic([\\\"AUY\\\"]); // Relevant message\\r\\n// Query logic\\r\\nABAPAuditLog_CL // Get all downloads\\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\\r\\n| where MessageID_s in (AuditClasses)\\r\\n| where User_s == \\\"{User3}\\\"\\r\\n| project SystemID_s, ClientID_s, User_s, AccountCustomEntity = Email_s, IPCustomEntity = TerminalIPv6_s, HostCustomEntity = Host_s,ABAPProgramName_s, MessageText_s, Path = Variable3_s\",\n                            \"size\": 1,\n                            \"title\": \"{User3} Downloads from System\",\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\"\n                        },\n                        \"customWidth\": \"50\",\n                        \"conditionalVisibility\": {\n                            \"parameterName\": \"User3\",\n                            \"comparison\": \"isNotEqualTo\",\n                            \"value\": \"SAP\"\n                        },\n                        \"name\": \"query - 12\"\n                    },\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"// Define variables\\r\\nlet NumberOfDownloads = 10; // Number of downloads of user as threshold\\r\\nlet HoursBucket = 2h; // How much time between buckets\\r\\nlet AuditClasses = dynamic([\\\"AUY\\\"]); // Relevant message\\r\\n// Query logic\\r\\nABAPAuditLog_CL // Get all downloads\\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\\r\\n| where User_s == \\\"{User3}\\\"\\r\\n| where MessageID_s in (AuditClasses)\\r\\n| summarize DownloadsByUser = count() by bin(TimeGenerated, HoursBucket), User_s\",\n                            \"size\": 1,\n                            \"title\": \"{User3} Downloads By Time\",\n                            \"color\": \"redBright\",\n                            \"showExportToExcel\": true,\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                            \"visualization\": \"timechart\"\n                        },\n                        \"customWidth\": \"50\",\n                        \"conditionalVisibility\": {\n                            \"parameterName\": \"User3\",\n                            \"comparison\": \"isNotEqualTo\",\n                            \"value\": \"SAP\"\n                        },\n                        \"name\": \"query - 10 - Copy\"\n                    },\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"let AuditClasses = dynamic([\\\"AUY\\\"]); // Relevant message\\r\\n// Query logic\\r\\nABAPAuditLog_CL // Get all downloads\\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\\r\\n| where MessageID_s in (AuditClasses)\\r\\n| summarize count() by User_s\",\n                            \"size\": 0,\n                            \"title\": \"Downloads by User\",\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                            \"visualization\": \"barchart\"\n                        },\n                        \"name\": \"query - 12 - Copy\"\n                    }\n                ]\n            },\n            \"conditionalVisibility\": {\n                \"parameterName\": \"wb-param\",\n                \"comparison\": \"isEqualTo\",\n                \"value\": \"spd\"\n            },\n            \"name\": \"group - 2\"\n        },\n        {\n            \"type\": 12,\n            \"content\": {\n                \"version\": \"NotebookGroup/1.0\",\n                \"groupType\": \"editable\",\n                \"items\": [\n                    {\n                        \"type\": 1,\n                        \"content\": {\n                            \"json\": \"<tr><td><h2 style=\\\"font-family: 'Enriqueta', arial, serif; line-height: 1.25; margin: 0 0 10px; font-size: 24px; font-weight: bold;\\\"><B>FTP</b></h2>\\r\\n<tr><td><p style=\\\"color: #333; font-family: 'Muli', sans-serif; margin-bottom: 15px; font-size: 14px;\\\"><B>Identifies suspicious activity related to FTP.</b></p>\"\n                        },\n                        \"name\": \"text - 3\"\n                    },\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"// Define variables\\r\\nlet AuditClasses = dynamic(['DU8']); // Message of Successfull FTP Connection\\r\\nlet FTPSafeConnections = _GetWatchlist(\\\"SAP - FTP Servers\\\");\\r\\nlet fixedConnections = datatable(Client: string, Description: string,\\r\\nFTP_Server_Name: string, FTP_Server_Port: string)\\r\\n    // Maintain these if WatchList is not available    \\r\\n    [100, \\\"description\\\", \\\"http://ourorgftpserver.com/\\\", 22]\\r\\n;\\r\\nlet UnitedConnections = toscalar(union kind=inner FTPSafeConnections, fixedConnections | summarize Connections = make_set(FTP_Server_Name));\\r\\n// Query logic\\r\\nABAPAuditLog_CL\\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems})) \\r\\n| where MessageID_s in (AuditClasses)\\r\\n| where TerminalIPv6_s !in (UnitedConnections) // The IP is unknown\\r\\n| project TimeGenerated, SystemID_s, ClientID_s, User_s, AccountCustomEntity = Email_s,IPCustomEntity = TerminalIPv6_s, HostCustomEntity = Host_s, MessageText_s, Server = Variable1_s\",\n                            \"size\": 1,\n                            \"title\": \"FTP for Non Authorized Servers (Press to Investigate)\",\n                            \"exportFieldName\": \"User_s\",\n                            \"exportParameterName\": \"User1\",\n                            \"exportDefaultValue\": \"SAP\",\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                            \"gridSettings\": {\n                                \"formatters\": [\n                                    {\n                                        \"columnMatch\": \"Server\",\n                                        \"formatter\": 18,\n                                        \"formatOptions\": {\n                                            \"thresholdsOptions\": \"icons\",\n                                            \"thresholdsGrid\": [\n                                                {\n                                                    \"operator\": \"Default\",\n                                                    \"representation\": \"2\",\n                                                    \"text\": \"{0}{1}\"\n                                                }\n                                            ]\n                                        }\n                                    }\n                                ]\n                            }\n                        },\n                        \"name\": \"query - 2\"\n                    },\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"// Define variables\\r\\nlet AuditClasses = dynamic(['DU8']); // Message of Successfull FTP Connection\\r\\nlet FTPSafeConnections = _GetWatchlist(\\\"SAP - FTP Servers\\\");\\r\\nlet fixedConnections = datatable(Client: string, Description: string,\\r\\nFTP_Server_Name: string, FTP_Server_Port: string)\\r\\n    // Maintain these if WatchList is not available    \\r\\n    [100, \\\"description\\\", \\\"http://ourorgftpserver.com/\\\", 22]\\r\\n;\\r\\nlet UnitedConnections = toscalar(union kind=inner FTPSafeConnections, fixedConnections | summarize Connections = make_set(FTP_Server_Name));\\r\\n// Query logic\\r\\nABAPAuditLog_CL\\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems})) \\r\\n| where MessageID_s in (AuditClasses)\\r\\n| where TerminalIPv6_s !in (UnitedConnections) // The IP is unknown\\r\\n| summarize count() by Server = Variable1_s\\r\\n\",\n                            \"size\": 1,\n                            \"title\": \"Unauthorized Servers FTP Connections\",\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                            \"visualization\": \"barchart\",\n                            \"graphSettings\": {\n                                \"type\": 0\n                            },\n                            \"chartSettings\": {\n                                \"ySettings\": {\n                                    \"max\": 10\n                                }\n                            },\n                            \"mapSettings\": {\n                                \"locInfo\": \"LatLong\",\n                                \"sizeSettings\": \"count_\",\n                                \"sizeAggregation\": \"Sum\",\n                                \"legendMetric\": \"count_\",\n                                \"legendAggregation\": \"Sum\",\n                                \"itemColorSettings\": {\n                                    \"type\": \"heatmap\",\n                                    \"colorAggregation\": \"Sum\",\n                                    \"nodeColorField\": \"count_\",\n                                    \"heatmapPalette\": \"greenRed\"\n                                }\n                            }\n                        },\n                        \"customWidth\": \"50\",\n                        \"name\": \"query - 2 - Copy\"\n                    },\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"ABAPAuditLog_CL \\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\\r\\n| where User_s=='{User1}'\\r\\n| order by TimeGenerated desc\\r\\n| project TimeGenerated, SystemID_s, ClientID_s, MessageID_s ,MessageClass_s, MessageText_s\\r\\n| take 20\",\n                            \"size\": 1,\n                            \"title\": \"Detailed Activity of Suspicious User: {User1}\",\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                            \"visualization\": \"table\",\n                            \"graphSettings\": {\n                                \"type\": 0\n                            },\n                            \"mapSettings\": {\n                                \"locInfo\": \"LatLong\",\n                                \"sizeSettings\": \"count_\",\n                                \"sizeAggregation\": \"Sum\",\n                                \"legendMetric\": \"count_\",\n                                \"legendAggregation\": \"Sum\",\n                                \"itemColorSettings\": {\n                                    \"type\": \"heatmap\",\n                                    \"colorAggregation\": \"Sum\",\n                                    \"nodeColorField\": \"count_\",\n                                    \"heatmapPalette\": \"greenRed\"\n                                }\n                            }\n                        },\n                        \"customWidth\": \"50\",\n                        \"conditionalVisibility\": {\n                            \"parameterName\": \"User1\",\n                            \"comparison\": \"isNotEqualTo\",\n                            \"value\": \"SAP\"\n                        },\n                        \"name\": \"query - 2 - Copy - Copy\"\n                    },\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"// Define variables\\r\\nlet AuditClasses = dynamic(['DU1', 'DU2']); // Messages of FTP Whitelist is empty / Contains Placeholders\\r\\n// Query logic\\r\\nABAPAuditLog_CL\\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems})) \\r\\n| where MessageID_s in (AuditClasses)\\r\\n| project TimeGenerated, SystemID_s, ClientID_s, User_s, AccountCustomEntity = Email_s, IPCustomEntity = TerminalIPv6_s, HostCustomEntity = Host_s, Reason = MessageText_s\",\n                            \"size\": 1,\n                            \"title\": \"Insecure FTP Servers Configuration (Press to Investigate)\",\n                            \"exportFieldName\": \"User_s\",\n                            \"exportParameterName\": \"User2\",\n                            \"exportDefaultValue\": \"SAP\",\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\"\n                        },\n                        \"name\": \"query - 1\"\n                    },\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"// Define variables\\r\\nlet AuditClasses = dynamic(['DU1', 'DU2']); // Messages of FTP Whitelist is empty / Contains Placeholders\\r\\n// Query logic\\r\\nABAPAuditLog_CL\\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems})) \\r\\n| where MessageID_s in (AuditClasses)\\r\\n| summarize Number_Of_Events = count() by bin(TimeGenerated, 1h)\",\n                            \"size\": 1,\n                            \"title\": \"Insecure FTP Servers Configuration by Time\",\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                            \"visualization\": \"timechart\"\n                        },\n                        \"customWidth\": \"50\",\n                        \"name\": \"query - 1 - Copy\"\n                    },\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"ABAPAuditLog_CL \\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\\r\\n| where User_s=='{User2}'\\r\\n| order by TimeGenerated desc\\r\\n| project TimeGenerated, SystemID_s, ClientID_s, MessageID_s ,MessageClass_s, MessageText_s\\r\\n| take 20\",\n                            \"size\": 1,\n                            \"title\": \"Detailed Activity of Suspicious User: {User2}\",\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                            \"visualization\": \"table\"\n                        },\n                        \"customWidth\": \"50\",\n                        \"conditionalVisibility\": {\n                            \"parameterName\": \"User2\",\n                            \"comparison\": \"isNotEqualTo\",\n                            \"value\": \"SAP\"\n                        },\n                        \"name\": \"query - 1 - Copy - Copy\"\n                    },\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"// Define variables\\r\\nlet AuditClasses = dynamic(['DU1', 'DU2']); // Messages of FTP Whitelist is empty / Contains Placeholders\\r\\n// Query logic\\r\\nABAPAuditLog_CL\\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems})) \\r\\n| where MessageID_s in (AuditClasses)\\r\\n| summarize Number_Of_Events = count() by bin(TimeGenerated, 1h)\\r\\n| make-series Number_Of_Events=avg(Number_Of_Events) on TimeGenerated from ago(30d) to ago(0d) step 1h\\r\\n| extend (Anomalies, Score, Baseline) = series_decompose_anomalies(Number_Of_Events, 1.5, -1, 'linefit')\\r\\n| project-away Score\\r\\n\",\n                            \"size\": 1,\n                            \"title\": \"Insecure FTP Servers Configuration Anomalies\",\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                            \"visualization\": \"timechart\"\n                        },\n                        \"name\": \"query - 1 - Copy - Copy\"\n                    },\n                    {\n                        \"type\": 1,\n                        \"content\": {\n                            \"json\": \"<tr><td><h2 style=\\\"font-family: 'Enriqueta', arial, serif; line-height: 1.25; margin: 0 0 10px; font-size: 24px; font-weight: bold;\\\"><B>Dynamic RFC</b></h2>\\r\\n<tr><td><p style=\\\"color: #333; font-family: 'Muli', sans-serif; margin-bottom: 15px; font-size: 14px;\\\"><B>Identifies execution of RFC using dynamic destinations.</b></p>\"\n                        },\n                        \"name\": \"text - 4\"\n                    },\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"// Define variables\\r\\nlet AuditClasses = dynamic(['FU1']); // Message of dynamic RFC execution using dynamic destination\\r\\n// Query logic\\r\\nABAPAuditLog_CL\\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems})) \\r\\n| where MessageID_s in (AuditClasses)\\r\\n| parse Variable3_s with \\\"id=\\\" Created_RFC_Name\\r\\n| project TimeGenerated, SystemID_s, ClientID_s, User_s, AccountCustomEntity = Email_s, IPCustomEntity = TerminalIPv6_s, HostCustomEntity = Host_s, ABAPProgramName_s, ExecutedProgram = Variable2_s, Created_RFC_Name\",\n                            \"size\": 1,\n                            \"title\": \"Dynamic RFC Destination\",\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\"\n                        },\n                        \"name\": \"query - 0\"\n                    },\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"// Define variables\\r\\nlet AuditClasses = dynamic(['FU1']); // Message of dynamic RFC execution using dynamic destination\\r\\n// Query logic\\r\\nABAPAuditLog_CL\\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems})) \\r\\n| where MessageID_s in (AuditClasses)\\r\\n| parse Variable3_s with \\\"id=\\\" Created_RFC_Name\\r\\n| summarize Dynamic_RFC_Created = count() by bin(TimeGenerated, 1h)\",\n                            \"size\": 1,\n                            \"title\": \"Dynamic RFC Destination Creation by Time\",\n                            \"color\": \"green\",\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                            \"visualization\": \"timechart\"\n                        },\n                        \"name\": \"query - 0 - Copy\"\n                    },\n                    {\n                        \"type\": 1,\n                        \"content\": {\n                            \"json\": \"<tr><td><h2 style=\\\"font-family: 'Enriqueta', arial, serif; line-height: 1.25; margin: 0 0 10px; font-size: 24px; font-weight: bold;\\\"><B>User Admin</b></h2>\\r\\n<tr><td><p style=\\\"color: #333; font-family: 'Muli', sans-serif; margin-bottom: 15px; font-size: 14px;\\\"><B>User admin actions such as create/delete/update user.</b></p>\"\n                        },\n                        \"name\": \"text - 6\"\n                    },\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"Syslog \\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where ProcessName startswith \\\"HDB\\\"\\r\\n| where SyslogMessage contains \\\"CREATE USER\\\" or \\r\\n    SyslogMessage contains 'ALTER USER' or \\r\\n    SyslogMessage contains 'DROP USER' or \\r\\n    SyslogMessage contains 'DROP SCHEMA'\\r\\n| project TimeGenerated, HostIP, SyslogMessage, ProcessName\",\n                            \"size\": 1,\n                            \"title\": \"HANA DB - User Admin Actions\",\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\"\n                        },\n                        \"name\": \"query - 5\"\n                    }\n                ]\n            },\n            \"conditionalVisibility\": {\n                \"parameterName\": \"wb-param\",\n                \"comparison\": \"isEqualTo\",\n                \"value\": \"ftp\"\n            },\n            \"name\": \"group - 4\"\n        }\n    ],\n    \"fallbackResourceIds\": [\n        \"/subscriptions/fdee8146-8bcf-460f-86f3-3f788c285efd/resourcegroups/iprosis/providers/microsoft.operationalinsights/workspaces/s4h-sentinel-development\"\n    ],\n    \"fromTemplateId\": \"sentinel-UserWorkbook\",\n    \"$schema\": \"https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json\"\n}",
                "version": "1.0",
                "sourceId": "[variables('_workbook-source')]",
                "category": "sentinel"
            }
        },
        {
            "type": "Microsoft.Insights/workbooks",
            "name": "[parameters('workbook4-id')]",
            "location": "[parameters('workspace-location')]",
            "kind": "shared",
            "apiVersion": "2020-02-12",
            "properties": {
                "displayName": "[concat('Preview - ',parameters('workbook4-name'), ' - ', parameters('formattedTimeNow'))]",
                "serializedData": "{\n    \"version\": \"Notebook/1.0\",\n    \"items\": [\n        {\n            \"type\": 11,\n            \"content\": {\n                \"version\": \"LinkItem/1.0\",\n                \"style\": \"tabs\",\n                \"links\": [\n                    {\n                        \"id\": \"535fad95-5f51-44b2-b495-aae7bfd163b0\",\n                        \"cellValue\": \"wb-param\",\n                        \"linkTarget\": \"parameter\",\n                        \"linkLabel\": \"Authorizations\",\n                        \"subTarget\": \"auth\",\n                        \"preText\": \"Authorizations\",\n                        \"style\": \"link\"\n                    },\n                    {\n                        \"id\": \"ff1fffea-e52a-44a3-b123-437c37b873a0\",\n                        \"cellValue\": \"wb-param\",\n                        \"linkTarget\": \"parameter\",\n                        \"linkLabel\": \"Suspicious Activity\",\n                        \"subTarget\": \"susp\",\n                        \"style\": \"link\"\n                    },\n                    {\n                        \"id\": \"afd01f38-fe2d-498b-809f-b550372bb1ce\",\n                        \"cellValue\": \"wb-param\",\n                        \"linkTarget\": \"parameter\",\n                        \"linkLabel\": \"Changes in Authorizations\",\n                        \"subTarget\": \"ch\",\n                        \"style\": \"link\"\n                    }\n                ]\n            },\n            \"name\": \"links - 1\"\n        },\n        {\n            \"type\": 9,\n            \"content\": {\n                \"version\": \"KqlParameterItem/1.0\",\n                \"parameters\": [\n                    {\n                        \"id\": \"670edd22-935b-4b15-8f95-5cbc1c4fed9a\",\n                        \"version\": \"KqlParameterItem/1.0\",\n                        \"name\": \"TimeSelect\",\n                        \"label\": \"Time Range\",\n                        \"type\": 4,\n                        \"isGlobal\": true,\n                        \"value\": {\n                            \"durationMs\": 7776000000\n                        },\n                        \"typeSettings\": {\n                            \"selectableValues\": [\n                                {\n                                    \"durationMs\": 300000\n                                },\n                                {\n                                    \"durationMs\": 900000\n                                },\n                                {\n                                    \"durationMs\": 1800000\n                                },\n                                {\n                                    \"durationMs\": 3600000\n                                },\n                                {\n                                    \"durationMs\": 14400000\n                                },\n                                {\n                                    \"durationMs\": 43200000\n                                },\n                                {\n                                    \"durationMs\": 86400000\n                                },\n                                {\n                                    \"durationMs\": 172800000\n                                },\n                                {\n                                    \"durationMs\": 259200000\n                                },\n                                {\n                                    \"durationMs\": 604800000\n                                },\n                                {\n                                    \"durationMs\": 1209600000\n                                },\n                                {\n                                    \"durationMs\": 2419200000\n                                },\n                                {\n                                    \"durationMs\": 2592000000\n                                },\n                                {\n                                    \"durationMs\": 5184000000\n                                },\n                                {\n                                    \"durationMs\": 7776000000\n                                }\n                            ],\n                            \"allowCustom\": true\n                        },\n                        \"timeContext\": {\n                            \"durationMs\": 86400000\n                        }\n                    },\n                    {\n                        \"id\": \"66b0cd24-062e-44db-93d0-8cc242219b45\",\n                        \"version\": \"KqlParameterItem/1.0\",\n                        \"name\": \"Systems\",\n                        \"label\": \"System\",\n                        \"type\": 2,\n                        \"isRequired\": true,\n                        \"isGlobal\": true,\n                        \"multiSelect\": true,\n                        \"quote\": \"'\",\n                        \"delimiter\": \",\",\n                        \"query\": \"ABAPAuditLog_CL | summarize  by  SystemID_s \",\n                        \"value\": [\n                            \"value::all\"\n                        ],\n                        \"typeSettings\": {\n                            \"additionalResourceOptions\": [\n                                \"value::all\"\n                            ],\n                            \"showDefault\": false\n                        },\n                        \"timeContext\": {\n                            \"durationMs\": 2592000000\n                        },\n                        \"queryType\": 0,\n                        \"resourceType\": \"microsoft.operationalinsights/workspaces\"\n                    }\n                ],\n                \"style\": \"above\",\n                \"queryType\": 0,\n                \"resourceType\": \"microsoft.operationalinsights/workspaces\"\n            },\n            \"name\": \"parameters - 4\"\n        },\n        {\n            \"type\": 1,\n            \"content\": {\n                \"json\": \"<tr><td><h2 style=\\\"font-family: 'Enriqueta', arial, serif; line-height: 1.25; margin: 0 0 10px; font-size: 24px; font-weight: bold;\\\"><B>Changes in Roles</b></h2>\\r\\n<tr><td><p style=\\\"color: #333; font-family: 'Muli', sans-serif; margin-bottom: 15px; font-size: 14px;\\\"><B>Identifies changes in sensitive roles.</b></p>\"\n            },\n            \"conditionalVisibility\": {\n                \"parameterName\": \"wb-param\",\n                \"comparison\": \"isEqualTo\",\n                \"value\": \"ch\"\n            },\n            \"name\": \"text - 7\"\n        },\n        {\n            \"type\": 1,\n            \"content\": {\n                \"json\": \"<tr><td><h2 style=\\\"font-family: 'Enriqueta', arial, serif; line-height: 1.25; margin: 0 0 10px; font-size: 24px; font-weight: bold;\\\"><b>Sensitive Privileged Users - Actions & Changes</b></h2>\\r\\n<tr><td><p style=\\\"color: #333; font-family: 'Muli', sans-serif; margin-bottom: 15px; font-size: 14px;\\\"><b>Identifies activity of sensitive privileged users or other suspicious activity.</b></p>\"\n            },\n            \"conditionalVisibility\": {\n                \"parameterName\": \"wb-param\",\n                \"comparison\": \"isEqualTo\",\n                \"value\": \"susp\"\n            },\n            \"name\": \"text - 6\"\n        },\n        {\n            \"type\": 12,\n            \"content\": {\n                \"version\": \"NotebookGroup/1.0\",\n                \"groupType\": \"editable\",\n                \"items\": [\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"let SensProfiles = _GetWatchlist('SAP - Sensitive Profiles') | summarize  by Profile;\\nlet SensRoles = _GetWatchlist('SAP - Sensitive Roles') | summarize  by Role;\\n// Maintain these if System doesn't have CR's\\nlet FixedUserMD = datatable(TimeGenerated : datetime, UserName_s : string, RoleMembership_s : string)[];\\n// Priveleged Users by sensitive role/profile based on user master data\\nlet ABAPUserMd = \\nunion isfuzzy=true table(\\\"ABAPUserMD_CL\\\"), FixedUserMD;\\nlet PrivUserdByMD = ABAPUserMd\\n| extend Roles = parse_json(RoleMembership_s)[\\\"SapRole\\\"], Profiles = parse_json(RoleMembership_s)[\\\"SapProfile\\\"]\\n| mv-expand Roles, Profiles\\n| where Roles in (SensRoles) or Profiles in (SensProfiles)\\n| summarize by User = UserName_s;\\nlet PrivUsers = _GetWatchlist('SAP - Privileged Users') | summarize by User | union PrivUserdByMD;\\nABAPAuditLog_CL\\n| where TimeGenerated {TimeSelect}\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\\n| where User_s in (PrivUsers)\\n| summarize count() by bin(TimeGenerated,1h), User_s\",\n                            \"size\": 0,\n                            \"title\": \"Events of Sensitive Privileged Users\",\n                            \"color\": \"redBright\",\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                            \"visualization\": \"timechart\",\n                            \"chartSettings\": {\n                                \"xAxis\": \"TimeGenerated\",\n                                \"showDataPoints\": true\n                            }\n                        },\n                        \"name\": \"query - 2\"\n                    },\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"let SensProfiles = _GetWatchlist('SAP - Sensitive Profiles') | summarize  by Profile;\\nlet SensRoles = _GetWatchlist('SAP - Sensitive Roles') | summarize  by Role;\\n// Maintain these if System doesn't have CR's\\nlet FixedUserMD = datatable(TimeGenerated : datetime, UserName_s : string, RoleMembership_s : string)[];\\n// Priveleged Users by sensitive role/profile based on user master data\\nlet ABAPUserMd = \\nunion isfuzzy=true table(\\\"ABAPUserMD_CL\\\"), FixedUserMD;\\nlet PrivUserdByMD = ABAPUserMd\\n| extend Roles = parse_json(RoleMembership_s)[\\\"SapRole\\\"], Profiles = parse_json(RoleMembership_s)[\\\"SapProfile\\\"]\\n| mv-expand Roles, Profiles\\n| where Roles in (SensRoles) or Profiles in (SensProfiles)\\n| summarize by User = UserName_s;\\nlet PrivUsers = _GetWatchlist('SAP - Privileged Users') | summarize by User | union PrivUserdByMD;\\nABAPAuditLog_CL\\n| where TimeGenerated {TimeSelect}\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\\n| where User_s in (PrivUsers)\\n| summarize Events = count() by Time = bin(TimeGenerated,1h), User_s\\n| make-series Events=avg(Events) on Time from ago(30d) to ago(0d) step 1h by User_s\\n| extend (Anomalies, Score, Baseline) = series_decompose_anomalies(Events, 1.5, -1, 'linefit')\\n| project-away Score\",\n                            \"size\": 0,\n                            \"title\": \"Anomalies of Sensitive Privileged Users\",\n                            \"color\": \"redBright\",\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                            \"visualization\": \"timechart\",\n                            \"chartSettings\": {\n                                \"showDataPoints\": true\n                            }\n                        },\n                        \"name\": \"query - 2 - Copy\"\n                    },\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"// Audit Log Classes - User Master Changes\\r\\nlet AuditClasses = dynamic(['AUD']);\\r\\n// Get Relevant User from WatchList\\r\\nlet PrivelegedUsers = _GetWatchlist('SAP - Privileged Users');\\r\\nlet fixedUsers = datatable(User: string)\\r\\n    // Maintain these if WatchList is not available    \\r\\n    [\\\"SAP*\\\", \\\"DDIC\\\"]\\r\\n;\\r\\nlet SensProfiles = _GetWatchlist('SAP - Sensitive Profiles') | summarize  by Profile;\\r\\nlet SensRoles = _GetWatchlist('SAP - Sensitive Roles') | summarize  by Role;\\r\\n// Maintain these if System doesn't have CR's\\r\\nlet FixedUserMD = datatable(TimeGenerated : datetime, UserName_s : string, RoleMembership_s : string)[];\\r\\n// Priveleged Users by sensitive role/profile based on user master data\\r\\nlet ABAPUserMd = \\r\\nunion isfuzzy=true table(\\\"ABAPUserMD_CL\\\"), FixedUserMD;\\r\\nlet PrivUserdByMD = ABAPUserMd\\r\\n| extend Roles = parse_json(RoleMembership_s)[\\\"SapRole\\\"], Profiles = parse_json(RoleMembership_s)[\\\"SapProfile\\\"]\\r\\n| mv-expand Roles, Profiles\\r\\n| where Roles in (SensRoles) or Profiles in (SensProfiles)\\r\\n| summarize by User = UserName_s;\\r\\nlet UnitedPrivleged = union PrivelegedUsers, fixedUsers, PrivUserdByMD\\r\\n| summarize by User;\\r\\nABAPAuditLog_CL \\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\\r\\n| where MessageID_s in (AuditClasses)\\r\\n| where User_s in (UnitedPrivleged) // The user that makes a change is a sensitive privileged user\\r\\n| summarize count() by User_s\\r\\n\",\n                            \"size\": 1,\n                            \"title\": \"Count of Users Changed by Sensitive Priviledged Users (Press to Investigate)\",\n                            \"exportFieldName\": \"User_s\",\n                            \"exportParameterName\": \"UserChange2\",\n                            \"exportDefaultValue\": \"SAP\",\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                            \"visualization\": \"tiles\",\n                            \"tileSettings\": {\n                                \"showBorder\": false,\n                                \"titleContent\": {\n                                    \"columnMatch\": \"User_s\",\n                                    \"formatter\": 1\n                                },\n                                \"leftContent\": {\n                                    \"columnMatch\": \"count_\",\n                                    \"formatter\": 12,\n                                    \"formatOptions\": {\n                                        \"palette\": \"auto\"\n                                    },\n                                    \"numberFormat\": {\n                                        \"unit\": 17,\n                                        \"options\": {\n                                            \"maximumSignificantDigits\": 3,\n                                            \"maximumFractionDigits\": 2\n                                        }\n                                    }\n                                }\n                            },\n                            \"chartSettings\": {\n                                \"seriesLabelSettings\": [\n                                    {\n                                        \"seriesName\": \"TEMP\",\n                                        \"color\": \"orange\"\n                                    },\n                                    {\n                                        \"seriesName\": \"TEMP2\",\n                                        \"color\": \"green\"\n                                    }\n                                ],\n                                \"ySettings\": {\n                                    \"max\": 20\n                                }\n                            }\n                        },\n                        \"customWidth\": \"50\",\n                        \"name\": \"query - 4\",\n                        \"styleSettings\": {\n                            \"margin\": \"0px\"\n                        }\n                    },\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"// Audit Log Classes - User Master Changes\\r\\nlet AuditClasses = dynamic(['AU7', 'BUV', 'BUW', 'AU8', 'AU9', 'AUA', 'AUB', 'AUD', 'DUH', 'BU2']);\\r\\n// Get Relevant User from WatchList\\r\\nlet PrivelegedUsers = _GetWatchlist('SAP - Privileged Users');\\r\\nlet fixedUsers = datatable(User: string)\\r\\n    // Maintain these if WatchList is not available    \\r\\n    [\\\"SAP*\\\", \\\"DDIC\\\"]\\r\\n;\\r\\nlet SensProfiles = _GetWatchlist('SAP - Sensitive Profiles') | summarize  by Profile;\\r\\nlet SensRoles = _GetWatchlist('SAP - Sensitive Roles') | summarize  by Role;\\r\\n// Maintain these if System doesn't have CR's\\r\\nlet FixedUserMD = datatable(TimeGenerated : datetime, UserName_s : string, RoleMembership_s : string)[];\\r\\n// Priveleged Users by sensitive role/profile based on user master data\\r\\nlet ABAPUserMd = \\r\\nunion isfuzzy=true table(\\\"ABAPUserMD_CL\\\"), FixedUserMD;\\r\\nlet PrivUserdByMD = ABAPUserMd\\r\\n| extend Roles = parse_json(RoleMembership_s)[\\\"SapRole\\\"], Profiles = parse_json(RoleMembership_s)[\\\"SapProfile\\\"]\\r\\n| mv-expand Roles, Profiles\\r\\n| where Roles in (SensRoles) or Profiles in (SensProfiles)\\r\\n| summarize by User = UserName_s;\\r\\nlet UnitedPrivleged = union PrivelegedUsers, fixedUsers, PrivUserdByMD\\r\\n| summarize by User;\\r\\nABAPAuditLog_CL \\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\\r\\n| where MessageID_s in (AuditClasses)\\r\\n| where Variable1_s in (UnitedPrivleged) // The user that we are making change in is a sensitive privileged user\\r\\n| summarize by Variable1_s\\r\\n\",\n                            \"size\": 1,\n                            \"title\": \"Sensitive Priviledged Users were Changed (Press to Investigate)\",\n                            \"exportFieldName\": \"Variable1_s\",\n                            \"exportParameterName\": \"ChangedUser\",\n                            \"exportDefaultValue\": \"SAP\",\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                            \"visualization\": \"tiles\",\n                            \"tileSettings\": {\n                                \"showBorder\": false,\n                                \"titleContent\": {\n                                    \"columnMatch\": \"Variable1_s\",\n                                    \"formatter\": 1\n                                },\n                                \"leftContent\": {\n                                    \"columnMatch\": \"count_\",\n                                    \"formatter\": 12,\n                                    \"formatOptions\": {\n                                        \"palette\": \"auto\"\n                                    },\n                                    \"numberFormat\": {\n                                        \"unit\": 17,\n                                        \"options\": {\n                                            \"maximumSignificantDigits\": 3,\n                                            \"maximumFractionDigits\": 2\n                                        }\n                                    }\n                                }\n                            }\n                        },\n                        \"customWidth\": \"50\",\n                        \"name\": \"query - 5\"\n                    },\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"// Audit Log Classes - User Master Changes\\r\\nlet AuditClasses = dynamic(['AUD']);\\r\\n// Get Relevant User from WatchList\\r\\nlet PrivelegedUsers = _GetWatchlist('SAP - Privileged Users');\\r\\nlet fixedUsers = datatable(User: string)\\r\\n    // Maintain these if WatchList is not available    \\r\\n    [\\\"SAP*\\\", \\\"DDIC\\\"]\\r\\n;\\r\\nlet UnitedPrivleged = union PrivelegedUsers, fixedUsers\\r\\n| summarize by User;\\r\\nABAPAuditLog_CL \\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\\r\\n| where MessageID_s in (AuditClasses)\\r\\n| lookup kind=inner ABAPChangeDocsLog_CL on User_s\\r\\n| where TypeofChange_Header_s == \\\"U\\\"\\r\\n| where User_s == '{UserChange2}'\\r\\n| project TimeGenerated ,SystemID_s, ClientID_s, UserChanged = Variable1_s,Table = TableName_s, ObjectClass_s, ChangedTableKey_s, Field = FieldName_s, ObjectID_s , OldValue = ValueOld_s, NewValue = ValueNew_s\\r\\n\",\n                            \"size\": 0,\n                            \"title\": \"Users Changed by {UserChange2}\",\n                            \"showExportToExcel\": true,\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                            \"visualization\": \"table\",\n                            \"gridSettings\": {\n                                \"formatters\": [\n                                    {\n                                        \"columnMatch\": \"UserChanged\",\n                                        \"formatter\": 18,\n                                        \"formatOptions\": {\n                                            \"thresholdsOptions\": \"icons\",\n                                            \"thresholdsGrid\": [\n                                                {\n                                                    \"operator\": \"Default\",\n                                                    \"representation\": \"warning\",\n                                                    \"text\": \"{0}{1}\"\n                                                }\n                                            ]\n                                        }\n                                    }\n                                ]\n                            },\n                            \"chartSettings\": {\n                                \"seriesLabelSettings\": [\n                                    {\n                                        \"seriesName\": \"TEMP\",\n                                        \"color\": \"orange\"\n                                    },\n                                    {\n                                        \"seriesName\": \"TEMP2\",\n                                        \"color\": \"green\"\n                                    }\n                                ],\n                                \"ySettings\": {\n                                    \"max\": 20\n                                }\n                            }\n                        },\n                        \"customWidth\": \"50\",\n                        \"conditionalVisibility\": {\n                            \"parameterName\": \"UserChange2\",\n                            \"comparison\": \"isNotEqualTo\",\n                            \"value\": \"SAP\"\n                        },\n                        \"name\": \"query - 4 - Copy\",\n                        \"styleSettings\": {\n                            \"margin\": \"10px\"\n                        }\n                    },\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"// Audit Log Classes - User Master Changes\\r\\nlet AuditClasses = dynamic(['AU7', 'BUV', 'BUW', 'AU8', 'AU9', 'AUA', 'AUB', 'AUD', 'DUH', 'BU2']);\\r\\n// Get Relevant User from WatchList\\r\\nlet PrivelegedUsers = _GetWatchlist('SAP - Privileged Users');\\r\\nlet fixedUsers = datatable(User: string)\\r\\n    // Maintain these if WatchList is not available    \\r\\n    [\\\"SAP*\\\", \\\"DDIC\\\"]\\r\\n;\\r\\nlet SensProfiles = _GetWatchlist('SAP - Sensitive Profiles') | summarize  by Profile;\\r\\nlet SensRoles = _GetWatchlist('SAP - Sensitive Roles') | summarize  by Role;\\r\\n// Maintain these if System doesn't have CR's\\r\\nlet FixedUserMD = datatable(TimeGenerated : datetime, UserName_s : string, RoleMembership_s : string)[];\\r\\n// Priveleged Users by sensitive role/profile based on user master data\\r\\nlet ABAPUserMd = \\r\\nunion isfuzzy=true table(\\\"ABAPUserMD_CL\\\"), FixedUserMD;\\r\\nlet PrivUserdByMD = ABAPUserMd\\r\\n| extend Roles = parse_json(RoleMembership_s)[\\\"SapRole\\\"], Profiles = parse_json(RoleMembership_s)[\\\"SapProfile\\\"]\\r\\n| mv-expand Roles, Profiles\\r\\n| where Roles in (SensRoles) or Profiles in (SensProfiles)\\r\\n| summarize by User = UserName_s;\\r\\nlet UnitedPrivleged = union PrivelegedUsers, fixedUsers, PrivUserdByMD\\r\\n| summarize by User;\\r\\nABAPAuditLog_CL \\r\\n| where MessageID_s in (AuditClasses)\\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\\r\\n| where Variable1_s == '{ChangedUser}'\\r\\n| lookup kind=inner ABAPChangeDocsLog_CL on User_s\\r\\n| where TypeofChange_Header_s == \\\"U\\\"\\r\\n| project TimeGenerated ,SystemID_s, ClientID_s, UserAction = User_s, Table = TableName_s, ObjectClass_s, ChangedTableKey_s, Field = FieldName_s, ObjectID_s , OldValue = ValueOld_s, NewValue = ValueNew_s\",\n                            \"size\": 0,\n                            \"title\": \"Users made a Change in Sensitive Priviledged User: {ChangedUser}\",\n                            \"exportFieldName\": \"Variable1_s\",\n                            \"exportParameterName\": \"ChangedUser\",\n                            \"showExportToExcel\": true,\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                            \"visualization\": \"table\",\n                            \"gridSettings\": {\n                                \"formatters\": [\n                                    {\n                                        \"columnMatch\": \"UserAction\",\n                                        \"formatter\": 18,\n                                        \"formatOptions\": {\n                                            \"thresholdsOptions\": \"icons\",\n                                            \"thresholdsGrid\": [\n                                                {\n                                                    \"operator\": \"Default\",\n                                                    \"representation\": \"warning\",\n                                                    \"text\": \"{0}{1}\"\n                                                }\n                                            ]\n                                        }\n                                    }\n                                ]\n                            },\n                            \"tileSettings\": {\n                                \"showBorder\": false,\n                                \"titleContent\": {\n                                    \"columnMatch\": \"Variable1_s\",\n                                    \"formatter\": 1\n                                },\n                                \"leftContent\": {\n                                    \"columnMatch\": \"count_\",\n                                    \"formatter\": 12,\n                                    \"formatOptions\": {\n                                        \"palette\": \"auto\"\n                                    },\n                                    \"numberFormat\": {\n                                        \"unit\": 17,\n                                        \"options\": {\n                                            \"maximumSignificantDigits\": 3,\n                                            \"maximumFractionDigits\": 2\n                                        }\n                                    }\n                                }\n                            }\n                        },\n                        \"customWidth\": \"50\",\n                        \"conditionalVisibility\": {\n                            \"parameterName\": \"ChangedUser\",\n                            \"comparison\": \"isNotEqualTo\",\n                            \"value\": \"SAP\"\n                        },\n                        \"name\": \"query - 5 - Copy\",\n                        \"styleSettings\": {\n                            \"margin\": \"10px\"\n                        }\n                    },\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"// Define variables\\r\\nlet MinutesThreshold = 15; // Difference by minutes between Unlock and Connect\\r\\nlet AuditUserUnlocked = dynamic(['AUA']); // Message of unlock user\\r\\nlet AuditLogIn = dynamic(['AU1', 'AU5']); // Messages of connect with user\\r\\n// Query Logic\\r\\nlet UserUnlocked = // Get users unlocked\\r\\nABAPAuditLog_CL\\r\\n| where MessageID_s in (AuditUserUnlocked)\\r\\n| project-rename UserUnlockTimeGenerated = TimeGenerated, UserUnlocked = Variable1_s;\\r\\nABAPAuditLog_CL // Get users connections\\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\\r\\n| where MessageID_s in (AuditLogIn)\\r\\n| lookup kind=inner UserUnlocked on TerminalIPv6_s, $left.User_s == $right.UserUnlocked // Lookup of user unlocked to user log in\\r\\n| where abs(datetime_diff('Minute', TimeGenerated, UserUnlockTimeGenerated)) <= MinutesThreshold // Connect after unlock\\r\\n| summarize by TimeGenerated, SystemID_s, ClientID_s, UserAction = User_s1, UserUnlocked = User_s, AccountCustomEntity = Email_s, IPCustomEntity = TerminalIPv6_s, HostCustomEntity = Host_s\",\n                            \"size\": 0,\n                            \"title\": \"Unlocking a User and Logging into to it From the Same IP\",\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                            \"visualization\": \"table\",\n                            \"gridSettings\": {\n                                \"formatters\": [\n                                    {\n                                        \"columnMatch\": \"UserAction\",\n                                        \"formatter\": 18,\n                                        \"formatOptions\": {\n                                            \"thresholdsOptions\": \"icons\",\n                                            \"thresholdsGrid\": [\n                                                {\n                                                    \"operator\": \"Default\",\n                                                    \"representation\": \"1\",\n                                                    \"text\": \"{0}{1}\"\n                                                }\n                                            ]\n                                        }\n                                    }\n                                ]\n                            }\n                        },\n                        \"name\": \"query - 5\"\n                    },\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"// Define variables\\r\\nlet ChangeAndLoginThreshold = 5; // Difference by minutes between Change in user to connect\\r\\nlet LoginAndRestThreshold = 3; // Difference by minutes between Connect and password reset\\r\\nlet AuditUserChange = dynamic(['AUD']); // Message of change in user\\r\\nlet AuditLogIn = dynamic(['AU1', 'AU5']); // Messages of connect with user\\r\\nlet AuditUserPassReset = dynamic(['BU2']); // Message of user password change\\r\\nlet PrivUsers = _GetWatchlist(\\\"SAP - Privileged Users\\\");\\r\\nlet fixedUsers = datatable(User: string)\\r\\n    // Maintain these if WatchList is not available    \\r\\n    [\\\"SAP*\\\", \\\"DDIC\\\"]\\r\\n;\\r\\nlet SensProfiles = _GetWatchlist('SAP - Sensitive Profiles') | summarize  by Profile;\\r\\nlet SensRoles = _GetWatchlist('SAP - Sensitive Roles') | summarize  by Role;\\r\\n// Maintain these if System doesn't have CR's\\r\\nlet FixedUserMD = datatable(TimeGenerated : datetime, UserName_s : string, RoleMembership_s : string)[];\\r\\n// Priveleged Users by sensitive role/profile based on user master data\\r\\nlet ABAPUserMd = \\r\\nunion isfuzzy=true table(\\\"ABAPUserMD_CL\\\"), FixedUserMD;\\r\\nlet PrivUserdByMD = ABAPUserMd\\r\\n| extend Roles = parse_json(RoleMembership_s)[\\\"SapRole\\\"], Profiles = parse_json(RoleMembership_s)[\\\"SapProfile\\\"]\\r\\n| mv-expand Roles, Profiles\\r\\n| where Roles in (SensRoles) or Profiles in (SensProfiles)\\r\\n| summarize by User = UserName_s;\\r\\nlet UnitedPrivleged = toscalar(union PrivUsers, fixedUsers, PrivUserdByMD\\r\\n| summarize Users = make_set(User));\\r\\n// Query Logic\\r\\nlet UserChange = // Get users change activity\\r\\nABAPAuditLog_CL\\r\\n| where MessageID_s in (AuditUserChange)\\r\\n| where Variable1_s in (UnitedPrivleged) // The user with the changed password is privileged user\\r\\n| project-rename UserChangeTimeGenerated = TimeGenerated, UserPassChanged = Variable1_s;\\r\\nlet UserLogIn = // Get users connections\\r\\nABAPAuditLog_CL\\r\\n| where MessageID_s in (AuditLogIn)\\r\\n| project-rename UserLogInTimeGenerated = TimeGenerated;\\r\\nABAPAuditLog_CL // Get users password reset\\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\\r\\n| where MessageID_s in (AuditUserPassReset)\\r\\n| where User_s in (UnitedPrivleged) // The user with the changed password is privileged user\\r\\n| lookup kind=inner UserLogIn on TerminalIPv6_s, User_s // Lookup of user reset to user login\\r\\n| lookup kind=inner UserChange on TerminalIPv6_s, $left.User_s == $right.UserPassChanged // Lookup of user reset to user change\\r\\n| where abs(datetime_diff('Minute', UserChangeTimeGenerated, UserLogInTimeGenerated)) <= ChangeAndLoginThreshold // Connect after a change in user\\r\\n| where abs(datetime_diff('Minute', TimeGenerated, UserLogInTimeGenerated)) <= LoginAndRestThreshold // Change password after connection\\r\\n// | summarize by TimeGenerated, SystemID_s, ClientID_s, UserAction = User_s1, PrivUserPassChanged = User_s, AccountCustomEntity = Email_s, IPCustomEntity = TerminalIPv6_s, HostCustomEntity = Host_s\\r\\n| summarize by User_s\\r\\n\",\n                            \"size\": 1,\n                            \"title\": \"Sensitive User Password was Changed and then Login into to the System (Press to Investigate)\",\n                            \"exportFieldName\": \"User_s\",\n                            \"exportParameterName\": \"User\",\n                            \"exportDefaultValue\": \"SAP\",\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                            \"visualization\": \"tiles\",\n                            \"tileSettings\": {\n                                \"showBorder\": false,\n                                \"titleContent\": {\n                                    \"columnMatch\": \"User_s\",\n                                    \"formatter\": 1\n                                },\n                                \"leftContent\": {\n                                    \"columnMatch\": \"count_\",\n                                    \"formatter\": 12,\n                                    \"formatOptions\": {\n                                        \"palette\": \"auto\"\n                                    },\n                                    \"numberFormat\": {\n                                        \"unit\": 17,\n                                        \"options\": {\n                                            \"maximumSignificantDigits\": 3,\n                                            \"maximumFractionDigits\": 2\n                                        }\n                                    }\n                                }\n                            }\n                        },\n                        \"customWidth\": \"50\",\n                        \"name\": \"query - 5\"\n                    },\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"ABAPAuditLog_CL\\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\\r\\n| where User_s == \\\"{User}\\\"\\r\\n| order by TimeGenerated desc\\r\\n| project TimeGenerated, SystemID_s, ClientID_s, MessageID_s ,MessageClass_s, MessageText_s\\r\\n| take 20\",\n                            \"size\": 1,\n                            \"title\": \"Detailed Activity of Suspicious User: {User} \",\n                            \"showExportToExcel\": true,\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\"\n                        },\n                        \"customWidth\": \"50\",\n                        \"conditionalVisibility\": {\n                            \"parameterName\": \"User\",\n                            \"comparison\": \"isNotEqualTo\",\n                            \"value\": \"SAP\"\n                        },\n                        \"name\": \"query - 6\"\n                    }\n                ]\n            },\n            \"conditionalVisibility\": {\n                \"parameterName\": \"wb-param\",\n                \"comparison\": \"isEqualTo\",\n                \"value\": \"susp\"\n            },\n            \"name\": \"group - 2\"\n        },\n        {\n            \"type\": 12,\n            \"content\": {\n                \"version\": \"NotebookGroup/1.0\",\n                \"groupType\": \"editable\",\n                \"items\": [\n                    {\n                        \"type\": 12,\n                        \"content\": {\n                            \"version\": \"NotebookGroup/1.0\",\n                            \"groupType\": \"editable\",\n                            \"items\": [\n                                {\n                                    \"type\": 1,\n                                    \"content\": {\n                                        \"json\": \"<tr><td><B><h2 style=\\\"font-family: 'Enriqueta', arial, serif; line-height: 1.25; margin: 0 0 10px; font-size: 24px; font-weight: bold;\\\">Sensitive Assignments</b></h2>\\r\\n<tr><td><B><p style=\\\"color: #333; font-family: 'Muli', sans-serif; margin-bottom: 15px; font-size: 14px;\\\">Identifies new assignments for a sensitive role or profile to a user.</b><p>\"\n                                    },\n                                    \"conditionalVisibility\": {\n                                        \"parameterName\": \"wb-param\",\n                                        \"comparison\": \"isEqualTo\",\n                                        \"value\": \"auth\"\n                                    },\n                                    \"name\": \"text - 3\"\n                                },\n                                {\n                                    \"type\": 3,\n                                    \"content\": {\n                                        \"version\": \"KqlItem/1.0\",\n                                        \"query\": \"// Define Variables\\r\\nlet Roles = 'PFCG';\\r\\nlet UsersRoles = 'AGR_USERS';\\r\\nlet Insert = \\\"I\\\";\\r\\nlet logsThreshold = 10; // 10 seconds\\r\\n// Audit Log Classes - Authorizations for user changed\\r\\nlet AuditClasses = dynamic(['AUB', 'AUD']); // Authorizations for user &A changed.\\r\\n// Maintain these if WatchList is not available\\r\\nlet SensitiveRoles =  _GetWatchlist('SAP - Sensitive Roles');\\r\\nlet fixedRoles = datatable(Role: string)['SAP_BC_BASIS_ADMIN', 'SAP_BC_AUTH_PROFILE_ADMIN'];\\r\\n// Maintain these if System doesn't have CR's\\r\\nlet fixedChangeDocs = datatable(User_s : string, ObjectClass_s : string, TableName_s : string, TypeofChange_Item_s : string ,\\r\\nChangedTableKey_s : string, ObjectID_s : string, TimeGenerated : datetime, ValueNew_s : string, SystemID_s : string)[];\\r\\nlet ChangeDocs = \\r\\nunion isfuzzy=true table(\\\"ABAPChangeDocsLog_CL\\\"), fixedChangeDocs;\\r\\nlet ChangeCheck =\\r\\nChangeDocs  \\r\\n| where ObjectClass_s == Roles // Roles\\r\\n    and TableName_s == UsersRoles // Users Roles\\r\\n    and TypeofChange_Item_s == Insert // Insert \\r\\n| extend UserAssigned = extract(@\\\"^.{1,33}\\\\s*?(.{1,12})\\\\s*?\\\\d{16}\\\", 1, ChangedTableKey_s)\\r\\n| extend Role = ObjectID_s;\\r\\nlet UnitedRoles =\\r\\ntoscalar(union fixedRoles, SensitiveRoles\\r\\n| summarize Roles = make_list(Role));\\r\\n// Query logic\\r\\nABAPAuditLog_CL \\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\\r\\n| where MessageID_s in (AuditClasses)\\r\\n| summarize by TimeGenerated, TerminalIPv6_s, User_s, Host_s, Email_s\\r\\n| lookup kind = leftouter (ChangeCheck) on User_s\\r\\n| where Role in (UnitedRoles)\\r\\n| project-rename TimeGenAudit = TimeGenerated1\\r\\n| where abs(datetime_diff('second', TimeGenerated, TimeGenAudit)) <= logsThreshold\\r\\nor isnull(TimeGenAudit)\\r\\n| project \\r\\n    // Details\\r\\n    TimeGenerated, SystemID_s, ClientID_s, Role, User_s, UserAssigned\",\n                                        \"size\": 1,\n                                        \"title\": \"Sensitive Role Assignments (Press to Investigate)\",\n                                        \"exportFieldName\": \"User_s\",\n                                        \"exportParameterName\": \"User_r\",\n                                        \"exportDefaultValue\": \"SAP\",\n                                        \"showExportToExcel\": true,\n                                        \"queryType\": 0,\n                                        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                                        \"visualization\": \"table\",\n                                        \"gridSettings\": {\n                                            \"formatters\": [\n                                                {\n                                                    \"columnMatch\": \"Role\",\n                                                    \"formatter\": 18,\n                                                    \"formatOptions\": {\n                                                        \"thresholdsOptions\": \"icons\",\n                                                        \"thresholdsGrid\": [\n                                                            {\n                                                                \"operator\": \"Default\",\n                                                                \"representation\": \"warning\",\n                                                                \"text\": \"{0}{1}\"\n                                                            }\n                                                        ]\n                                                    }\n                                                }\n                                            ]\n                                        }\n                                    },\n                                    \"name\": \"query - 2\"\n                                },\n                                {\n                                    \"type\": 3,\n                                    \"content\": {\n                                        \"version\": \"KqlItem/1.0\",\n                                        \"query\": \"// Define Variables\\r\\nlet Roles = 'PFCG';\\r\\nlet UsersRoles = 'AGR_USERS';\\r\\nlet Insert = \\\"I\\\";\\r\\nlet logsThreshold = 10; // 10 seconds\\r\\n// Audit Log Classes - Authorizations for user changed\\r\\nlet AuditClasses = dynamic(['AUB', 'AUD']); // Authorizations for user &A changed.\\r\\n// Maintain these if WatchList is not available\\r\\nlet SensitiveRoles =  _GetWatchlist('SAP - Sensitive Roles');\\r\\nlet fixedRoles = datatable(Role: string)['SAP_BC_BASIS_ADMIN', 'SAP_BC_AUTH_PROFILE_ADMIN'];\\r\\n// Maintain these if System doesn't have CR's\\r\\nlet fixedChangeDocs = datatable(User_s : string, ObjectClass_s : string, TableName_s : string, TypeofChange_Item_s : string ,\\r\\nChangedTableKey_s : string, ObjectID_s : string, TimeGenerated : datetime, ValueNew_s : string, SystemID_s : string)[];\\r\\nlet ChangeDocs = \\r\\nunion isfuzzy=true table(\\\"ABAPChangeDocsLog_CL\\\"), fixedChangeDocs;\\r\\nlet ChangeCheck =\\r\\nChangeDocs  \\r\\n| where ObjectClass_s == Roles // Roles\\r\\n    and TableName_s == UsersRoles // Users Roles\\r\\n    and TypeofChange_Item_s == Insert // Insert \\r\\n| extend UserAssigned = extract(@\\\"^.{1,33}\\\\s*?(.{1,12})\\\\s*?\\\\d{16}\\\", 1, ChangedTableKey_s)\\r\\n| extend Role = ObjectID_s;\\r\\nlet UnitedRoles =\\r\\ntoscalar(union fixedRoles, SensitiveRoles\\r\\n| summarize Roles = make_list(Role));\\r\\n// Query logic\\r\\nABAPAuditLog_CL \\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\\r\\n| where MessageID_s in (AuditClasses)\\r\\n| summarize by TimeGenerated, TerminalIPv6_s, User_s, Host_s, Email_s\\r\\n| lookup kind = leftouter (ChangeCheck) on User_s\\r\\n| where Role in (UnitedRoles)\\r\\n| project-rename TimeGenAudit = TimeGenerated1\\r\\n| where abs(datetime_diff('second', TimeGenerated, TimeGenAudit)) <= logsThreshold\\r\\nor isnull(TimeGenAudit)\\r\\n| summarize count() by Role\",\n                                        \"size\": 1,\n                                        \"title\": \"Sensitive Roles Distribution\",\n                                        \"queryType\": 0,\n                                        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                                        \"visualization\": \"piechart\"\n                                    },\n                                    \"customWidth\": \"50\",\n                                    \"name\": \"query - 4\"\n                                },\n                                {\n                                    \"type\": 3,\n                                    \"content\": {\n                                        \"version\": \"KqlItem/1.0\",\n                                        \"query\": \"ABAPAuditLog_CL \\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\\r\\n| where User_s=='{User_r}'\\r\\n| order by TimeGenerated desc\\r\\n| project TimeGenerated, SystemID_s, ClientID_s, MessageID_s ,MessageClass_s, MessageText_s\\r\\n| take 20\",\n                                        \"size\": 1,\n                                        \"title\": \"Detailed Activity of Suspicious User: {User_r}\",\n                                        \"showExportToExcel\": true,\n                                        \"queryType\": 0,\n                                        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                                        \"visualization\": \"table\"\n                                    },\n                                    \"customWidth\": \"50\",\n                                    \"conditionalVisibility\": {\n                                        \"parameterName\": \"User_r\",\n                                        \"comparison\": \"isNotEqualTo\",\n                                        \"value\": \"SAP\"\n                                    },\n                                    \"name\": \"query - 3\"\n                                },\n                                {\n                                    \"type\": 3,\n                                    \"content\": {\n                                        \"version\": \"KqlItem/1.0\",\n                                        \"query\": \"// Define Variables\\r\\n// Audit Log Classes - Authorizations for user changed\\r\\nlet Identity = 'IDENTITY';\\r\\nlet ProfileChangeDoc = 'SUSR_UST04';\\r\\nlet Insert = \\\"I\\\";\\r\\nlet logsThreshold = 10; // 10 seconds\\r\\nlet AuditClasses = dynamic(['AUB']); // Authorizations for user &A changed.\\r\\n// Maintain these if WatchList is not available\\r\\nlet SensitiveProfiles =  _GetWatchlist('SAP - Sensitive Profiles');\\r\\nlet fixedProfile = datatable(Profile:string)['SAP_ALL','SAP_NEW'];\\r\\n// Maintain these if System doesn't have CR's\\r\\nlet fixedChangeDocs = datatable(User_s : string, ObjectClass_s : string, TableName_s : string, TypeofChange_Item_s : string , ChangedTableKey_s : string, ObjectID_s : string, TimeGenerated : datetime, ValueNew_s : string, SystemID_s : string)[];\\r\\nlet ChangeDocs = \\r\\nunion isfuzzy=true table(\\\"ABAPChangeDocsLog_CL\\\"), fixedChangeDocs;\\r\\nlet IdentityChangeDocuments =\\r\\n// Identity Change documents which represents profiles assignment\\r\\n    ChangeDocs  \\r\\n    | where ObjectClass_s == Identity // Identity\\r\\n    and TableName_s == ProfileChangeDoc // Profile Change Doc\\r\\n    and TypeofChange_Item_s == Insert // Insert \\r\\n    | extend Profile = ChangedTableKey_s\\r\\n    | extend UserAssigned = ObjectID_s;\\r\\nlet UnitedProfiles =\\r\\ntoscalar(union fixedProfile, SensitiveProfiles\\r\\n| summarize Profiles = make_list(Profile));\\r\\n// Query logic\\r\\nABAPAuditLog_CL \\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\\r\\n| where MessageID_s in (AuditClasses)\\r\\n| summarize by TimeGenerated, TerminalIPv6_s, User_s, Host_s, Email_s\\r\\n| lookup kind = leftouter (IdentityChangeDocuments) on User_s\\r\\n| where Profile in (UnitedProfiles)\\r\\n| project-rename  TimeGenAudit = TimeGenerated1    \\r\\n| where abs(datetime_diff('second',TimeGenerated,TimeGenAudit)) <= logsThreshold\\r\\nor isnull(TimeGenAudit)\\r\\n| project \\r\\n// Details\\r\\nTimeGenerated, SystemID_s, ClientID_s, Profile, User_s, UserAssigned\",\n                                        \"size\": 1,\n                                        \"title\": \"Sensitive Profile Assignments (Press to Investigate)\",\n                                        \"exportFieldName\": \"User_s\",\n                                        \"exportParameterName\": \"User_p\",\n                                        \"exportDefaultValue\": \"SAP\",\n                                        \"showExportToExcel\": true,\n                                        \"queryType\": 0,\n                                        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                                        \"visualization\": \"table\",\n                                        \"gridSettings\": {\n                                            \"formatters\": [\n                                                {\n                                                    \"columnMatch\": \"Profile\",\n                                                    \"formatter\": 18,\n                                                    \"formatOptions\": {\n                                                        \"thresholdsOptions\": \"icons\",\n                                                        \"thresholdsGrid\": [\n                                                            {\n                                                                \"operator\": \"Default\",\n                                                                \"representation\": \"warning\",\n                                                                \"text\": \"{0}{1}\"\n                                                            }\n                                                        ]\n                                                    }\n                                                }\n                                            ]\n                                        }\n                                    },\n                                    \"name\": \"query - 4\"\n                                },\n                                {\n                                    \"type\": 3,\n                                    \"content\": {\n                                        \"version\": \"KqlItem/1.0\",\n                                        \"query\": \"// Define Variables\\r\\n// Audit Log Classes - Authorizations for user changed\\r\\nlet Identity = 'IDENTITY';\\r\\nlet ProfileChangeDoc = 'SUSR_UST04';\\r\\nlet Insert = \\\"I\\\";\\r\\nlet logsThreshold = 10; // 10 seconds\\r\\nlet AuditClasses = dynamic(['AUB']); // Authorizations for user &A changed.\\r\\n// Maintain these if WatchList is not available\\r\\nlet SensitiveProfiles =  _GetWatchlist('SAP - Sensitive Profiles');\\r\\nlet fixedProfile = datatable(Profile:string)['SAP_ALL','SAP_NEW'];\\r\\n// Maintain these if System doesn't have CR's\\r\\nlet fixedChangeDocs = datatable(User_s : string, ObjectClass_s : string, TableName_s : string, TypeofChange_Item_s : string , ChangedTableKey_s : string, ObjectID_s : string, TimeGenerated : datetime, ValueNew_s : string, SystemID_s : string)[];\\r\\nlet ChangeDocs = \\r\\nunion isfuzzy=true table(\\\"ABAPChangeDocsLog_CL\\\"), fixedChangeDocs;\\r\\nlet IdentityChangeDocuments =\\r\\n// Identity Change documents which represents profiles assignment\\r\\n    ChangeDocs  \\r\\n    | where ObjectClass_s == Identity // Identity\\r\\n    and TableName_s == ProfileChangeDoc // Profile Change Doc\\r\\n    and TypeofChange_Item_s == Insert // Insert \\r\\n    | extend Profile = ChangedTableKey_s\\r\\n    | extend UserAssigned = ObjectID_s;\\r\\nlet UnitedProfiles =\\r\\ntoscalar(union fixedProfile, SensitiveProfiles\\r\\n| summarize Profiles = make_list(Profile));\\r\\n// Query logic\\r\\nABAPAuditLog_CL \\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\\r\\n| where MessageID_s in (AuditClasses)\\r\\n| summarize by TimeGenerated, TerminalIPv6_s, User_s, Host_s, Email_s\\r\\n| lookup kind = leftouter (IdentityChangeDocuments) on User_s\\r\\n| where Profile in (UnitedProfiles)\\r\\n| project-rename  TimeGenAudit = TimeGenerated1    \\r\\n| where abs(datetime_diff('second',TimeGenerated,TimeGenAudit)) <= logsThreshold\\r\\nor isnull(TimeGenAudit)\\r\\n| summarize count() by Profile\",\n                                        \"size\": 1,\n                                        \"title\": \"Sensitive Profiles Distribution\",\n                                        \"queryType\": 0,\n                                        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                                        \"visualization\": \"piechart\"\n                                    },\n                                    \"customWidth\": \"50\",\n                                    \"name\": \"query - 5\"\n                                },\n                                {\n                                    \"type\": 3,\n                                    \"content\": {\n                                        \"version\": \"KqlItem/1.0\",\n                                        \"query\": \"ABAPAuditLog_CL \\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\\r\\n| where User_s=='{User_p}'\\r\\n| order by TimeGenerated desc\\r\\n| project TimeGenerated, SystemID_s, ClientID_s, MessageID_s ,MessageClass_s, MessageText_s\\r\\n| take 20\",\n                                        \"size\": 1,\n                                        \"title\": \"Detailed Activity of Suspicious User: {User_p}\",\n                                        \"showExportToExcel\": true,\n                                        \"queryType\": 0,\n                                        \"resourceType\": \"microsoft.operationalinsights/workspaces\"\n                                    },\n                                    \"customWidth\": \"50\",\n                                    \"conditionalVisibility\": {\n                                        \"parameterName\": \"User_p\",\n                                        \"comparison\": \"isNotEqualTo\",\n                                        \"value\": \"SAP\"\n                                    },\n                                    \"name\": \"query - 6\"\n                                }\n                            ]\n                        },\n                        \"name\": \"group - 7\"\n                    },\n                    {\n                        \"type\": 1,\n                        \"content\": {\n                            \"json\": \"<tr><td><h2 style=\\\"font-family: 'Enriqueta', arial, serif; line-height: 1.25; margin: 0 0 10px; font-size: 24px; font-weight: bold;\\\"><B>Critical Authorizations</b></h2>\\r\\n<tr><td><p style=\\\"color: #333; font-family: 'Muli', sans-serif; margin-bottom: 15px; font-size: 14px;\\\"><B>Identifies assignment of a critical authorization object value to a new user.</b></p>\"\n                        },\n                        \"conditionalVisibility\": {\n                            \"parameterName\": \"wb-param\",\n                            \"comparison\": \"isEqualTo\",\n                            \"value\": \"auth\"\n                        },\n                        \"name\": \"text - 3\"\n                    },\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"// New Assigned Users\\r\\nlet ObjectClassRoles = 'PFCG';\\r\\nlet TableName = 'CD1251';\\r\\nlet UsersRoles = 'AGR_USERS';\\r\\nlet Insert = \\\"I\\\";\\r\\nlet NotInUse = 'NOT_IN_USE';\\r\\nlet logsThreshold = 3; // 3 seconds\\r\\n// Audit Log Classes - Authorizations for user changed\\r\\nlet AuditClasses = dynamic(['AUB','AUD']); // Authorizations for user &A changed. User Master Record Changed\\r\\n// Roles Change Documents - Extract Auth Object and Obj Field\\r\\n// Maintain these if System doesn't have CR's\\r\\nlet fixedChangeDocs = datatable(User_s : string, ObjectClass_s : string, TableName_s : string, TypeofChange_Item_s : string , ChangedTableKey_s : string, ObjectID_s : string, TimeGenerated : datetime, ValueNew_s : string, SystemID_s : string)[];\\r\\nlet ChangeDocs = \\r\\nunion isfuzzy=true table(\\\"ABAPChangeDocsLog_CL\\\"), fixedChangeDocs;\\r\\nlet RolesAuthObject = ChangeDocs  \\r\\n    | where TimeGenerated {TimeSelect}\\r\\n    | where ObjectClass_s == ObjectClassRoles and TableName_s == TableName // Role-Obj-Profile-ObjField\\r\\n    | where TypeofChange_Item_s in ('J', 'I', 'U') //  Insert\\r\\n    | extend RoleObjProfileObjFieldVer = ChangedTableKey_s, Role = ObjectID_s\\r\\n    | extend ObjFieldValue = ValueNew_s    \\r\\n    | extend ObjField = trim(@\\\"\\\\s*?\\\", extract(@\\\"(^.{1,30})\\\\s*?(.{1,10})\\\\s*?(.{1,12})\\\\s*?(.{1,10})\\\\s*?\\\\d{6}\\\", 4, RoleObjProfileObjFieldVer, typeof(string)))\\r\\n    | extend AuthObject = trim(@\\\"\\\\s*?\\\", extract(@\\\"(^.{1,30})\\\\s*?(.{1,10})\\\\s*?(.{1,12})\\\\s*?(.{1,10})\\\\s*?\\\\d{6}\\\", 2, RoleObjProfileObjFieldVer, typeof(string)))\\r\\n    | summarize by SystemID_s, Role, AuthObject, ObjField, ObjFieldValue;\\r\\nlet ComplexAuth = _GetWatchlist('SAP - Critical Authorizations');\\r\\nlet SimpleAuth = _GetWatchlist('SAP - Critical Authorizations');\\r\\nlet fixedComplexAuth = datatable(AuthorizationObject: string, AuthorizationField: string, AuthorizationValue: string, ActivityField: string, Activity: string)\\r\\n    ['S_DEVELOP', 'OBJTYPE', 'DEBUG', 'ACTVT', '*',\\r\\n    'S_DEVELOP', 'OBJTYPE', 'DEBUG', 'ACTVT', '02']; // Maintain these if WatchList is not available\\r\\nlet fixedSimpleAuth = datatable(AuthorizationObject: string, AuthorizationField: string, AuthorizationValue: string, ActivityField: string, Activity: string)\\r\\n    ['S_TCODE', 'TCD', '*', 'NOT_IN_USE', '',\\r\\n    'S_TZONE', 'ACTVT', '*', 'NOT_IN_USE', '']; // Maintain these if WatchList is not available\\r\\nlet usersinRole = \\r\\n    ChangeDocs  \\r\\n    | where TimeGenerated {TimeSelect}\\r\\n    | where ObjectClass_s == ObjectClassRoles // Roles\\r\\n        and TableName_s == UsersRoles // Users Roles\\r\\n        and TypeofChange_Item_s == Insert // Insert \\r\\n    | extend UserAssigned = extract(@\\\"^.{1,33}\\\\s*?(.{1,12})\\\\s*?\\\\d{16}\\\", 1, ChangedTableKey_s)\\r\\n    | extend Role = ObjectID_s\\r\\n    | extend TimeGenUserinRole = TimeGenerated;\\r\\n    //| summarize by TimeGenerated, SystemID_s, ClientID_s, Role, UserAssigned, User_s\\r\\nlet RolesAuthObjectCheck =     \\r\\n        RolesAuthObject     \\r\\n        | extend ObjFieldVal = ObjFieldValue\\r\\n        | lookup kind = leftouter \\r\\n            (RolesAuthObject \\r\\n            | extend ActivityVal = ObjFieldValue)\\r\\n            on Role, AuthObject;\\r\\nlet complexScenario = \\r\\n    union ComplexAuth, fixedComplexAuth\\r\\n    | where ActivityField != NotInUse\\r\\n    | summarize by AuthorizationObject, AuthorizationField, AuthorizationValue, ActivityField, Activity\\r\\n    | lookup kind = inner (RolesAuthObjectCheck)\\r\\n        on $left.AuthorizationObject == $right.AuthObject \\r\\n        and $left.AuthorizationField == $right.ObjField \\r\\n        and $left.AuthorizationValue == $right.ObjFieldValue\\r\\n        and $left.ActivityField == $right.ObjField1\\r\\n        and $left.Activity == $right.ActivityVal;\\r\\nlet simpleScenario = \\r\\n    union SimpleAuth, fixedSimpleAuth\\r\\n    | where ActivityField == NotInUse\\r\\n    | summarize by AuthorizationObject, AuthorizationField, AuthorizationValue, ActivityField, Activity \\r\\n    | lookup kind = inner (RolesAuthObject)\\r\\n        on $left.AuthorizationObject == $right.AuthObject \\r\\n        and $left.AuthorizationField == $right.ObjField \\r\\n        and $left.AuthorizationValue == $right.ObjFieldValue;\\r\\nlet GetEntites =     \\r\\n    ABAPAuditLog_CL \\r\\n    | where TimeGenerated {TimeSelect}\\r\\n    | where MessageID_s in (AuditClasses)\\r\\n    | summarize by TimeGenerated, TerminalIPv6_s, ClientID_s, User_s, Host_s, Email_s\\r\\n    | extend TimeGenAudit = TimeGenerated;  \\r\\nunion complexScenario, simpleScenario\\r\\n| lookup kind = inner (usersinRole) on SystemID_s, Role\\r\\n| lookup kind = leftouter (GetEntites) on User_s\\r\\n| where TimeGenAudit {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\\r\\n| where abs(datetime_diff('second', TimeGenUserinRole, TimeGenAudit)) <= logsThreshold or\\r\\nisnull(TimeGenAudit)\\r\\n| project \\r\\n    // Details\\r\\nTimeGenerated = TimeGenUserinRole, SystemID_s, ClientID_s, User_s, UserAssigned, Role, AuthorizationObject, AuthorizationField, AuthorizationValue, ActivityField, Activity\",\n                            \"size\": 1,\n                            \"title\": \"New User Assignment\",\n                            \"showExportToExcel\": true,\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                            \"visualization\": \"table\",\n                            \"gridSettings\": {\n                                \"formatters\": [\n                                    {\n                                        \"columnMatch\": \"AuthorizationObject\",\n                                        \"formatter\": 18,\n                                        \"formatOptions\": {\n                                            \"thresholdsOptions\": \"colors\",\n                                            \"thresholdsGrid\": [\n                                                {\n                                                    \"operator\": \"Default\",\n                                                    \"representation\": \"orange\",\n                                                    \"text\": \"{0}{1}\"\n                                                }\n                                            ]\n                                        }\n                                    }\n                                ]\n                            }\n                        },\n                        \"name\": \"query - 5\"\n                    }\n                ]\n            },\n            \"conditionalVisibility\": {\n                \"parameterName\": \"wb-param\",\n                \"comparison\": \"isEqualTo\",\n                \"value\": \"auth\"\n            },\n            \"name\": \"group - 6\"\n        },\n        {\n            \"type\": 12,\n            \"content\": {\n                \"version\": \"NotebookGroup/1.0\",\n                \"groupType\": \"editable\",\n                \"items\": [\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"// Define variables\\r\\nlet RoleObjectClass = \\\"PFCG\\\";\\r\\nlet ChangeType = \\\"U\\\";\\r\\nlet AuditLogIn = dynamic(['AU1', 'AU5']); // Messages of connect with user\\r\\nlet SensitiveRoles = _GetWatchlist(\\\"SAP - Sensitive Roles\\\");\\r\\n// Maintain if watchlist is not available\\r\\nlet fixedRoles = datatable(Role: string)['SAP_BC_BASIS_ADMIN', 'SAP_BC_AUTH_PROFILE_ADMIN'];\\r\\nlet UnitedRoles =\\r\\ntoscalar(union fixedRoles, SensitiveRoles\\r\\n| summarize Roles = make_list(Role));\\r\\n// Query logic\\r\\nlet LastLogin = \\r\\nABAPAuditLog_CL\\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\\r\\n| where MessageID_s in (AuditLogIn)\\r\\n| summarize TimeGenerated = arg_max(TimeGenerated, *) by SystemID_s, ClientID_s, User_s; // Get last connection date for user\\r\\nABAPChangeDocsLog_CL\\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\\r\\n| where ObjectClass_s == RoleObjectClass // Relevant role object class\\r\\n// | where ObjectID_s in (UnitedRoles) // Role is sensitive\\r\\n| where TypeofChange_Item_s == ChangeType\\r\\n| extend AuthorizationObj = extract(@\\\"\\\\S+\\\\s+(\\\\S+)\\\\s+\\\", 1, ChangedTableKey_s, typeof(string)) // Extract Authorization Object\\r\\n| extend Authorization = extract(@\\\"\\\\S+\\\\s+\\\\S+\\\\s+(\\\\S+\\\\d+)\\\", 1, ChangedTableKey_s, typeof(string)) // Extract Authorization\\r\\n| lookup kind=inner LastLogin on User_s // Get IP\\r\\n| project TimeGenerated, SystemID_s, ClientID_s, Role = ObjectID_s, AccountCustomEntity = Email_s, IPCustomEntity = TerminalIPv6_s, HostCustomEntity = Host_s, FieldName_s , AuthorizationObj, Authorization, OldValue = ValueOld_s, NewValue = ValueNew_s\",\n                            \"size\": 1,\n                            \"title\": \"Roles Changes\",\n                            \"showExportToExcel\": true,\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                            \"visualization\": \"table\",\n                            \"gridSettings\": {\n                                \"formatters\": [\n                                    {\n                                        \"columnMatch\": \"Role\",\n                                        \"formatter\": 18,\n                                        \"formatOptions\": {\n                                            \"thresholdsOptions\": \"icons\",\n                                            \"thresholdsGrid\": [\n                                                {\n                                                    \"operator\": \"Default\",\n                                                    \"representation\": \"Blank\",\n                                                    \"text\": \"{0}{1}\"\n                                                }\n                                            ]\n                                        }\n                                    }\n                                ]\n                            }\n                        },\n                        \"customWidth\": \"50\",\n                        \"name\": \"query - 3\"\n                    },\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"// Define variables\\r\\nlet RoleObjectClass = \\\"PFCG\\\";\\r\\nlet ChangeType = \\\"U\\\";\\r\\nlet AuditLogIn = dynamic(['AU1', 'AU5']); // Messages of connect with user\\r\\nlet SensitiveRoles = _GetWatchlist(\\\"SAP - Sensitive Roles\\\");\\r\\n// Maintain if watchlist is not available\\r\\nlet fixedRoles = datatable(Role: string)['SAP_BC_BASIS_ADMIN', 'SAP_BC_AUTH_PROFILE_ADMIN'];\\r\\nlet UnitedRoles =\\r\\ntoscalar(union fixedRoles, SensitiveRoles\\r\\n| summarize Roles = make_list(Role));\\r\\n// Query logic\\r\\nlet LastLogin = \\r\\nABAPAuditLog_CL\\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\\r\\n| where MessageID_s in (AuditLogIn)\\r\\n| summarize TimeGenerated = arg_max(TimeGenerated, *) by SystemID_s, ClientID_s, User_s; // Get last connection date for user\\r\\nABAPChangeDocsLog_CL\\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\\r\\n| where ObjectClass_s == RoleObjectClass // Relevant role object class\\r\\n// | where ObjectID_s in (UnitedRoles) // Role is sensitive\\r\\n| where TypeofChange_Item_s == ChangeType\\r\\n| lookup kind=inner LastLogin on User_s // Get IP\\r\\n| summarize count() by ObjectID_s\",\n                            \"size\": 1,\n                            \"title\": \"Role Change Distribution\",\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                            \"visualization\": \"piechart\"\n                        },\n                        \"customWidth\": \"50\",\n                        \"name\": \"query - 2\"\n                    },\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"// Define variables\\r\\nlet RoleObjectClass = \\\"PFCG\\\";\\r\\nlet ChangeType = \\\"U\\\";\\r\\nlet AuditLogIn = dynamic(['AU1', 'AU5']); // Messages of connect with user\\r\\nlet SensitiveRoles = _GetWatchlist(\\\"SAP - Sensitive Roles\\\");\\r\\n// Maintain if watchlist is not available\\r\\nlet fixedRoles = datatable(Role: string)['SAP_BC_BASIS_ADMIN', 'SAP_BC_AUTH_PROFILE_ADMIN'];\\r\\nlet UnitedRoles =\\r\\ntoscalar(union fixedRoles, SensitiveRoles\\r\\n| summarize Roles = make_list(Role));\\r\\n// Query logic\\r\\nlet LastLogin = \\r\\nABAPAuditLog_CL\\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\\r\\n| where MessageID_s in (AuditLogIn)\\r\\n| summarize TimeGenerated = arg_max(TimeGenerated, *) by SystemID_s, ClientID_s, User_s; // Get last connection date for user\\r\\nABAPChangeDocsLog_CL\\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\\r\\n| where ObjectClass_s == RoleObjectClass // Relevant role object class\\r\\n// | where ObjectID_s in (UnitedRoles) // Role is sensitive\\r\\n| where TypeofChange_Item_s == ChangeType\\r\\n| extend AuthorizationObj = extract(@\\\"\\\\S+\\\\s+(\\\\S+)\\\\s+\\\", 1, ChangedTableKey_s, typeof(string)) // Extract Authorization Object\\r\\n| extend Authorization = extract(@\\\"\\\\S+\\\\s+\\\\S+\\\\s+(\\\\S+\\\\d+)\\\", 1, ChangedTableKey_s, typeof(string)) // Extract Authorization\\r\\n| lookup kind=inner LastLogin on User_s // Get IP\\r\\n| project TimeGenerated, SystemID_s, ClientID_s, AccountCustomEntity = Email_s, IPCustomEntity = TerminalIPv6_s, HostCustomEntity = Host_s, Role = ObjectID_s, FieldName_s , AuthorizationObj, Authorization, OldValue = ValueOld_s, NewValue = ValueNew_s\\r\\n| summarize count() by bin(TimeGenerated, 24h)\\r\\n| project-rename Changes = count_\",\n                            \"size\": 0,\n                            \"title\": \"Changes in Authorizations By Time\",\n                            \"color\": \"purpleDark\",\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                            \"visualization\": \"areachart\",\n                            \"chartSettings\": {\n                                \"ySettings\": {\n                                    \"max\": 10\n                                }\n                            }\n                        },\n                        \"name\": \"query - 4\"\n                    },\n                    {\n                        \"type\": 3,\n                        \"content\": {\n                            \"version\": \"KqlItem/1.0\",\n                            \"query\": \"// Define variables\\r\\nlet RoleObjectClass = \\\"PFCG\\\";\\r\\nlet ChangeType = \\\"U\\\";\\r\\nlet AuditLogIn = dynamic(['AU1', 'AU5']); // Messages of connect with user\\r\\nlet SensitiveRoles = _GetWatchlist(\\\"SAP - Sensitive Roles\\\");\\r\\n// Maintain if watchlist is not available\\r\\nlet fixedRoles = datatable(Role: string)['SAP_BC_BASIS_ADMIN', 'SAP_BC_AUTH_PROFILE_ADMIN'];\\r\\nlet UnitedRoles =\\r\\ntoscalar(union fixedRoles, SensitiveRoles\\r\\n| summarize Roles = make_list(Role));\\r\\n// Query logic\\r\\nlet LastLogin = \\r\\nABAPAuditLog_CL\\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\\r\\n| where MessageID_s in (AuditLogIn)\\r\\n| summarize TimeGenerated = arg_max(TimeGenerated, *) by SystemID_s, ClientID_s, User_s; // Get last connection date for user\\r\\nABAPChangeDocsLog_CL\\r\\n| where TimeGenerated {TimeSelect}\\r\\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\\r\\n| where ObjectClass_s == RoleObjectClass // Relevant role object class\\r\\n// | where ObjectID_s in (UnitedRoles) // Role is sensitive\\r\\n| where TypeofChange_Item_s == ChangeType\\r\\n| extend AuthorizationObj = extract(@\\\"\\\\S+\\\\s+(\\\\S+)\\\\s+\\\", 1, ChangedTableKey_s, typeof(string)) // Extract Authorization Object\\r\\n| extend Authorization = extract(@\\\"\\\\S+\\\\s+\\\\S+\\\\s+(\\\\S+\\\\d+)\\\", 1, ChangedTableKey_s, typeof(string)) // Extract Authorization\\r\\n| lookup kind=inner LastLogin on User_s // Get IP\\r\\n| project TimeGenerated, SystemID_s, ClientID_s, AccountCustomEntity = Email_s, IPCustomEntity = TerminalIPv6_s, HostCustomEntity = Host_s, Role = ObjectID_s, FieldName_s , AuthorizationObj, Authorization, OldValue = ValueOld_s, NewValue = ValueNew_s\\r\\n| summarize count() by bin(TimeGenerated, 24h)\\r\\n| project-rename Changes = count_\\r\\n| make-series Changes=avg(Changes) on TimeGenerated from ago(30d) to ago(0d) step 1h\\r\\n| extend (Anomalies, Score, Baseline) = series_decompose_anomalies(Changes, 1.5, -1, 'linefit') \\r\\n| project-away Score\",\n                            \"size\": 0,\n                            \"title\": \"Changes in Authorizations Anomalies\",\n                            \"color\": \"purpleDark\",\n                            \"queryType\": 0,\n                            \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n                            \"visualization\": \"timechart\",\n                            \"chartSettings\": {\n                                \"ySettings\": {\n                                    \"max\": 10\n                                }\n                            }\n                        },\n                        \"name\": \"query - 4 - Copy\"\n                    }\n                ]\n            },\n            \"conditionalVisibility\": {\n                \"parameterName\": \"wb-param\",\n                \"comparison\": \"isEqualTo\",\n                \"value\": \"ch\"\n            },\n            \"name\": \"group - 4\"\n        }\n    ],\n    \"fallbackResourceIds\": [\n        \"/subscriptions/fdee8146-8bcf-460f-86f3-3f788c285efd/resourcegroups/iprosis/providers/microsoft.operationalinsights/workspaces/s4h-sentinel-development\"\n    ],\n    \"fromTemplateId\": \"sentinel-UserWorkbook\",\n    \"$schema\": \"https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json\"\n}",
                "version": "1.0",
                "sourceId": "[variables('_workbook-source')]",
                "category": "sentinel"
            }
        },
        {
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic1-id'))]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2021-03-01-preview",
            "properties": {
                "displayName": "(Preview) SAP - High - Activation or Deactivation of ICF Service",
                "description": "Identifies activation or deactivation of ICF Services.\nSource Action: Activate or deactivate a service using SICF.\n*Data Sources: SAPcon - Table Data Log*",
                "severity": "High",
                "enabled": true,
                "query": "let ActivatedICF =\r\nABAPTableDataLog_CL\r\n| where TableName_s == \"ICFSERVLOC\"\r\n| lookup ABAPTableDataLog_CL on TimeGenerated, LogKey_s, DBLogID_s // Lookup for combining the data\r\n| where TableField_s == \"ICF_NAME\" // Service name\r\n| where TableField_s1 == \"ICFACTIVE\" // Active status\r\n| where OldValue_s == NewValue_s and OldValue_s != \"\" \r\n| where NewValue_s1 == \"X\" // Status is activated\r\n| project TimeGenerated, Service = NewValue_s, ICFServiceStatus = \"Activated\";\r\nABAPTableDataLog_CL\r\n| where TableName_s == \"ICFSERVLOC\"\r\n| lookup ABAPTableDataLog_CL on TimeGenerated, LogKey_s, DBLogID_s // Lookup for combining the data\r\n| where TableField_s == \"ICF_NAME\" // Service name\r\n| where TableField_s1 == \"ICFACTIVE\" // Active status\r\n| where OldValue_s1 == \"X\" // Was activated\r\n| where NewValue_s1 == \"\" // Not activated now\r\n| where OldValue_s == NewValue_s and OldValue_s != \"\"\r\n| project TimeGenerated, Service = NewValue_s, ICFServiceStatus = \"Deactivated\"\r\n| union ActivatedICF\r\n",
                "queryFrequency": "PT2H",
                "queryPeriod": "PT2H",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "tactics": [
                    "CommandAndControl",
                    "LateralMovement",
                    "Persistence"
                ],
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5M",
                        "matchingMethod": "AllEntities"
                    }
                }
            }
        },
        {
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic2-id'))]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2021-03-01-preview",
            "properties": {
                "displayName": "(Preview) SAP - High - Change in Sensitive privileged user",
                "description": "Identifies changes  of sensitive privileged users. \n\nSource Action: Change user details / authorizations using SU01.\n\nPriveleged users should be maintained in \"SAP - Privileged Users\" Watchlist\n\n*Data Sources: SAPcon -  Audit Log*",
                "severity": "High",
                "enabled": true,
                "query": "// Audit Log Classes - User Master Changes\r\nlet AuditClasses = dynamic(['AU7', 'BUV', 'BUW', 'AU8', 'AU9', 'AUA', 'AUB', 'AUD', 'DUH', 'BU2']);\r\n// Get Relevant User from WatchList\r\nlet PrivelegedUsers = _GetWatchlist('SAP - Privileged Users');\r\nlet fixedUsers = datatable(User: string)\r\n    // Maintain these if WatchList is not available    \r\n    [\"SAP*\", \"DDIC\"]\r\n;\r\nlet SensProfiles = _GetWatchlist('SAP - Sensitive Profiles') | summarize  by Profile;\r\nlet SensRoles = _GetWatchlist('SAP - Sensitive Roles') | summarize  by Role;\r\n// Maintain these if System doesn't have CR's\r\nlet FixedUserMD = datatable(TimeGenerated : datetime, UserName_s : string, RoleMembership_s : string)[];\r\nlet ABAPUserMd = \r\nunion isfuzzy=true table(\"ABAPUserMD_CL\"), FixedUserMD;\r\n// Priveleged Users by sensitive role/profile based on user master data\r\nlet PrivUserdByMD = ABAPUserMd\r\n| extend Roles = parse_json(RoleMembership_s)[\"SapRole\"], Profiles = parse_json(RoleMembership_s)[\"SapProfile\"]\r\n| mv-expand Roles, Profiles\r\n| where Roles in (SensRoles) or Profiles in (SensProfiles)\r\n| summarize by User = UserName_s;\r\nlet UnitedPrivleged = union PrivelegedUsers, fixedUsers, PrivUserdByMD\r\n| summarize by User;\r\nABAPAuditLog_CL \r\n| where MessageID_s in (AuditClasses)\r\n| where Variable1_s in (UnitedPrivleged) // The user that we are making change in is a sensitive privileged user\r\n| project TimeGenerated, Instance_s,  SystemID_s, ClientID_s, User_s, MessageText_s, MessageID_s, Email_s,  TerminalIPv6_s, Host_s\r\n",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "tactics": [
                    "PrivilegeEscalation",
                    "CredentialAccess"
                ],
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5M",
                        "matchingMethod": "AllEntities"
                    }
                },
                "eventGroupingSettings": {
                    "aggregationKind": "SingleAlert"
                },
                "customDetails": {
                    "SAP_System_I_D": "SystemID_s",
                    "SAP_Client": "ClientID_s",
                    "SAP_Instance": "Instance_s",
                    "SAP_User": "User_s"
                },
                "entityMappings": [
                    {
                        "entityType": "Account",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Email_s"
                            }
                        ]
                    },
                    {
                        "entityType": "Host",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Host_s"
                            }
                        ]
                    },
                    {
                        "entityType": "IP",
                        "fieldMappings": [
                            {
                                "identifier": "Address",
                                "columnName": "TerminalIPv6_s"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic3-id'))]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2021-03-01-preview",
            "properties": {
                "displayName": "(Preview) SAP - High - Client Configuration Change",
                "description": "Identifies changes for client configuration such as: Client role, Changes recording mode. \n\nSource Action:  Perofrm client configurations changes using SCC4 transaction code. \n\n*Data Sources: SAPcon -  Audit Log*",
                "severity": "High",
                "enabled": true,
                "query": "// Audit Log Classes - Client Change Configuration\r\nlet AuditClasses = dynamic(['EU2']); // Relevent message\r\nABAPAuditLog_CL \r\n| where MessageID_s in (AuditClasses)\r\n| project-rename  ClientID = Variable1_s \r\n| parse Variable2_s with Currency \"|\" ClientRole \"|\" RecordingChanges \"|\" CrossClientObjectChanges \"|\" ClientCopyProtectionLevel \"|\" ProtectionSAPUpgrade \"|\" CATTeCATT \"|\"  LockedforCopy // Parse every object before the | char \r\n| project TimeGenerated, Instance_s, SystemID_s, User_s, ClientID, \r\nCurrency,ClientRole,RecordingChanges,CrossClientObjectChanges,ClientCopyProtectionLevel,CATTeCATT,LockedforCopy,ProtectionSAPUpgrade,\r\nMessageText_s, Email_s, TerminalIPv6_s,  Host_s\r\n",
                "queryFrequency": "PT5H",
                "queryPeriod": "PT5H",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "tactics": [
                    "DefenseEvasion",
                    "Exfiltration",
                    "Persistence"
                ],
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5M",
                        "matchingMethod": "AllEntities"
                    }
                },
                "eventGroupingSettings": {
                    "aggregationKind": "SingleAlert"
                },
                "customDetails": {
                    "SAP_User": "User_s",
                    "SAP_Client": "ClientID",
                    "SAP_Instance": "Instance_s",
                    "SAP_System_I_D": "SystemID_s"
                },
                "entityMappings": [
                    {
                        "entityType": "Account",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Email_s"
                            }
                        ]
                    },
                    {
                        "entityType": "IP",
                        "fieldMappings": [
                            {
                                "identifier": "Address",
                                "columnName": "TerminalIPv6_s"
                            }
                        ]
                    },
                    {
                        "entityType": "Host",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Host_s"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic4-id'))]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2021-03-01-preview",
            "properties": {
                "displayName": "(Preview) SAP - High - Data has Changed during Debugging Activity",
                "description": "Identifies changes for runtime data during a debugging activity.\nSource Action: Activate Debug (\"/h\"), Select a field for change and update it's value.\n\n**Recommended for Production only**\n\n*Data Sources: SAPcon -  Audit Log*",
                "severity": "High",
                "enabled": true,
                "query": "let Role = 'Production';\r\nlet AuditClasses = dynamic(['CUL']); // Audit Log Classes - Debug Change\r\nlet allSystemRoles = dynamic(['Sandbox','Developement','QualityAssurance','Training','Production']); // Available System Roles\r\nlet allSystemUsage = dynamic (['ERP','CRM','BW','Solman','Gateway','Enterprise Portal']); // Available System Usages\r\n// Get Relevant Systems from WatchList\r\nlet systemID = _GetWatchlist('SAP - Systems');\r\nlet fixedSID = datatable(SystemID:string, SystemRole:string, SystemUsage:string)\r\n// Maintain these if WatchList is not available    \r\n    [\"S4H\",\"Production\",\"ERP\",\r\n    \"XXX\",\"Sandbox\",\"BW\"]\r\n;\r\nlet UnitedSystem = \r\nunion systemID, fixedSID\r\n| summarize by SystemID, SystemRole, SystemUsage\r\n| where SystemRole == Role; // Recommended  is Production only\r\n//| where SystemRole in (allSystemRoles); // Use this for all system roles\r\nABAPAuditLog_CL \r\n| where MessageID_s in (AuditClasses)\r\n| project-rename SystemID = SystemID_s\r\n| lookup kind = inner (UnitedSystem) on SystemID\r\n| project TimeGenerated,ClientID_s, Instance_s, User_s, MessageText_s, ABAPProgramName_s, TransactionCode_s, SystemID, SystemRole, SystemUsage, Email_s,TerminalIPv6_s, Host_s\r\n",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "tactics": [
                    "Execution",
                    "LateralMovement"
                ],
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5M",
                        "matchingMethod": "AllEntities"
                    }
                },
                "eventGroupingSettings": {
                    "aggregationKind": "SingleAlert"
                },
                "customDetails": {
                    "SAP_Instance": "Instance_s",
                    "SAP_System_I_D": "SystemID",
                    "SAP_Client": "ClientID_s",
                    "SAP_User": "User_s"
                },
                "entityMappings": [
                    {
                        "entityType": "Account",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Email_s"
                            }
                        ]
                    },
                    {
                        "entityType": "IP",
                        "fieldMappings": [
                            {
                                "identifier": "Address",
                                "columnName": "TerminalIPv6_s"
                            }
                        ]
                    },
                    {
                        "entityType": "Host",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Host_s"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic5-id'))]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2021-03-01-preview",
            "properties": {
                "displayName": "(Preview) SAP - High - Deactivation of Security Audit Log",
                "description": "Identifies deactivation of Security Audit Log\n\nSource Action: Disable secruity Audit Log using SM19/RSAU_CONFIG.\n\n*Data Sources: SAPcon -  Audit Log*",
                "severity": "High",
                "enabled": true,
                "query": "// Audit Log Classes - Audit Log Active Status Events\r\nlet AuditClasses = dynamic(['AUJ']);\r\nABAPAuditLog_CL \r\n| where MessageID_s in (AuditClasses)\r\n| where Variable1_s == '0' // Audit Active Status = 0\r\n| project \r\n// Details\r\nTimeGenerated, Instance_s ,SystemID_s, ClientID_s, User_s, MessageText_s, Email_s, TerminalIPv6_s, Host_s",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "tactics": [
                    "Exfiltration",
                    "DefenseEvasion",
                    "Persistence"
                ],
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5M",
                        "matchingMethod": "AllEntities"
                    }
                },
                "eventGroupingSettings": {
                    "aggregationKind": "SingleAlert"
                },
                "customDetails": {
                    "SAP_User": "User_s",
                    "SAP_Client": "ClientID_s",
                    "SAP_System_I_D": "SystemID_s",
                    "SAP_Instance": "Instance_s"
                },
                "entityMappings": [
                    {
                        "entityType": "Account",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Email_s"
                            }
                        ]
                    },
                    {
                        "entityType": "IP",
                        "fieldMappings": [
                            {
                                "identifier": "Address",
                                "columnName": "TerminalIPv6_s"
                            }
                        ]
                    },
                    {
                        "entityType": "Host",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Host_s"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic6-id'))]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2021-03-01-preview",
            "properties": {
                "displayName": "(Preview) SAP - High - Execution of a Sensitive ABAP Program",
                "description": "Identifies direct execution of a sensitive ABAP program. \n\nSource Action: Execute a program directly using SE38/SA38/SE80.\n\n**Recommended for Production only**\n\nABAP Programs should be maintained in watchlist \"SAP - Sensitive ABAP Programs\"\n\n*Data Sources: SAPcon -  Audit Log*",
                "severity": "High",
                "enabled": true,
                "query": "// Define Variables\r\nlet Role = \"Production\";\r\nlet AuditClasses = dynamic(['AUW']); // Audit Log Classes - Report Started\r\nlet allSystemRoles = dynamic(['Sandbox','Developement','QualityAssurance','Training','Production']); // Available System Roles\r\nlet allSystemUsage = dynamic (['ERP','CRM','BW','Solman','Gateway','Enterprise Portal']); // Available System Usages\r\n// Get Relevant Systems from WatchList\r\nlet systemID = _GetWatchlist('SAP - Systems');\r\nlet fixedSID = datatable(SystemID:string, SystemRole:string, SystemUsage:string)\r\n// Maintain these if WatchList is not available    \r\n    [\"S4H\",\"Production\",\"ERP\",\r\n    \"XXX\",\"Sandbox\",\"BW\"]\r\n; \r\n// Get Relevant ABAP Programs\r\nlet SensitiveABAPReports = _GetWatchlist('SAP - Sensitive ABAP Programs');\r\nlet fixedABAPReports = datatable(ABAPProgram:string)\r\n// Maintain these if WatchList is not available    \r\n    [\"RSPFLDOC\"]\r\n; \r\nlet UnionAbap = \r\n    union SensitiveABAPReports, fixedABAPReports\r\n    | summarize by ABAPProgram;\r\nlet UnitedSystem =\r\nunion systemID, fixedSID\r\n| summarize by SystemID, SystemRole, SystemUsage\r\n| where SystemRole == Role; // Reccommended is Production only\r\n//| where SystemRole in (allSystemRoles); // Use this for all system roles\r\n// Query logic\r\nABAPAuditLog_CL \r\n| where MessageID_s in (AuditClasses)\r\n| where ABAPProgramName_s in (UnionAbap)\r\n| project-rename SystemID = SystemID_s\r\n| lookup kind = inner (UnitedSystem) on SystemID\r\n| order by TimeGenerated asc\r\n| project TimeGenerated, Instance_s , SystemID, ClientID_s, User_s, ABAPProgramName_s, MessageText_s, TransactionCode_s, MessageID_s, Email_s, TerminalIPv6_s, Host_s",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "tactics": [
                    "Exfiltration",
                    "LateralMovement",
                    "Execution"
                ],
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5M",
                        "matchingMethod": "AllEntities"
                    }
                },
                "eventGroupingSettings": {
                    "aggregationKind": "SingleAlert"
                },
                "customDetails": {
                    "SAP_System_I_D": "SystemID",
                    "SAP_Client": "ClientID_s",
                    "SAP_Instance": "Instance_s",
                    "SAP_User": "User_s"
                },
                "entityMappings": [
                    {
                        "entityType": "Account",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Email_s"
                            }
                        ]
                    },
                    {
                        "entityType": "IP",
                        "fieldMappings": [
                            {
                                "identifier": "Address",
                                "columnName": "TerminalIPv6_s"
                            }
                        ]
                    },
                    {
                        "entityType": "Host",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Host_s"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic7-id'))]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2021-03-01-preview",
            "properties": {
                "displayName": "(Preview) SAP - High - Execution of a Sensitive Transaction Code",
                "description": "Identifies execution of a sensitive Transaction Code.\n\nSource Action: Execute a sensitive Transaction Code.\n\n**Recommended for Production only**\n\nTransaction Codes should be maintained in watchlist \"\"SAP - Sensitive Transaction Codes\"\"\n\n*Data Sources: SAPcon -  Audit Log*",
                "severity": "High",
                "enabled": true,
                "query": "// Define Variables\r\nlet Role = 'Production';\r\nlet AuditClasses = dynamic(['AU3']); // Audit Log Classes - Transaction Started\r\nlet allSystemRoles = dynamic(['Sandbox','Developement','QualityAssurance','Training','Production']); // Available System Roles\r\nlet allSystemUsage = dynamic (['ERP','CRM','BW','Solman','Gateway','Enterprise Portal']); // Available System Usages\r\n// Get Relevant Systems from WatchList\r\nlet systemID = _GetWatchlist('SAP - Systems');\r\nlet fixedSID = datatable(SystemID:string, SystemRole:string, SystemUsage:string)\r\n// Maintain these if WatchList is not available    \r\n    [\"S4H\",\"Production\",\"ERP\",\r\n    \"XXX\",\"Sandbox\",\"BW\"]\r\n; \r\n// Get Relevant Transaction Codes\r\nlet SensitiveTcode = _GetWatchlist('SAP - Sensitive Transactions');\r\nlet fixedTcode = datatable(TransactionCode:string)\r\n// Maintain these if WatchList is not available    \r\n    [\"RSAU_CONFIG\",\"RZ11\",\"SM19\"]\r\n; \r\nlet UnitedCodes = \r\n    union SensitiveTcode, fixedTcode\r\n    | summarize by TransactionCode;\r\nlet UnitedSystem =\r\nunion systemID, fixedSID\r\n| summarize by SystemID, SystemRole, SystemUsage\r\n| where SystemRole == Role; // Recommended  is Production only\r\n//| where SystemRole in (allSystemRoles); // Use this for all system roles\r\n// Query logic\r\nABAPAuditLog_CL \r\n| where MessageID_s in (AuditClasses)\r\n| where TransactionCode_s in (UnitedCodes)\r\n| project-rename SystemID = SystemID_s\r\n| lookup kind = inner (UnitedSystem) on SystemID\r\n| order by TimeGenerated asc\r\n| project TimeGenerated,Instance_s ,SystemID, ClientID_s, User_s, TransactionCode_s, MessageText_s, MessageID_s, Email_s, TerminalIPv6_s, Host_s",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "tactics": [
                    "Discovery",
                    "Execution"
                ],
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5M",
                        "matchingMethod": "AllEntities"
                    }
                },
                "eventGroupingSettings": {
                    "aggregationKind": "SingleAlert"
                },
                "customDetails": {
                    "SAP_User": "User_s",
                    "SAP_Client": "ClientID_s",
                    "SAP_Instance": "Instance_s",
                    "SAP_System_I_D": "SystemID"
                },
                "entityMappings": [
                    {
                        "entityType": "Account",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Email_s"
                            }
                        ]
                    },
                    {
                        "entityType": "IP",
                        "fieldMappings": [
                            {
                                "identifier": "Address",
                                "columnName": "TerminalIPv6_s"
                            }
                        ]
                    },
                    {
                        "entityType": "Host",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Host_s"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic8-id'))]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2021-03-01-preview",
            "properties": {
                "displayName": "(Preview) SAP - High - Execution of Sensitive Function Module",
                "description": "Identifies execution of a sensitive ABAP Function Module.\n\nSource Action: Execute a sensitive function module directly using SE37.\n\n**Recommended for Production only**\n\nSensitive functions should be maintained in \"SAP - Sensitive Function Modules\" Watchlist.\nTable logging changes should be activated for table \"EUFUNC\" in backend. (SE13)\n\n*Data Sources: SAPcon -  Table Data Log*",
                "severity": "High",
                "enabled": true,
                "query": "// Define variables\r\nlet RelTable = \"EUFUNC\"; // Relevant table\r\nlet AuditLogIn = dynamic(['AU1', 'AU5']); // Messages of connect with user\r\nlet SenseModules =  _GetWatchlist('SAP - Sensitive Function Modules');\r\nlet fixedModules = datatable(FunctionModule:string)['RSAU_CLEAR_AUDIT_LOG','BAPI_USER_CREATE', 'RFC_GET_TABLE_ENTRIES']; \r\nlet UnitedModules =\r\ntoscalar(union fixedModules, SenseModules\r\n| summarize FunctionModules =  make_set(FunctionModule));\r\n// Query logic\r\nlet LastLogin = \r\nABAPAuditLog_CL\r\n| where MessageID_s in (AuditLogIn)\r\n| summarize TimeGenerated = arg_max(TimeGenerated, *) by SystemID_s, ClientID_s, User_s; // Get last connection date for user\r\nABAPTableDataLog_CL\r\n| where TableName_s == RelTable \r\n| extend Module = extract(@\"\\s+(.{1,}\\b)\\s+\", 1, LogKey_s, typeof(string)) // Extract Function Module\r\n| extend FunctionGroup = extract(@\"^FL([^\\s]*)\\s\", 1, LogKey_s, typeof(string)) // Extract Function Group\r\n| extend ExecutionVariant = extract(@\"\\b(\\w+)$\", 1, LogKey_s, typeof(string)) // Extract Execution Varient\r\n| where Module in (UnitedModules) // Module is sensitive\r\n| lookup kind=inner LastLogin on $left.UserName_s == $right.User_s\r\n| project TimeGenerated, Instance_s ,SystemID_s, UserName_s, ClientID_s, Email_s, TerminalIPv6_s, Host_s, Module, FunctionGroup, ExecutionVariant",
                "queryFrequency": "PT2H",
                "queryPeriod": "PT2H",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "tactics": [
                    "Discovery",
                    "CommandAndControl"
                ],
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5M",
                        "matchingMethod": "AllEntities"
                    }
                },
                "eventGroupingSettings": {
                    "aggregationKind": "SingleAlert"
                },
                "customDetails": {
                    "SAP_Client": "ClientID_s",
                    "SAP_System_I_D": "SystemID_s",
                    "SAP_Instance": "Instance_s",
                    "SAP_User": "UserName_s"
                },
                "entityMappings": [
                    {
                        "entityType": "Account",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Email_s"
                            }
                        ]
                    },
                    {
                        "entityType": "IP",
                        "fieldMappings": [
                            {
                                "identifier": "Address",
                                "columnName": "TerminalIPv6_s"
                            }
                        ]
                    },
                    {
                        "entityType": "Host",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Host_s"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic9-id'))]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2021-03-01-preview",
            "properties": {
                "displayName": "(Preview) SAP - High - Function Module tested",
                "description": "Identifies testing of a function module.\n\nSource Action: Test a function module using  SE37 / SE80.\n\n**Recommended for Production only**\n\n*Data Sources: SAPcon -  Audit Log*",
                "severity": "High",
                "enabled": true,
                "query": "let Role = 'Production';\r\nlet ProgramName = 'RS_TESTFRAME_CALL';\r\nlet AuditClasses = dynamic(['AUW']); // Audit Log Classes - Report Started\r\nlet allSystemRoles = dynamic(['Sandbox', 'Developement', 'QualityAssurance', 'Training', 'Production']); // Available System Roles\r\nlet allSystemUsage = dynamic (['ERP', 'CRM', 'BW', 'Solman', 'Gateway', 'Enterprise Portal']); // Available System Usages\r\n// Get Relevant Systems from WatchList\r\nlet systemID = _GetWatchlist('SAP - Systems');\r\nlet fixedSID = datatable(SystemID: string, SystemRole: string, SystemUsage: string)\r\n    // Maintain these if WatchList is not available    \r\n    [\"S4H\", \"Production\", \"ERP\",\r\n    \"XXX\", \"Sandbox\", \"BW\"]\r\n; \r\nlet UnitedSystem = \r\nunion systemID, fixedSID\r\n| summarize by SystemID, SystemRole, SystemUsage\r\n| where SystemRole == Role; // Reccommended is Production only\r\n//| where SystemRole in (allSystemRoles); // Use this for all system roles\r\nABAPAuditLog_CL \r\n| where MessageID_s in (AuditClasses)\r\n| where ABAPProgramName_s == ProgramName\r\n| project-rename SystemID = SystemID_s\r\n| lookup kind = inner (UnitedSystem) on SystemID\r\n| order by TimeGenerated asc\r\n| project TimeGenerated, Instance_s ,User_s, SystemID, ClientID_s, MessageText_s, MessageID_s,\r\nEmail_s, TerminalIPv6_s, Host_s ",
                "queryFrequency": "PT6H",
                "queryPeriod": "PT6H",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "tactics": [
                    "Collection",
                    "DefenseEvasion",
                    "LateralMovement"
                ],
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5M",
                        "matchingMethod": "AllEntities"
                    }
                },
                "eventGroupingSettings": {
                    "aggregationKind": "SingleAlert"
                },
                "customDetails": {
                    "SAP_User": "User_s",
                    "SAP_Client": "ClientID_s",
                    "SAP_Instance": "Instance_s",
                    "SAP_System_I_D": "SystemID"
                },
                "entityMappings": [
                    {
                        "entityType": "Account",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Email_s"
                            }
                        ]
                    },
                    {
                        "entityType": "IP",
                        "fieldMappings": [
                            {
                                "identifier": "Address",
                                "columnName": "TerminalIPv6_s"
                            }
                        ]
                    },
                    {
                        "entityType": "Host",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Host_s"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic10-id'))]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2021-03-01-preview",
            "properties": {
                "displayName": "(Preview) SAP - High - HANA DB - Assign Admin Authorizations",
                "description": "Identifies admin privileges/roles assignment.\n\nSource Action: Assign a user with any Admin role / privileges.\n\n*Data Sources: Linux Agent - Syslog*",
                "severity": "High",
                "enabled": true,
                "query": "Syslog \r\n| where ProcessName startswith \"HDB\"\r\n| where SyslogMessage contains \"ADMIN\" and (SyslogMessage contains \"GRANT PRIVILEGE\" or SyslogMessage contains \"GRANT ROLE\")",
                "queryFrequency": "PT3H",
                "queryPeriod": "PT3H",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "tactics": [
                    "PrivilegeEscalation"
                ],
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5M",
                        "matchingMethod": "AllEntities"
                    }
                }
            }
        },
        {
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic11-id'))]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2021-03-01-preview",
            "properties": {
                "displayName": "(Preview) SAP - High - HANA DB - Audit Trail Policy Changes",
                "description": "Identifies changes for HANA DB audit trail policies.\n\nSource Action: Create / update existing audit policy in security definitions.\n\n*Data Sources: Linux Agent - Syslog*",
                "severity": "High",
                "enabled": true,
                "query": "Syslog \r\n| where ProcessName startswith \"HDB\"\r\n| where SyslogMessage contains \"AUDIT POLICY\" ",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "tactics": [
                    "LateralMovement",
                    "DefenseEvasion",
                    "Persistence"
                ],
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5M",
                        "matchingMethod": "AllEntities"
                    }
                }
            }
        },
        {
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic12-id'))]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2021-03-01-preview",
            "properties": {
                "displayName": "(Preview) SAP - High - HANA DB - Deactivation of Audit Trail",
                "description": "Identifies deactivation of HANA DB audit log.\n\nSource Action: Deactivate Audit Log in HANA DB security defnitions.\n\n*Data Sources: Linux Agent - Syslog*",
                "severity": "High",
                "enabled": true,
                "query": "Syslog \r\n| where ProcessName startswith \"HDB\"\r\n| where SyslogMessage contains \"AUDIT CONFIGURATION\" and \r\n    SyslogMessage contains 'global_auditing_state' and \r\n    SyslogMessage contains 'False'",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "tactics": [
                    "Persistence",
                    "LateralMovement",
                    "DefenseEvasion"
                ],
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5M",
                        "matchingMethod": "AllEntities"
                    }
                }
            }
        },
        {
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic13-id'))]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2021-03-01-preview",
            "properties": {
                "displayName": "(Preview) SAP - High - HANA DB - User Admin actions",
                "description": "Identifies user administration actions.\n\nSouirce Action: Create/Update/Delete a DB User.\n\n*Data Sources: Linux Agent - Syslog*",
                "severity": "High",
                "enabled": true,
                "query": "Syslog \r\n| where ProcessName startswith \"HDB\"\r\n| where SyslogMessage contains \"CREATE USER\" or \r\n    SyslogMessage contains 'ALTER USER' or \r\n    SyslogMessage contains 'DROP USER' or \r\n    SyslogMessage contains 'DROP SCHEMA'",
                "queryFrequency": "PT3H",
                "queryPeriod": "PT3H",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "tactics": [
                    "PrivilegeEscalation"
                ],
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5M",
                        "matchingMethod": "AllEntities"
                    }
                }
            }
        },
        {
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic14-id'))]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2021-03-01-preview",
            "properties": {
                "displayName": "(Preview) SAP - High - Login from unexpected network",
                "description": "Identifies logons from an unexpected network.\n\nSource Action: Logon to the backend system from an IP address which is not assigned to one of the netwroks.\n\nNetworks should be maintained in watchlist \"SAP - Networks\"\n\n*Data Sources: SAPcon -  Audit Log*",
                "severity": "High",
                "enabled": true,
                "query": "let AuditClasses = dynamic(['AU1','AU5']); // Audit Log Classes - Dialog Logon Successful, RFC Logon Successful\r\n// Dialog / CPIC / RFC Int / RFC Ext / SRFC / User Switch / HTTP / Restore Session / API Call\r\nlet DialogLogonTypes = dynamic(['A', 'C', 'F', 'R', 'S', 'U', 'H', 'u', ' ']);\r\nlet Networks = _GetWatchlist('SAP - Networks'); \r\nlet fixedNetworks = datatable(Network: string)['111.68.128.0/17']; // Maintain these if watchlist is not available\r\nlet allNetworks = union Networks, fixedNetworks\r\n    | summarize by Network;\r\nABAPAuditLog_CL\r\n// Add audit classes\r\n| where MessageID_s in (AuditClasses)\r\n| where Variable1_s in (DialogLogonTypes) // Is a dialog logon type from the list\r\n| where isnotempty(TerminalIPv6_s) // There is a Ipv6 address\r\n| evaluate ipv4_lookup(allNetworks, TerminalIPv6_s, Network, return_unmatched = true)\r\n// Similar to regular lookup, by ipv4 address, unmatched is like left join\r\n| where isempty(Network) // Network is not familiar\r\n// Details\r\n| project TimeGenerated, SystemID_s, ClientID_s, User_s, TransactionCode_s, MessageText_s, Email_s , TerminalIPv6_s, Host_s",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "tactics": [
                    "InitialAccess"
                ],
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5M",
                        "matchingMethod": "AllEntities"
                    }
                },
                "eventGroupingSettings": {
                    "aggregationKind": "SingleAlert"
                },
                "customDetails": {
                    "SAP_Client": "ClientID_s",
                    "SAP_System_I_D": "SystemID_s",
                    "SAP_User": "User_s"
                },
                "entityMappings": [
                    {
                        "entityType": "Account",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Email_s"
                            }
                        ]
                    },
                    {
                        "entityType": "IP",
                        "fieldMappings": [
                            {
                                "identifier": "Address",
                                "columnName": "TerminalIPv6_s"
                            }
                        ]
                    },
                    {
                        "entityType": "Host",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Host_s"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic15-id'))]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2021-03-01-preview",
            "properties": {
                "displayName": "(Preview) SAP - High - New ICF Service Handlers",
                "description": "Identifies creation of ICF Handlers.\nSource Action: Assign a new handler to a service using SICF.\n*Data Sources: SAPcon - Table Data Log*",
                "severity": "High",
                "enabled": true,
                "query": "ABAPTableDataLog_CL\r\n| where TableName_s == \"ICFHANDLER\"\r\n| where TableField_s == \"ICF_NAME\" // Service name\r\n| where OldValue_s == \"\" and NewValue_s != \"\" // New value is inserted in name -> new service\r\n| order by TimeGenerated desc\r\n| project TimeGenerated, Service = NewValue_s",
                "queryFrequency": "PT2H",
                "queryPeriod": "PT2H",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "tactics": [
                    "Persistence",
                    "LateralMovement",
                    "CommandAndControl"
                ],
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5M",
                        "matchingMethod": "AllEntities"
                    }
                }
            }
        },
        {
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic16-id'))]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2021-03-01-preview",
            "properties": {
                "displayName": "(Preview) SAP - High - New ICF Services",
                "description": "Identifies creation of ICF Services.\nSource Action: Create a service using SICF.\n*Data Sources: SAPcon - Table Data Log*",
                "severity": "High",
                "enabled": true,
                "query": "ABAPTableDataLog_CL\r\n| where TableName_s == \"ICFSERVLOC\"\r\n| where TableField_s == \"ICF_NAME\" // Service name\r\n| where OldValue_s == \"\" and NewValue_s != \"\" // New value is inserted in name -> new service\r\n| order by TimeGenerated desc\r\n| project TimeGenerated, Service = NewValue_s",
                "queryFrequency": "PT2H",
                "queryPeriod": "PT2H",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "tactics": [
                    "CommandAndControl",
                    "Persistence",
                    "LateralMovement"
                ],
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5M",
                        "matchingMethod": "AllEntities"
                    }
                }
            }
        },
        {
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic17-id'))]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2021-03-01-preview",
            "properties": {
                "displayName": "(Preview) SAP - High - RFC Execution of a Sensitive Function Module",
                "description": "Identifies execution of a sensitive function module using RFC.\n\nSource Action: Execute a function module using RFC.\n\n**Recommended for Production only**\n\nFunction Modules should be maintained in watchlist \"SAP - Sensitive Function Modules\"\n\n*Data Sources: SAPcon -  Audit Log*",
                "severity": "High",
                "enabled": true,
                "query": "let Role = \"Production\";\r\nlet AuditClasses = dynamic(['AUK']); // Audit Log Classes - Successful RFC call &C (function group = &A)\r\nlet allSystemRoles = dynamic(['Sandbox', 'Developement', 'QualityAssurance', 'Training', 'Production']); // Available System Roles\r\nlet allSystemUsage = dynamic (['ERP', 'CRM', 'BW', 'Solman', 'Gateway', 'Enterprise Portal']); // Available System Usages\r\n// Get Relevant Systems from WatchList\r\nlet systemID = _GetWatchlist('SAP - Systems');\r\nlet fixedSID = datatable(SystemID: string, SystemRole: string, SystemUsage: string)\r\n    // Maintain these if WatchList is not available    \r\n    [\"S4H\", \"Production\", \"ERP\",\r\n    \"XXX\", \"Sandbox\", \"BW\"]\r\n; \r\n// Get Relevant Function Modules\r\nlet SensitiveFM = _GetWatchlist('SAP - Sensitive Function Modules');\r\nlet fixedFM = datatable(FunctionModule: string)\r\n    // Maintain these if WatchList is not available    \r\n    [\"RSAU_CLEAR_AUDIT_LOG\"]\r\n; \r\nlet UnitedSystems = union systemID, fixedSID\r\n| where SystemRole == Role // Recommended  is Production only\r\n| summarize by SystemID;\r\n//| where SystemRole in (allSystemRoles); // Use this for all system roles\r\nlet UnitedSensitive =  union SensitiveFM, fixedFM\r\n| summarize by FunctionModule;\r\nABAPAuditLog_CL \r\n| where MessageID_s in (AuditClasses)\r\n| project-rename FunctionModule = Variable3_s, FunctionGroup = Variable1_s\r\n| where SystemID_s in (UnitedSystems) // The systemID is in this list\r\n| where FunctionModule in (UnitedSensitive) // Function module is sensitive\r\n| order by TimeGenerated asc\r\n| project TimeGenerated,Instance_s ,User_s, SystemID_s, ClientID_s, MessageText_s, FunctionGroup, FunctionModule, MessageID_s, Email_s, TerminalIPv6_s, Host_s",
                "queryFrequency": "PT2H",
                "queryPeriod": "PT2H",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "tactics": [
                    "Execution",
                    "LateralMovement",
                    "Discovery"
                ],
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5M",
                        "matchingMethod": "AllEntities"
                    }
                },
                "eventGroupingSettings": {
                    "aggregationKind": "SingleAlert"
                },
                "customDetails": {
                    "SAP_User": "User_s",
                    "SAP_Client": "ClientID_s",
                    "SAP_System_I_D": "SystemID_s",
                    "SAP_Instance": "Instance_s"
                },
                "entityMappings": [
                    {
                        "entityType": "Account",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Email_s"
                            }
                        ]
                    },
                    {
                        "entityType": "IP",
                        "fieldMappings": [
                            {
                                "identifier": "Address",
                                "columnName": "TerminalIPv6_s"
                            }
                        ]
                    },
                    {
                        "entityType": "Host",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Host_s"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic18-id'))]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2021-03-01-preview",
            "properties": {
                "displayName": "(Preview) SAP - High - Sensitive privileged user logged in",
                "description": "Identifies Dialog logon of a sensitive privileged user. \n\nSource Action: Logon to the backend system using SAP* or anoter privileged user.\n\nPriveleged users should be maintained in \"SAP - Privileged Users\" Watchlist\n\n*Data Sources: SAPcon -  Audit Log*",
                "severity": "High",
                "enabled": true,
                "query": "// Define Variables\r\n// Audit Log Classes - Dialog Logon Successful\r\nlet AuditClassesSuccess = dynamic(['AU1']);\r\nlet AuditClassesFail = dynamic(['BU1']);\r\nlet AuditRFCSuccess = dynamic(['AU5']);\r\nlet AuditRFCFail = dynamic(['AU6']);\r\nlet LogonTypes = dynamic(['A','H', 'R', 'S']); // Dialog / HTTP\r\n// Get Relevant User from WatchList\r\nlet PrivelegedUsers = _GetWatchlist('SAP - Privileged Users');\r\nlet fixedUsers = datatable(User:string)\r\n// Maintain these if WatchList is not available    \r\n    [\"SAP*\",\"DDIC\"]\r\n;\r\nlet SensProfiles = _GetWatchlist('SAP - Sensitive Profiles') | summarize  by Profile;\r\nlet SensRoles = _GetWatchlist('SAP - Sensitive Roles') | summarize  by Role;\r\n// Maintain these if System doesn't have CR's\r\nlet FixedUserMD = datatable(TimeGenerated : datetime, UserName_s : string, RoleMembership_s : string)[];\r\n// Priveleged Users by sensitive role/profile based on user master data\r\nlet ABAPUserMd = \r\nunion isfuzzy=true table(\"ABAPUserMD_CL\"), FixedUserMD;\r\nlet PrivUserdByMD = ABAPUserMd\r\n| extend Roles = parse_json(RoleMembership_s)[\"SapRole\"], Profiles = parse_json(RoleMembership_s)[\"SapProfile\"]\r\n| mv-expand Roles, Profiles\r\n| where Roles in (SensRoles) or Profiles in (SensProfiles)\r\n| summarize by User = UserName_s;\r\nlet UnitedPrivileged = union PrivelegedUsers, fixedUsers, PrivUserdByMD\r\n| summarize by User;\r\n// Query logic\r\nABAPAuditLog_CL \r\n| where (MessageID_s in (AuditClassesSuccess) and Variable1_s in (LogonTypes)) or // Success login\r\nMessageID_s in (AuditClassesFail) or // Failed login\r\n(MessageID_s in (AuditRFCSuccess) and Variable1_s in (LogonTypes)) or // Success RFC login\r\nMessageID_s in (AuditRFCFail) // Failed RFC login\r\n| where User_s in (UnitedPrivileged)\r\n| project-rename LogonType = Variable1_s\r\n| project TimeGenerated, Instance_s ,SystemID_s, ClientID_s, LogonType, User_s, MessageText_s, \r\nEmail_s, TerminalIPv6_s, Host_s\r\n",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "tactics": [
                    "InitialAccess",
                    "CredentialAccess"
                ],
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5M",
                        "matchingMethod": "AllEntities"
                    }
                },
                "eventGroupingSettings": {
                    "aggregationKind": "SingleAlert"
                },
                "customDetails": {
                    "SAP_Client": "ClientID_s",
                    "SAP_Instance": "Instance_s",
                    "SAP_System_I_D": "SystemID_s",
                    "SAP_User": "User_s"
                },
                "entityMappings": [
                    {
                        "entityType": "Account",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Email_s"
                            }
                        ]
                    },
                    {
                        "entityType": "IP",
                        "fieldMappings": [
                            {
                                "identifier": "Address",
                                "columnName": "TerminalIPv6_s"
                            }
                        ]
                    },
                    {
                        "entityType": "Host",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Host_s"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic19-id'))]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2021-03-01-preview",
            "properties": {
                "displayName": "(Preview) SAP - High - Sensitive privileged user makes a change in other user",
                "description": "Identifies changes  of sensitive privileged users in other users.\n\nSource Action: Change user details / authorizations using SU01.\n\nPriveleged users should be maintained in \"SAP - Privileged Users\" Watchlist\n\n*Data Sources: SAPcon -  Audit Log*",
                "severity": "High",
                "enabled": true,
                "query": "// Audit Log Classes - User Master Changes\r\nlet AuditClasses = dynamic(['AU7', 'BUV', 'BUW', 'AU8', 'AU9', 'AUA', 'AUB', 'AUD', 'DUH', 'BU2']);\r\n// Get Relevant User from WatchList\r\nlet PrivelegedUsers = _GetWatchlist('SAP - Privileged Users');\r\nlet fixedUsers = datatable(User: string)\r\n    // Maintain these if WatchList is not available    \r\n    [\"SAP*\", \"DDIC\"]\r\n;\r\nlet SensProfiles = _GetWatchlist('SAP - Sensitive Profiles') | summarize  by Profile;\r\nlet SensRoles = _GetWatchlist('SAP - Sensitive Roles') | summarize  by Role;\r\n// Maintain these if System doesn't have CR's\r\nlet FixedUserMD = datatable(TimeGenerated : datetime, UserName_s : string, RoleMembership_s : string)[];\r\n// Priveleged Users by sensitive role/profile based on user master data\r\nlet ABAPUserMd = \r\nunion isfuzzy=true table(\"ABAPUserMD_CL\"), FixedUserMD;\r\nlet PrivUserdByMD = ABAPUserMd\r\n| extend Roles = parse_json(RoleMembership_s)[\"SapRole\"], Profiles = parse_json(RoleMembership_s)[\"SapProfile\"]\r\n| mv-expand Roles, Profiles\r\n| where Roles in (SensRoles) or Profiles in (SensProfiles)\r\n| summarize by User = UserName_s;\r\nlet UnitedPrivleged = union PrivelegedUsers, fixedUsers, PrivUserdByMD\r\n| summarize by User;\r\nABAPAuditLog_CL \r\n| where MessageID_s in (AuditClasses)\r\n| where User_s in (UnitedPrivleged) // The user that makes a change is a sensitive privileged user\r\n| project TimeGenerated, Instance_s ,SystemID_s, ClientID_s, User_s, MessageText_s, MessageID_s,\r\n     Email_s, TerminalIPv6_s, Host_s\r\n",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "tactics": [
                    "PrivilegeEscalation",
                    "CredentialAccess"
                ],
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5M",
                        "matchingMethod": "AllEntities"
                    }
                },
                "eventGroupingSettings": {
                    "aggregationKind": "SingleAlert"
                },
                "customDetails": {
                    "SAP_User": "User_s",
                    "SAP_Instance": "Instance_s",
                    "SAP_Client": "ClientID_s",
                    "SAP_System_I_D": "SystemID_s"
                },
                "entityMappings": [
                    {
                        "entityType": "Account",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Email_s"
                            }
                        ]
                    },
                    {
                        "entityType": "Host",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Host_s"
                            }
                        ]
                    },
                    {
                        "entityType": "IP",
                        "fieldMappings": [
                            {
                                "identifier": "Address",
                                "columnName": "TerminalIPv6_s"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic20-id'))]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2021-03-01-preview",
            "properties": {
                "displayName": "(Preview) SAP - High - Sensitive Users Password Change and Login",
                "description": "Identifies password changes for privileged users.\n\nSource Action: Change Password for a user and login to the system.\n\nPriveleged users should be maintained in \"SAP - Privileged Users\" Watchlist\n\n*Data Sources: SAPcon -  Audit Log*",
                "severity": "High",
                "enabled": true,
                "query": "// Define variables\r\nlet ChangeAndLoginThreshold = 5; // Difference by minutes between Change in user to connect\r\nlet LoginAndRestThreshold = 3; // Difference by minutes between Connect and password reset\r\nlet AuditUserChange = dynamic(['AUD']); // Message of change in user\r\nlet AuditLogIn = dynamic(['AU1', 'AU5']); // Messages of connect with user\r\nlet AuditUserPassReset = dynamic(['BU2']); // Message of user password change\r\nlet PrivUsers = _GetWatchlist(\"SAP - Privileged Users\");\r\nlet fixedUsers = datatable(User: string)\r\n    // Maintain these if WatchList is not available    \r\n    [\"SAP*\", \"DDIC\"]\r\n;\r\nlet SensProfiles = _GetWatchlist('SAP - Sensitive Profiles') | summarize  by Profile;\r\nlet SensRoles = _GetWatchlist('SAP - Sensitive Roles') | summarize  by Role;\r\n// Maintain these if System doesn't have CR's\r\nlet FixedUserMD = datatable(TimeGenerated : datetime, UserName_s : string, RoleMembership_s : string)[];\r\n// Priveleged Users by sensitive role/profile based on user master data\r\nlet ABAPUserMd = \r\nunion isfuzzy=true table(\"ABAPUserMD_CL\"), FixedUserMD;\r\nlet PrivUserdByMD = ABAPUserMd\r\n| extend Roles = parse_json(RoleMembership_s)[\"SapRole\"], Profiles = parse_json(RoleMembership_s)[\"SapProfile\"]\r\n| mv-expand Roles, Profiles\r\n| where Roles in (SensRoles) or Profiles in (SensProfiles)\r\n| summarize by User = UserName_s;\r\nlet UnitedPrivleged = toscalar(union PrivUsers, fixedUsers, PrivUserdByMD\r\n| summarize Users = make_set(User));\r\n// Query Logic\r\nlet UserChange = // Get users change activity\r\nABAPAuditLog_CL\r\n| where MessageID_s in (AuditUserChange)\r\n| where Variable1_s in (UnitedPrivleged) // The user with the changed password is privileged user\r\n| project-rename UserChangeTimeGenerated = TimeGenerated, UserPassChanged = Variable1_s;\r\nlet UserLogIn = // Get users connections\r\nABAPAuditLog_CL\r\n| where MessageID_s in (AuditLogIn)\r\n| project-rename UserLogInTimeGenerated = TimeGenerated;\r\nABAPAuditLog_CL // Get users password reset\r\n| where MessageID_s in (AuditUserPassReset)\r\n| where User_s in (UnitedPrivleged) // The user with the changed password is privileged user\r\n| lookup kind=inner UserLogIn on TerminalIPv6_s, User_s // Lookup of user reset to user login\r\n| lookup kind=inner UserChange on TerminalIPv6_s, $left.User_s == $right.UserPassChanged // Lookup of user reset to user change\r\n| where abs(datetime_diff('Minute', UserChangeTimeGenerated, UserLogInTimeGenerated)) <= ChangeAndLoginThreshold // Connect after a change in user\r\n| where abs(datetime_diff('Minute', TimeGenerated, UserLogInTimeGenerated)) <= LoginAndRestThreshold // Change password after connection\r\n| summarize by TimeGenerated, Instance_s ,SystemID_s, ClientID_s, UserAction = User_s1, PrivUserPassChanged = User_s, Email_s, TerminalIPv6_s, Host_s\r\n",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "tactics": [
                    "Impact",
                    "CommandAndControl",
                    "PrivilegeEscalation"
                ],
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5M",
                        "matchingMethod": "AllEntities"
                    }
                },
                "eventGroupingSettings": {
                    "aggregationKind": "SingleAlert"
                },
                "customDetails": {
                    "SAP_Instance": "Instance_s",
                    "SAP_Client": "ClientID_s",
                    "SAP_System_I_D": "SystemID_s",
                    "SAP_User": "UserAction"
                },
                "entityMappings": [
                    {
                        "entityType": "Account",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Email_s"
                            }
                        ]
                    },
                    {
                        "entityType": "Host",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Host_s"
                            }
                        ]
                    },
                    {
                        "entityType": "IP",
                        "fieldMappings": [
                            {
                                "identifier": "Address",
                                "columnName": "TerminalIPv6_s"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic21-id'))]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2021-03-01-preview",
            "properties": {
                "displayName": "(Preview) SAP - High - SPNego Attack",
                "description": "Identifies SPNego Replay Attack.\n\n*Data Sources: SAPcon -  Audit Log*",
                "severity": "High",
                "enabled": true,
                "query": "// Define variables\r\nlet AuditClasses = dynamic(['BUI']); // Message of SPNego\r\n// Query logic\r\nABAPAuditLog_CL \r\n| where MessageID_s in (AuditClasses)\r\n| project TimeGenerated, Instance_s , SystemID_s, ClientID_s, User_s ,  Email_s, TerminalIPv6_s, Host_s",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "tactics": [
                    "Impact",
                    "LateralMovement"
                ],
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5M",
                        "matchingMethod": "AllEntities"
                    }
                },
                "eventGroupingSettings": {
                    "aggregationKind": "SingleAlert"
                },
                "customDetails": {
                    "SAP_Client": "ClientID_s",
                    "SAP_System_I_D": "SystemID_s",
                    "SAP_User": "User_s",
                    "SAP_Instance": "Instance_s"
                },
                "entityMappings": [
                    {
                        "entityType": "Account",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Email_s"
                            }
                        ]
                    },
                    {
                        "entityType": "IP",
                        "fieldMappings": [
                            {
                                "identifier": "Address",
                                "columnName": "TerminalIPv6_s"
                            }
                        ]
                    },
                    {
                        "entityType": "Host",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Host_s"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic22-id'))]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2021-03-01-preview",
            "properties": {
                "displayName": "(Preview) SAP - High - System Configuration Change",
                "description": "Identifies changes for system configuration. \n\nSource Action:  Adapt system change options or software components modifcation using SE06 transaction code.\n\n*Data Sources: SAPcon -  Audit Log*",
                "severity": "High",
                "enabled": true,
                "query": "// Audit Log Classes - System Change Configuration\r\nlet AuditClasses = dynamic(['EU1']); // Relevant message\r\nABAPAuditLog_CL \r\n| where MessageID_s in (AuditClasses)\r\n| project \r\n// Details\r\nTimeGenerated,Instance_s, ClientID_s ,SystemID_s, User_s, TransactionCode_s, SoftwareComponent = Variable1_s, NewModifiabilityStatus = Variable2_s, MessageText_s,\r\nEmail_s, TerminalIPv6_s, Host_s\r\n",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "tactics": [
                    "Exfiltration",
                    "DefenseEvasion",
                    "Persistence"
                ],
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5M",
                        "matchingMethod": "AllEntities"
                    }
                },
                "eventGroupingSettings": {
                    "aggregationKind": "SingleAlert"
                },
                "customDetails": {
                    "SAP_System_I_D": "SystemID_s",
                    "SAP_User": "User_s",
                    "SAP_Instance": "Instance_s",
                    "SAP_Client": "ClientID_s"
                },
                "entityMappings": [
                    {
                        "entityType": "Account",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Email_s"
                            }
                        ]
                    },
                    {
                        "entityType": "IP",
                        "fieldMappings": [
                            {
                                "identifier": "Address",
                                "columnName": "TerminalIPv6_s"
                            }
                        ]
                    },
                    {
                        "entityType": "Host",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Host_s"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic23-id'))]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2021-03-01-preview",
            "properties": {
                "displayName": "(Preview) SAP - High - User Creates and uses new user",
                "description": "Identifies a user creating and using other users.\n\nSource Action: Create a user using SU01. Login using the newly created user from the same IP.\n\n*Data Sources: SAPcon -  Audit Log*",
                "severity": "High",
                "enabled": true,
                "query": "// Define Variables\r\nlet MinutesThreshold = 15; // Difference by minutes between Create and Connect\r\nlet AuditUserCreated = dynamic(['AU7']); // Message of create user\r\nlet AuditLogIn = dynamic(['AU1', 'AU5']); // Messages of connect with user\r\n// Query Logic\r\nlet UserCreated = // Get users created\r\nABAPAuditLog_CL\r\n| where MessageID_s in (AuditUserCreated)\r\n| project-rename UserCreationTimeGenerated = TimeGenerated, UserCreated = Variable1_s;\r\nABAPAuditLog_CL // Get users connections\r\n| where MessageID_s in (AuditLogIn)\r\n| lookup kind=inner UserCreated on TerminalIPv6_s,$left.User_s == $right.UserCreated // Lookup of user created to user log in\r\n| where abs(datetime_diff('Minute', TimeGenerated, UserCreationTimeGenerated)) <= MinutesThreshold // Connect after creation\r\n| summarize by TimeGenerated, Instance_s ,SystemID_s, ClientID_s, UserAction = User_s1, UserCreated = User_s, Email_s, TerminalIPv6_s,  Host_s",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "tactics": [
                    "Discovery",
                    "PreAttack",
                    "InitialAccess"
                ],
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5M",
                        "matchingMethod": "AllEntities"
                    }
                },
                "eventGroupingSettings": {
                    "aggregationKind": "SingleAlert"
                },
                "customDetails": {
                    "SAP_User": "UserAction",
                    "SAP_Client": "ClientID_s",
                    "SAP_Instance": "Instance_s",
                    "SAP_System_I_D": "SystemID_s"
                },
                "entityMappings": [
                    {
                        "entityType": "Account",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Email_s"
                            }
                        ]
                    },
                    {
                        "entityType": "IP",
                        "fieldMappings": [
                            {
                                "identifier": "Address",
                                "columnName": "TerminalIPv6_s"
                            }
                        ]
                    },
                    {
                        "entityType": "Host",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Host_s"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic24-id'))]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2021-03-01-preview",
            "properties": {
                "displayName": "(Preview) SAP - High - User Unlocks and uses other users",
                "description": "Identifies a user unlock and usage by other users.\n\nSource Action: Unlock a user using SU01. Login using the unlocked user from the same IP.\n\n*Data Sources: SAPcon -  Audit Log*\n*Data Sources: SAPcon -  Change Documents Log*",
                "severity": "High",
                "enabled": true,
                "query": "// Define variables\r\nlet MinutesThreshold = 15; // Difference by minutes between Unlock and Connect\r\nlet AuditUserUnlocked = dynamic(['AUA']); // Message of unlock user\r\nlet AuditLogIn = dynamic(['AU1', 'AU5']); // Messages of connect with user\r\n// Query Logic\r\nlet UserUnlocked = // Get users unlocked\r\nABAPAuditLog_CL\r\n| where MessageID_s in (AuditUserUnlocked)\r\n| project-rename UserUnlockTimeGenerated = TimeGenerated, UserUnlocked = Variable1_s;\r\nABAPAuditLog_CL // Get users connections\r\n| where MessageID_s in (AuditLogIn)\r\n| lookup kind=inner UserUnlocked on TerminalIPv6_s, $left.User_s == $right.UserUnlocked // Lookup of user unlocked to user log in\r\n| where abs(datetime_diff('Minute', TimeGenerated, UserUnlockTimeGenerated)) <= MinutesThreshold // Connect after unlock\r\n| summarize by TimeGenerated, Instance_s ,SystemID_s, ClientID_s, UserAction = User_s1, UserUnlocked = User_s, Email_s,  TerminalIPv6_s, Host_s",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "tactics": [
                    "PreAttack",
                    "InitialAccess",
                    "Discovery",
                    "LateralMovement"
                ],
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5M",
                        "matchingMethod": "AllEntities"
                    }
                },
                "eventGroupingSettings": {
                    "aggregationKind": "SingleAlert"
                },
                "customDetails": {
                    "SAP_Instance": "Instance_s",
                    "SAP_Client": "ClientID_s",
                    "SAP_System_I_D": "SystemID_s",
                    "SAP_User": "UserAction"
                },
                "entityMappings": [
                    {
                        "entityType": "Account",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Email_s"
                            }
                        ]
                    },
                    {
                        "entityType": "Host",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Host_s"
                            }
                        ]
                    },
                    {
                        "entityType": "IP",
                        "fieldMappings": [
                            {
                                "identifier": "Address",
                                "columnName": "TerminalIPv6_s"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic25-id'))]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2021-03-01-preview",
            "properties": {
                "displayName": "(Preview) SAP - Medium - Assignment of a sensitive profile",
                "description": "Identifies new assignments of a sensitive profile to a user.\n\nSource Action: Assign a profile to a User using SU01.\n\nSensitive profiles should be maintained in watchlist \"SAP - Sensitive Profiles\"\n\n*Data Sources: SAPcon -  Change Documents Log*\n",
                "severity": "Medium",
                "enabled": true,
                "query": "// Define Variables\r\n// Audit Log Classes - Authorizations for user changed\r\nlet Identity = 'IDENTITY';\r\nlet ProfileChangeDoc = 'SUSR_UST04';\r\nlet Insert = \"I\";\r\nlet logsThreshold = 10; // 10 seconds\r\nlet AuditClasses = dynamic(['AUB']); // Authorizations for user &A changed.\r\n// Maintain these if WatchList is not available\r\nlet SensitiveProfiles =  _GetWatchlist('SAP - Sensitive Profiles');\r\nlet fixedProfile = datatable(Profile:string)['SAP_ALL','SAP_NEW'];\r\n// Maintain these if System doesn't have CR's\r\nlet fixedChangeDocs = datatable(User_s : string, ObjectClass_s : string, TableName_s : string, TypeofChange_Item_s : string , ChangedTableKey_s : string, ObjectID_s : string, TimeGenerated : datetime, ValueNew_s : string, SystemID_s : string)[];\r\nlet ChangeDocs = \r\nunion isfuzzy=true table(\"ABAPChangeDocsLog_CL\"), fixedChangeDocs;\r\nlet IdentityChangeDocuments =\r\n// Identity Change documents which represents profiles assignment\r\n    ChangeDocs  \r\n    | where ObjectClass_s == Identity // Identity\r\n    and TableName_s == ProfileChangeDoc // Profile Change Doc\r\n    and TypeofChange_Item_s == Insert // Insert \r\n    | extend Profile = ChangedTableKey_s\r\n    | extend UserAssigned = ObjectID_s;\r\nlet UnitedProfiles =\r\ntoscalar(union fixedProfile, SensitiveProfiles\r\n| summarize Profiles = make_list(Profile));\r\n// Query logic\r\nABAPAuditLog_CL \r\n| where MessageID_s in (AuditClasses)\r\n| summarize by TimeGenerated, TerminalIPv6_s, User_s, Host_s, Email_s\r\n| lookup kind = leftouter (IdentityChangeDocuments) on User_s\r\n| where Profile in (UnitedProfiles)\r\n| project-rename  TimeGenAudit = TimeGenerated1    \r\n| where abs(datetime_diff('second',TimeGenerated,TimeGenAudit)) <= logsThreshold\r\nor isnull(TimeGenAudit)\r\n| project \r\n// Details\r\nTimeGenerated, Instance_s , SystemID_s, ClientID_s, Profile, User_s,  UserAssigned,\r\nEmail_s, TerminalIPv6_s, Host_s",
                "queryFrequency": "PT12H",
                "queryPeriod": "PT12H",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "tactics": [
                    "PrivilegeEscalation"
                ],
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5M",
                        "matchingMethod": "AllEntities"
                    }
                },
                "eventGroupingSettings": {
                    "aggregationKind": "SingleAlert"
                },
                "customDetails": {
                    "SAP_User": "User_s",
                    "SAP_Client": "Email_s",
                    "SAP_System_I_D": "SystemID_s",
                    "SAP_Instance": "Instance_s"
                },
                "entityMappings": [
                    {
                        "entityType": "Account",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Email_s"
                            }
                        ]
                    },
                    {
                        "entityType": "IP",
                        "fieldMappings": [
                            {
                                "identifier": "Address",
                                "columnName": "TerminalIPv6_s"
                            }
                        ]
                    },
                    {
                        "entityType": "Host",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Host_s"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic26-id'))]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2021-03-01-preview",
            "properties": {
                "displayName": "(Preview) SAP - Medium - Assignment of a sensitive role",
                "description": "Identifies new assignments for a sensitive role to a user.\n\nSource Action: Assign a role to a User using SU01 / PFCG.\n\nSensitive roles should be maintained in watchlist \"SAP -  Sensitive Roles\"\n\n*Data Sources: SAPcon -  Change Documents Log, Audit Log*",
                "severity": "Medium",
                "enabled": true,
                "query": "// Define Variables\r\nlet Roles = 'PFCG';\r\nlet UsersRoles = 'AGR_USERS';\r\nlet Insert = \"I\";\r\nlet logsThreshold = 10; // 10 seconds\r\n// Audit Log Classes - Authorizations for user changed\r\nlet AuditClasses = dynamic(['AUB', 'AUD']); // Authorizations for user &A changed.\r\n// Maintain these if WatchList is not available\r\nlet SensitiveRoles =  _GetWatchlist('SAP - Sensitive Roles');\r\nlet fixedRoles = datatable(Role: string)['SAP_BC_BASIS_ADMIN', 'SAP_BC_AUTH_PROFILE_ADMIN'];\r\n// Maintain these if System doesn't have CR's\r\nlet fixedChangeDocs = datatable(User_s : string, ObjectClass_s : string, TableName_s : string, TypeofChange_Item_s : string ,\r\nChangedTableKey_s : string, ObjectID_s : string, TimeGenerated : datetime, ValueNew_s : string, SystemID_s : string)[];\r\nlet ChangeDocs = \r\nunion isfuzzy=true table(\"ABAPChangeDocsLog_CL\"), fixedChangeDocs;\r\nlet ChangeCheck =\r\nChangeDocs  \r\n| where ObjectClass_s == Roles // Roles\r\n    and TableName_s == UsersRoles // Users Roles\r\n    and TypeofChange_Item_s == Insert // Insert \r\n| extend UserAssigned = extract(@\"^.{1,33}\\s*?(.{1,12})\\s*?\\d{16}\", 1, ChangedTableKey_s)\r\n| extend Role = ObjectID_s;\r\nlet UnitedRoles =\r\ntoscalar(union fixedRoles, SensitiveRoles\r\n| summarize Roles = make_list(Role));\r\n// Query logic\r\nABAPAuditLog_CL \r\n| where MessageID_s in (AuditClasses)\r\n| summarize by TimeGenerated, TerminalIPv6_s, User_s, Host_s, Email_s\r\n| lookup kind = leftouter (ChangeCheck) on User_s\r\n| where Role in (UnitedRoles)\r\n| project-rename TimeGenAudit = TimeGenerated1\r\n| where abs(datetime_diff('second', TimeGenerated, TimeGenAudit)) <= logsThreshold\r\nor isnull(TimeGenAudit)\r\n| project \r\n    // Details\r\n    TimeGenerated, Instance_s , SystemID_s, ClientID_s, Role, User_s, UserAssigned,\r\n    Email_s, TerminalIPv6_s, Host_s",
                "queryFrequency": "PT12H",
                "queryPeriod": "PT12H",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "tactics": [
                    "PrivilegeEscalation"
                ],
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5M",
                        "matchingMethod": "AllEntities"
                    }
                },
                "eventGroupingSettings": {
                    "aggregationKind": "SingleAlert"
                },
                "customDetails": {
                    "SAP_Client": "ClientID_s",
                    "SAP_Instance": "Instance_s",
                    "SAP_System_I_D": "SystemID_s",
                    "SAP_User": "User_s"
                },
                "entityMappings": [
                    {
                        "entityType": "Account",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Email_s"
                            }
                        ]
                    },
                    {
                        "entityType": "IP",
                        "fieldMappings": [
                            {
                                "identifier": "Address",
                                "columnName": "TerminalIPv6_s"
                            }
                        ]
                    },
                    {
                        "entityType": "Host",
                        "fieldMappings": [
                            {
                                "identifier": "HostName",
                                "columnName": "Host_s"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic27-id'))]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2021-03-01-preview",
            "properties": {
                "displayName": "(Preview) SAP - Medium - Brute force attacks",
                "description": "Identifies brute force attacks on SAP system according to failed logon attempts for the backend system.\n\nSource Action: Attempt to login from the same IP to several systems/clients within the scheduled time interval.\n\n*Data Sources: SAPcon -  Audit Log*",
                "severity": "Medium",
                "enabled": true,
                "query": "// Define variables\r\n// Audit Log Classes - Failed Logons / Password Check\r\nlet AuditClasses = dynamic(['AUO', 'AU2', 'AU6', 'BU1']);\r\nlet perIPLimit = 6;\r\n// Query logic\r\nABAPAuditLog_CL \r\n| where MessageID_s in (AuditClasses)\r\n| extend DetailsBy = pack(\"User\", User_s, \"Email\", Email_s, \"SystemID\", SystemID_s, \"ClientID\", ClientID_s)\r\n| summarize LoginbyIPAttempts = count(), Details = make_set(DetailsBy), StartTime = min(TimeGenerated), EndTime = max(TimeGenerated) \r\n    by TerminalIPv6_s\r\n// Check if number of login attempts per IP is higher than limit\r\n| where LoginbyIPAttempts > perIPLimit \r\n| mv-expand Details\r\n| evaluate bag_unpack(Details, \"Details_\")\r\n| project \r\n    StartTime, EndTime,  TerminalIPv6_s,\r\n    Email = column_ifexists(\"Details_Email\", \"\"), User = column_ifexists(\"Details_User\", \"\"),\r\n    SysetmID = column_ifexists(\"Details_SystemID\", \"\"),\r\n   ClientID = column_ifexists(\"Details_ClientID\", \"\")",
                "queryFrequency": "PT6H",
                "queryPeriod": "PT6H",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "tactics": [
                    "CredentialAccess"
                ],
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5M",
                        "matchingMethod": "AllEntities"
                    }
                },
                "eventGroupingSettings": {
                    "aggregationKind": "SingleAlert"
                },
                "customDetails": {
                    "SAP_User": "User",
                    "SAP_Client": "ClientID",
                    "SAP_System_I_D": "SysetmID"
                },
                "entityMappings": [
                    {
                        "entityType": "Account",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Email"
                            }
                        ]
                    },
                    {
                        "entityType": "IP",
                        "fieldMappings": [
                            {
                                "identifier": "Address",
                                "columnName": "TerminalIPv6_s"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic28-id'))]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2021-03-01-preview",
            "properties": {
                "displayName": "(Preview) SAP - Medium - Critical authorizations assignment - New Authorization Value",
                "description": "Identifies assignment of a critical authorization object value to a new user.\n\nSource Action: Assign a new authorization object / update existing one in a role using PFCG.\n\nCritical authorization objects should be maintained in watchlist \"\"SAP - Critical Authorization Objects\"\"\n\n*Data Sources: SAPcon -  Change Documents Log*",
                "severity": "Medium",
                "enabled": true,
                "query": "// New Assigned Objects\r\nlet ObjectClassRoles = 'PFCG';\r\nlet TableName = 'CD1251';\r\nlet UsersRoles = 'AGR_USERS';\r\nlet Insert = \"I\";\r\nlet NotInUse = 'NOT_IN_USE';\r\nlet logsThreshold = 3; // 3 seconds\r\n// Audit Log Classes - Authorizations for user changed\r\nlet AuditClasses = dynamic(['AUR','AUT']); // Authorization/Authorization Profile &B created / changed.\r\n// Roles Change Documents - Extract Auth Object and Obj Field\r\nlet allHistory = ago(0d);\r\nlet alertSched = ago(6h); // Please maintain according to schedule\r\n// Maintain these if System doesn't have CR's\r\nlet fixedChangeDocs = datatable(User_s : string, ObjectClass_s : string, TableName_s : string, TypeofChange_Item_s : string , ChangedTableKey_s : string, ObjectID_s : string, TimeGenerated : datetime, ValueNew_s : string, SystemID_s : string)[];\r\nlet ChangeDocs = \r\nunion isfuzzy=true table(\"ABAPChangeDocsLog_CL\"), fixedChangeDocs;\r\nlet RolesAuthObject = ChangeDocs  \r\n    | where TimeGenerated >= alertSched\r\n    | where ObjectClass_s == ObjectClassRoles and TableName_s == TableName // Role-Obj-Profile-ObjField\r\n    | where TypeofChange_Item_s in ('J', 'I', 'U') //  Insert\r\n    | extend RoleObjProfileObjFieldVer = ChangedTableKey_s, Role = ObjectID_s\r\n    | extend ObjFieldValue = ValueNew_s    \r\n    | extend ObjField = trim(@\"\\s*?\", extract(@\"(^.{1,30})\\s*?(.{1,10})\\s*?(.{1,12})\\s*?(.{1,10})\\s*?\\d{6}\", 4, RoleObjProfileObjFieldVer, typeof(string)))\r\n    | extend AuthObject = trim(@\"\\s*?\", extract(@\"(^.{1,30})\\s*?(.{1,10})\\s*?(.{1,12})\\s*?(.{1,10})\\s*?\\d{6}\", 2, RoleObjProfileObjFieldVer, typeof(string)))\r\n    | extend TimeGenRoleAuth = TimeGenerated;\r\nlet ComplexAuth = _GetWatchlist('SAP - Critical Authorizations');\r\nlet SimpleAuth = _GetWatchlist('SAP - Critical Authorizations');\r\nlet fixedComplexAuth = datatable(AuthorizationObject: string, AuthorizationField: string, AuthorizationValue: string, ActivityField: string, Activity: string)\r\n    ['S_DEVELOP', 'OBJTYPE', 'DEBUG', 'ACTVT', '*',\r\n    'S_DEVELOP', 'OBJTYPE', 'DEBUG', 'ACTVT', '02']; // Maintain these if WatchList is not available\r\nlet fixedSimpleAuth = datatable(AuthorizationObject: string, AuthorizationField: string, AuthorizationValue: string, ActivityField: string, Activity: string)\r\n    ['S_TCODE', 'TCD', '*', 'NOT_IN_USE', '',\r\n    'S_TZONE', 'ACTVT', '*', 'NOT_IN_USE', '']; // Maintain these if WatchList is not available\r\nlet usersinRole = \r\n    ChangeDocs  \r\n    | where TimeGenerated <= allHistory\r\n    | where ObjectClass_s == ObjectClassRoles // Roles\r\n        and TableName_s == UsersRoles // Users Roles\r\n        and TypeofChange_Item_s == Insert // Insert \r\n    | extend UserAssigned = extract(@\"^.{1,33}\\s*?(.{1,12})\\s*?\\d{16}\", 1, ChangedTableKey_s)\r\n    | extend Role = ObjectID_s\r\n    | summarize by SystemID_s, Role, UserAssigned;\r\nlet RolesAuthObjectCheck =     \r\n        RolesAuthObject     \r\n        | extend ObjFieldVal = ObjFieldValue\r\n        | lookup kind = leftouter \r\n            (RolesAuthObject \r\n            | extend ActivityVal = ObjFieldValue)\r\n            on Role, AuthObject;\r\nlet complexScenario = union ComplexAuth, fixedComplexAuth\r\n    | where ActivityField != NotInUse\r\n    | summarize by AuthorizationObject, AuthorizationField, AuthorizationValue, ActivityField, Activity\r\n    | lookup kind = inner (RolesAuthObjectCheck)\r\n        on $left.AuthorizationObject == $right.AuthObject \r\n        and $left.AuthorizationField == $right.ObjField \r\n        and $left.AuthorizationValue == $right.ObjFieldValue\r\n        and $left.ActivityField == $right.ObjField1\r\n        and $left.Activity == $right.ActivityVal;\r\nlet simpleScenario = \r\n    union SimpleAuth, fixedSimpleAuth\r\n    | where ActivityField == NotInUse\r\n    | summarize by AuthorizationObject, AuthorizationField, AuthorizationValue, ActivityField, Activity \r\n    | lookup  kind = inner (RolesAuthObject)\r\n        on $left.AuthorizationObject == $right.AuthObject \r\n        and $left.AuthorizationField == $right.ObjField \r\n        and $left.AuthorizationValue == $right.ObjFieldValue;\r\nlet GetEntities =\r\n    ABAPAuditLog_CL \r\n    | where MessageID_s in (AuditClasses)\r\n    | summarize by TimeGenerated, ClientID_s, TerminalIPv6_s, User_s, Host_s, Email_s\r\n    | extend TimeGenAudit = TimeGenerated;\r\nunion complexScenario, simpleScenario\r\n| lookup kind = inner (usersinRole) on SystemID_s, Role\r\n| lookup kind = leftouter (GetEntities) on User_s\r\n| where abs(datetime_diff('second', TimeGenRoleAuth, TimeGenAudit)) <= logsThreshold or\r\nisnull(TimeGenAudit)\r\n| project \r\n    // Details\r\nTimeGenRoleAuth, SystemID_s, ClientID_s, Role, User_s, UserAssigned, AuthorizationObject, AuthorizationField, AuthorizationValue, ActivityField, Activity, Email_s, TerminalIPv6_s, Host_s",
                "queryFrequency": "PT6H",
                "queryPeriod": "PT6H",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "tactics": [
                    "PrivilegeEscalation"
                ],
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5M",
                        "matchingMethod": "AllEntities"
                    }
                },
                "eventGroupingSettings": {
                    "aggregationKind": "SingleAlert"
                },
                "customDetails": {
                    "SAP_System_I_D": "SystemID_s",
                    "SAP_Client": "ClientID_s",
                    "SAP_User": "User_s"
                },
                "entityMappings": [
                    {
                        "entityType": "Account",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Email_s"
                            }
                        ]
                    },
                    {
                        "entityType": "IP",
                        "fieldMappings": [
                            {
                                "identifier": "Address",
                                "columnName": "TerminalIPv6_s"
                            }
                        ]
                    },
                    {
                        "entityType": "Host",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Host_s"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic29-id'))]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2021-03-01-preview",
            "properties": {
                "displayName": "(Preview) SAP - Medium - Critical authorizations assignment - New User Assignment",
                "description": "Identifies assignment of a critical authorization object value to a new user.\n\nSource Action: Assign a new user to a role which holds critical authorization values using SU01/PFCG.\n\nCritical authorization objects should be maintained in watchlist \"\"SAP - Critical Authorization Objects\"\"\n\n*Data Sources: SAPcon -  Change Documents Log*",
                "severity": "Medium",
                "enabled": true,
                "query": "// New Assigned Users\r\nlet ObjectClassRoles = 'PFCG';\r\nlet TableName = 'CD1251';\r\nlet UsersRoles = 'AGR_USERS';\r\nlet Insert = \"I\";\r\nlet NotInUse = 'NOT_IN_USE';\r\nlet logsThreshold = 3; // 3 seconds\r\n// Audit Log Classes - Authorizations for user changed\r\nlet AuditClasses = dynamic(['AUB','AUD']); // Authorizations for user &A changed. User Master Record Changed\r\n// Roles Change Documents - Extract Auth Object and Obj Field\r\nlet allHistory = ago(0d);\r\nlet alertSched = ago(6h); // Please maintain according to schedule\r\n// Maintain these if System doesn't have CR's\r\nlet fixedChangeDocs = datatable(User_s : string, ObjectClass_s : string, TableName_s : string, TypeofChange_Item_s : string , ChangedTableKey_s : string, ObjectID_s : string, TimeGenerated : datetime, ValueNew_s : string, SystemID_s : string)[];\r\nlet ChangeDocs = \r\nunion isfuzzy=true table(\"ABAPChangeDocsLog_CL\"), fixedChangeDocs;\r\nlet RolesAuthObject = ChangeDocs  \r\n    | where TimeGenerated <= allHistory\r\n    | where ObjectClass_s == ObjectClassRoles and TableName_s == TableName // Role-Obj-Profile-ObjField\r\n    | where TypeofChange_Item_s in ('J', 'I', 'U') //  Insert\r\n    | extend RoleObjProfileObjFieldVer = ChangedTableKey_s, Role = ObjectID_s\r\n    | extend ObjFieldValue = ValueNew_s    \r\n    | extend ObjField = trim(@\"\\s*?\", extract(@\"(^.{1,30})\\s*?(.{1,10})\\s*?(.{1,12})\\s*?(.{1,10})\\s*?\\d{6}\", 4, RoleObjProfileObjFieldVer, typeof(string)))\r\n    | extend AuthObject = trim(@\"\\s*?\", extract(@\"(^.{1,30})\\s*?(.{1,10})\\s*?(.{1,12})\\s*?(.{1,10})\\s*?\\d{6}\", 2, RoleObjProfileObjFieldVer, typeof(string)))\r\n    | summarize by SystemID_s, Role, AuthObject, ObjField, ObjFieldValue;\r\nlet ComplexAuth = _GetWatchlist('SAP - Critical Authorizations');\r\nlet SimpleAuth = _GetWatchlist('SAP - Critical Authorizations');\r\nlet fixedComplexAuth = datatable(AuthorizationObject: string, AuthorizationField: string, AuthorizationValue: string, ActivityField: string, Activity: string)\r\n    ['S_DEVELOP', 'OBJTYPE', 'DEBUG', 'ACTVT', '*',\r\n    'S_DEVELOP', 'OBJTYPE', 'DEBUG', 'ACTVT', '02']; // Maintain these if WatchList is not available\r\nlet fixedSimpleAuth = datatable(AuthorizationObject: string, AuthorizationField: string, AuthorizationValue: string, ActivityField: string, Activity: string)\r\n    ['S_TCODE', 'TCD', '*', 'NOT_IN_USE', '',\r\n    'S_TZONE', 'ACTVT', '*', 'NOT_IN_USE', '']; // Maintain these if WatchList is not available\r\nlet usersinRole = \r\n    ChangeDocs  \r\n    | where TimeGenerated >= alertSched\r\n    | where ObjectClass_s == ObjectClassRoles // Roles\r\n        and TableName_s == UsersRoles // Users Roles\r\n        and TypeofChange_Item_s == Insert // Insert \r\n    | extend UserAssigned = extract(@\"^.{1,33}\\s*?(.{1,12})\\s*?\\d{16}\", 1, ChangedTableKey_s)\r\n    | extend Role = ObjectID_s\r\n    | extend TimeGenUserinRole = TimeGenerated;\r\n    //| summarize by TimeGenerated, SystemID_s, ClientID_s, Role, UserAssigned, User_s\r\nlet RolesAuthObjectCheck =     \r\n        RolesAuthObject     \r\n        | extend ObjFieldVal = ObjFieldValue\r\n        | lookup kind = leftouter \r\n            (RolesAuthObject \r\n            | extend ActivityVal = ObjFieldValue)\r\n            on Role, AuthObject;\r\nlet complexScenario = \r\n    union ComplexAuth, fixedComplexAuth\r\n    | where ActivityField != NotInUse\r\n    | summarize by AuthorizationObject, AuthorizationField, AuthorizationValue, ActivityField, Activity\r\n    | lookup kind = inner (RolesAuthObjectCheck)\r\n        on $left.AuthorizationObject == $right.AuthObject \r\n        and $left.AuthorizationField == $right.ObjField \r\n        and $left.AuthorizationValue == $right.ObjFieldValue\r\n        and $left.ActivityField == $right.ObjField1\r\n        and $left.Activity == $right.ActivityVal;\r\nlet simpleScenario = \r\n    union SimpleAuth, fixedSimpleAuth\r\n    | where ActivityField == NotInUse\r\n    | summarize by AuthorizationObject, AuthorizationField, AuthorizationValue, ActivityField, Activity \r\n    | lookup kind = inner (RolesAuthObject)\r\n        on $left.AuthorizationObject == $right.AuthObject \r\n        and $left.AuthorizationField == $right.ObjField \r\n        and $left.AuthorizationValue == $right.ObjFieldValue;\r\nlet GetEntites =     \r\n    ABAPAuditLog_CL \r\n    | where TimeGenerated >= alertSched\r\n    | where MessageID_s in (AuditClasses)\r\n    | summarize by TimeGenerated, TerminalIPv6_s, ClientID_s, User_s, Host_s, Email_s\r\n    | extend TimeGenAudit = TimeGenerated;  \r\nunion complexScenario, simpleScenario\r\n| lookup kind = inner (usersinRole) on SystemID_s, Role\r\n| lookup kind = leftouter (GetEntites) on User_s\r\n| where abs(datetime_diff('second', TimeGenUserinRole, TimeGenAudit)) <= logsThreshold or\r\nisnull(TimeGenAudit)\r\n| project \r\n    // Details\r\nTimeGenUserinRole , SystemID_s, ClientID_s, Role, User_s, UserAssigned, AuthorizationObject, AuthorizationField, AuthorizationValue, ActivityField, Activity, Email_s, TerminalIPv6_s, Host_s",
                "queryFrequency": "PT6H",
                "queryPeriod": "PT6H",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "tactics": [
                    "PrivilegeEscalation"
                ],
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5M",
                        "matchingMethod": "AllEntities"
                    }
                },
                "eventGroupingSettings": {
                    "aggregationKind": "SingleAlert"
                },
                "customDetails": {
                    "SAP_Client": "ClientID_s",
                    "SAP_User": "User_s",
                    "SAP_System_I_D": "SystemID_s"
                },
                "entityMappings": [
                    {
                        "entityType": "Account",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Email_s"
                            }
                        ]
                    },
                    {
                        "entityType": "IP",
                        "fieldMappings": [
                            {
                                "identifier": "Address",
                                "columnName": "TerminalIPv6_s"
                            }
                        ]
                    },
                    {
                        "entityType": "Host",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Host_s"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic30-id'))]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2021-03-01-preview",
            "properties": {
                "displayName": "(Preview) SAP - Medium - Debugging Activities",
                "description": "Identifies all debugging related activities.\n\nSource Action: Activate Debug (\"/h\") in system, debug an active process, add breakpoint to source code etc.\n\n**Recommended for Production only**\n\n*Data Sources: SAPcon -  Audit Log*",
                "severity": "Medium",
                "enabled": true,
                "query": "let Role = 'Production';\r\nlet DebuggerProgram = 'RSTPDAMAIN';\r\nlet AuditClasses = dynamic(['CUK','CUL','CUM','CUN','CUO','CUP']); // Audit Log Classes - Debug Activities\r\nlet allSystemRoles = dynamic(['Sandbox','Developement','QualityAssurance','Training','Production']); // Available System Roles\r\nlet allSystemUsage = dynamic (['ERP','CRM','BW','Solman','Gateway','Enterprise Portal']); // Available System Usages\r\n// Get Relevant Systems from WatchList\r\nlet systemID = _GetWatchlist('SAP - Systems')\r\n| where SystemRole == Role; // Reccommended is Production only\r\nlet fixedSID = datatable(SystemID:string, SystemRole:string, SystemUsage:string)\r\n// Maintain these if WatchList is not available    \r\n    [\"S4H\",\"Production\",\"ERP\",\r\n    \"XXX\",\"Sandbox\",\"BW\"]\r\n    | where SystemRole == Role // Reccommended is Production only\r\n; \r\nlet SystemUnited = union systemID, fixedSID\r\n| summarize by SystemID, SystemRole, SystemUsage;\r\n//| where SystemRole in (allSystemRoles); // Use this for all system roles\r\nABAPAuditLog_CL \r\n    | where MessageID_s in (AuditClasses) or ABAPProgramName_s == DebuggerProgram // Get logs by messege ID or program name\r\n    | extend Object = extract(@\":\\s\\(?(\\w{1,}\\s?-?\\w{1,})\", 1, MessageText_s, typeof(string)) // Extract Object\r\n    | extend Action = extract(@\":\\s\\(?(\\w{1,}\\s?-?\\w{1,}.{1,}?)\\)?\\(\", 1, MessageText_s, typeof(string)) // Extract Action\r\n    | extend Program = extract(@\"Prgm:(\\w{1,})\", 1, MessageText_s, typeof(string)) // Extract Program\r\n    | extend Function = extract(@\"Funct:(\\w{1,})\", 1, MessageText_s, typeof(string)) // Extract Function\r\n    | extend Include = extract(@\"Incl:(\\w{1,})\", 1, MessageText_s, typeof(string)) // Extract Include\r\n    | extend Line = extract(@\"Line:(\\w{1,})\", 1, MessageText_s, typeof(string)) // Extract Line\r\n    | project-rename SystemID = SystemID_s\r\n    | lookup kind=inner (SystemUnited) on SystemID\r\n    | order by TimeGenerated asc\r\n    | project TimeGenerated, Instance_s, ClientID_s ,User_s, MessageText_s, ABAPProgramName_s, TransactionCode_s, SystemID, SystemRole, SystemUsage,MessageID_s, Email_s, TerminalIPv6_s, Host_s, Object , Action, Program, Function, Include, Line",
                "queryFrequency": "PT3H",
                "queryPeriod": "PT3H",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "tactics": [
                    "Discovery"
                ],
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5M",
                        "matchingMethod": "AllEntities"
                    }
                },
                "eventGroupingSettings": {
                    "aggregationKind": "SingleAlert"
                },
                "customDetails": {
                    "SAP_User": "User_s",
                    "SAP_System_I_D": "SystemID",
                    "SAP_Instance": "Instance_s",
                    "SAP_Client": "ClientID_s"
                },
                "entityMappings": [
                    {
                        "entityType": "Account",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Email_s"
                            }
                        ]
                    },
                    {
                        "entityType": "IP",
                        "fieldMappings": [
                            {
                                "identifier": "Address",
                                "columnName": "TerminalIPv6_s"
                            }
                        ]
                    },
                    {
                        "entityType": "Host",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Host_s"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic31-id'))]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2021-03-01-preview",
            "properties": {
                "displayName": "(Preview) SAP - Medium - Execution of Obsolete or Insecure Function Module",
                "description": "Identifies execution of an obsolete/insecure ABAP Function Module.\n\nSource Action: Execute an obsolete/insecure function module directly using SE37.\n\n**Recommended for Production only**\n\nObsolete functions should be maintained in \"SAP - Obsolete Function Modules\" Watchlist.\nTable logging changes should be activated for table \"EUFUNC\" in backend. (SE13)\n\n*Data Sources: SAPcon -  Table Data Log*",
                "severity": "Medium",
                "enabled": true,
                "query": "// Define variables\r\nlet RelTable = \"EUFUNC\"; // Relevant table\r\nlet AuditLogIn = dynamic(['AU1', 'AU5']); // Messages of connect with user\r\nlet ObsoleteModules =  _GetWatchlist('SAP - Obsolete Function Modules');\r\n// Maintain if watchlist is not available\r\nlet fixedModules = datatable(FunctionModule:string)['TH_SAPREL','TH_SAPREL2', 'TH_SAPREL3','SUSR_RFC_USER_INTERFACE','RFC_ABAP_INSTALL_AND_RUN']; \r\nlet UnitedModules =\r\ntoscalar(union fixedModules, ObsoleteModules\r\n| summarize FunctionModules =  make_set(FunctionModule));\r\n// Query logic\r\nlet LastLogin = \r\nABAPAuditLog_CL\r\n| where MessageID_s in (AuditLogIn)\r\n| summarize TimeGenerated = arg_max(TimeGenerated, *) by SystemID_s, ClientID_s, User_s; // Get last connection date for user\r\nABAPTableDataLog_CL\r\n| where TableName_s == RelTable\r\n| extend Module = extract(@\"\\s+(.{1,}\\b)\\s+\", 1, LogKey_s, typeof(string)) // Extract Function Module\r\n| extend FunctionGroup = extract(@\"^FL([^\\s]*)\\s\", 1, LogKey_s, typeof(string)) // Extract Function Group\r\n| extend ExecutionVariant = extract(@\"\\b(\\w+)$\", 1, LogKey_s, typeof(string)) // Extract Execution Varient\r\n| where Module in (UnitedModules) // Module is obsolete\r\n| lookup kind=inner LastLogin on $left.UserName_s == $right.User_s\r\n| project TimeGenerated, SystemID_s, ClientID_s, UserName_s, Email_s, TerminalIPv6_s, Host_s, Module, FunctionGroup, ExecutionVariant",
                "queryFrequency": "PT2H",
                "queryPeriod": "PT2H",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "tactics": [
                    "Discovery",
                    "CommandAndControl"
                ],
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5M",
                        "matchingMethod": "AllEntities"
                    }
                },
                "eventGroupingSettings": {
                    "aggregationKind": "SingleAlert"
                },
                "customDetails": {
                    "SAP_System_I_D": "SystemID_s",
                    "SAP_Client": "ClientID_s",
                    "SAP_User": "UserName_s"
                },
                "entityMappings": [
                    {
                        "entityType": "Account",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Email_s"
                            }
                        ]
                    },
                    {
                        "entityType": "IP",
                        "fieldMappings": [
                            {
                                "identifier": "Address",
                                "columnName": "TerminalIPv6_s"
                            }
                        ]
                    },
                    {
                        "entityType": "Host",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Host_s"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic32-id'))]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2021-03-01-preview",
            "properties": {
                "displayName": "(Preview) SAP - Medium - Execution of Obsolete/Insecure Program",
                "description": "Identifies execution of an obsolete/insecure ABAP program.\nSource Action: Execute a program directly using SE38/SA38/SE80 or by using a background job.\n**Recommended for Production only**\nObsolete programs should be maintained in \"SAP - Obsolete Programs\" Watchlist\n*Data Sources: SAPcon -  Audit Log*",
                "severity": "Medium",
                "enabled": true,
                "query": "// Define Variables\r\nlet AuditClasses = dynamic(['AUW']); // Audit Log Classes - Report Started\r\nlet ObsoletePrograms = _GetWatchlist(\"SAP - Obsolete Programs\");\r\n// Maintain if watchlist is not available\r\nlet fixedObPrograms = datatable(ABAPProgram:string)['RSAU_READ_LOG'];\r\nlet UnitedPrograms =\r\ntoscalar(union fixedObPrograms, ObsoletePrograms\r\n| summarize Programs = make_set(ABAPProgram));\r\n// Query logic\r\nABAPAuditLog_CL \r\n| where MessageID_s in (AuditClasses)\r\n| where ABAPProgramName_s in (UnitedPrograms) // The program is obsolete\r\n| project TimeGenerated, Instance_s,SystemID_s, ClientID_s, User_s, ABAPProgramName_s, MessageText_s, TransactionCode_s, MessageID_s, Email_s, TerminalIPv6_s, Host_s",
                "queryFrequency": "PT2H",
                "queryPeriod": "PT2H",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "tactics": [
                    "Discovery",
                    "CommandAndControl"
                ],
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5M",
                        "matchingMethod": "AllEntities"
                    }
                },
                "eventGroupingSettings": {
                    "aggregationKind": "SingleAlert"
                },
                "customDetails": {
                    "SAP_System_I_D": "SystemID_s",
                    "SAP_Client": "ClientID_s",
                    "SAP_User": "User_s",
                    "SAP_Instance": "Instance_s"
                },
                "entityMappings": [
                    {
                        "entityType": "Account",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Email_s"
                            }
                        ]
                    },
                    {
                        "entityType": "IP",
                        "fieldMappings": [
                            {
                                "identifier": "Address",
                                "columnName": "TerminalIPv6_s"
                            }
                        ]
                    },
                    {
                        "entityType": "Host",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Host_s"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic33-id'))]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2021-03-01-preview",
            "properties": {
                "displayName": "(Preview) SAP - Medium - FTP for non authorized servers",
                "description": "Identifies FTP connection for non authorized server.\nMaintain new Watchlist, similar to SAPFTP_SERVERS \nSource Action: Create a new FTP connection e.g. by using Function Module FTP_CONNECT.\n\n*Data Sources: SAPcon -  Audit Log*",
                "severity": "Medium",
                "enabled": true,
                "query": "// Define variables\r\nlet AuditClasses = dynamic(['DU8']); // Message of Successfull FTP Connection\r\nlet FTPSafeConnections = _GetWatchlist(\"SAP - FTP Servers\");\r\nlet fixedConnections = datatable(Client: string, Description: string,\r\nFTP_Server_Name: string, FTP_Server_Port: string)\r\n    // Maintain these if WatchList is not available    \r\n    [100, \"description\", \"http://ourorgftpserver.com/\", 22]\r\n;\r\nlet UnitedConnections = toscalar(union kind=inner FTPSafeConnections, fixedConnections | summarize Connections = make_set(FTP_Server_Name));\r\n// Query logic\r\nABAPAuditLog_CL\r\n| where MessageID_s in (AuditClasses)\r\n| where TerminalIPv6_s !in (UnitedConnections) // The IP is unknown\r\n| project TimeGenerated, Instance_s ,User_s, SystemID_s, ClientID_s, Email_s, TerminalIPv6_s, Host_s",
                "queryFrequency": "PT6H",
                "queryPeriod": "PT6H",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "tactics": [
                    "Discovery",
                    "InitialAccess",
                    "CommandAndControl"
                ],
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5M",
                        "matchingMethod": "AllEntities"
                    }
                },
                "eventGroupingSettings": {
                    "aggregationKind": "SingleAlert"
                },
                "customDetails": {
                    "SAP_Client": "ClientID_s",
                    "SAP_User": "User_s",
                    "SAP_Instance": "Instance_s",
                    "SAP_System_I_D": "SystemID_s"
                },
                "entityMappings": [
                    {
                        "entityType": "Account",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Email_s"
                            }
                        ]
                    },
                    {
                        "entityType": "IP",
                        "fieldMappings": [
                            {
                                "identifier": "Address",
                                "columnName": "TerminalIPv6_s"
                            }
                        ]
                    },
                    {
                        "entityType": "Host",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Host_s"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic34-id'))]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2021-03-01-preview",
            "properties": {
                "displayName": "(Preview) SAP - Medium - Insecure FTP servers configuration",
                "description": " Identifies Insecure FTP servers configuration - FTP Whitelist is empty / Contains Placeholders.\n\nSource Action: Do not maintain / maintain values which contains placeholders in table SAPFTP_SERVERS using maintenance view SAPFTP_SERVERS_V. (SM30)\n\n*Data Sources: SAPcon -  Audit Log*",
                "severity": "Medium",
                "enabled": true,
                "query": "// Define variables\r\nlet AuditClasses = dynamic(['DU1', 'DU2']); // Messages of FTP Whitelist is empty / Contains Placeholders\r\n// Query logic\r\nABAPAuditLog_CL\r\n| where MessageID_s in (AuditClasses)\r\n| project TimeGenerated, Instance_s, SystemID_s, ClientID_s, User_s, Email_s, TerminalIPv6_s, Host_s, Reason = MessageText_s",
                "queryFrequency": "PT6H",
                "queryPeriod": "PT6H",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "tactics": [
                    "InitialAccess",
                    "CommandAndControl"
                ],
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5M",
                        "matchingMethod": "AllEntities"
                    }
                },
                "eventGroupingSettings": {
                    "aggregationKind": "SingleAlert"
                },
                "customDetails": {
                    "SAP_System_I_D": "SystemID_s",
                    "SAP_Client": "ClientID_s",
                    "SAP_Instance": "Instance_s",
                    "SAP_User": "User_s"
                },
                "entityMappings": [
                    {
                        "entityType": "Account",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Email_s"
                            }
                        ]
                    },
                    {
                        "entityType": "IP",
                        "fieldMappings": [
                            {
                                "identifier": "Address",
                                "columnName": "TerminalIPv6_s"
                            }
                        ]
                    },
                    {
                        "entityType": "Host",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Host_s"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic35-id'))]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2021-03-01-preview",
            "properties": {
                "displayName": "(Preview) SAP - Medium - Multiple Files Download",
                "description": "Identifies multiple files downloads for a user within a specific timerange.\n\nSource Action: Download multiple files while using SAPGui to Excel/Lists etc.\n\n*Data Sources: SAPcon -  Audit Log*",
                "severity": "Medium",
                "enabled": true,
                "query": "// Define variables\r\nlet NumberOfDownloads = 10; // Number of downloads of user as threshold\r\nlet HoursBucket = 2h; // How much time between buckets\r\nlet AuditClasses = dynamic([\"AUY\"]); // Relevant message\r\n// Query logic\r\nABAPAuditLog_CL // Get all downloads\r\n| where MessageID_s in (AuditClasses)\r\n| summarize DownloadsByUser = count() by bin(TimeGenerated, HoursBucket), SystemID_s, ClientID_s, User_s, TerminalIPv6_s, Email_s, Host_s\r\n| where DownloadsByUser >= NumberOfDownloads // User downloaded more than threshold\r\n| project SystemID_s, ClientID_s, User_s, Email_s, TerminalIPv6_s, Host_s,DownloadsByUser",
                "queryFrequency": "PT12H",
                "queryPeriod": "PT12H",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "tactics": [
                    "Collection",
                    "Exfiltration",
                    "CredentialAccess"
                ],
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5M",
                        "matchingMethod": "AllEntities"
                    }
                },
                "eventGroupingSettings": {
                    "aggregationKind": "SingleAlert"
                },
                "customDetails": {
                    "SAP_User": "User_s",
                    "SAP_Client": "ClientID_s",
                    "SAP_System_I_D": "SystemID_s"
                },
                "entityMappings": [
                    {
                        "entityType": "Account",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Email_s"
                            }
                        ]
                    },
                    {
                        "entityType": "IP",
                        "fieldMappings": [
                            {
                                "identifier": "Address",
                                "columnName": "TerminalIPv6_s"
                            }
                        ]
                    },
                    {
                        "entityType": "Host",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Host_s"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic36-id'))]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2021-03-01-preview",
            "properties": {
                "displayName": "(Preview) SAP - Medium - Multiple Logons by IP",
                "description": "Identifies logon of several users from same IP within scheduled time interval.\n\nSource Action: Logon using several users thorugh the same IP.\n\n*Data Sources: SAPcon -  Audit Log*",
                "severity": "Medium",
                "enabled": true,
                "query": "// Define variables\r\nlet AuditClasses = dynamic(['AU1', 'AU5']); // Audit Log Classes - Dialog Logon Successful, RFC Logon Successful\r\nlet DialogLogonTypes = dynamic(['A', 'C', 'F', 'R', 'S', 'U', 'H', 'u', ' ']); // Dialog / CPIC / RFC Int / RFC Ext / SRFC / User Switch / HTTP / Restore Session / API Call\r\nlet excNetworks = _GetWatchlist('SAP - Excluded Networks'); // Networks that should be removed from query\r\nlet fixedNetworks =\r\ndatatable(Network:string)\r\n// Maintain these if WatchList is not available    \r\n    [\"111.68.128.0/1\", \"123.68.128.0/1\", \"\"]\r\n; \r\nlet UnitedNetworks =\r\ntoscalar(union excNetworks, fixedNetworks\r\n| summarize Networks = make_set(Network));\r\nlet UsersperIP = 1;\r\n// Query logic\r\nABAPAuditLog_CL \r\n| where MessageID_s in (AuditClasses)\r\n| where Variable1_s in (DialogLogonTypes)\r\n| where TerminalIPv6_s !in (UnitedNetworks)\r\n| extend UserandEmail = pack(\"ID\", User_s, \"Email\", Email_s)\r\n| summarize CountUsers = dcount(strcat(User_s, \"_&_\", Email_s)), Users = make_set(UserandEmail), StartTime = min(TimeGenerated), EndTime = max(TimeGenerated) \r\n    by SystemID_s, ClientID_s, TerminalIPv6_s\r\n| where CountUsers > UsersperIP\r\n| mv-expand Users \r\n| evaluate bag_unpack(Users, \"User_\")\r\n| project SystemID_s , ClientID_s, TerminalIPv6_s, StartTime, EndTime,\r\n    User = column_ifexists(\"User_ID\", \"\"),    \r\n    Email = column_ifexists(\"User_Email\", \"\")\r\n",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "tactics": [
                    "InitialAccess"
                ],
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5M",
                        "matchingMethod": "AllEntities"
                    }
                },
                "eventGroupingSettings": {
                    "aggregationKind": "SingleAlert"
                },
                "customDetails": {
                    "SAP_Client": "ClientID_s",
                    "SAP_System_I_D": "SystemID_s",
                    "SAP_User": "User"
                },
                "entityMappings": [
                    {
                        "entityType": "Account",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Email"
                            }
                        ]
                    },
                    {
                        "entityType": "IP",
                        "fieldMappings": [
                            {
                                "identifier": "Address",
                                "columnName": "TerminalIPv6_s"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic37-id'))]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2021-03-01-preview",
            "properties": {
                "displayName": "(Preview) SAP - Medium - Multiple Logons by User",
                "description": "Identifies logon of the same user from several terminals within scheduled time interval.\n\nSource Action: Logon using the same user thorugh different IP's.\n\n*Data Sources: SAPcon -  Audit Log*",
                "severity": "Medium",
                "enabled": true,
                "query": "// Define variables\r\n// Audit Log Classes - Dialog Logon Successful, RFC Logon Successful\r\nlet AuditClasses = dynamic(['AU1','AU5']);\r\n// Dialog / CPIC / RFC Int / RFC Ext / SRFC / User Switch / HTTP / Restore Session / API Call\r\nlet DialogLogonTypes = dynamic(['A', 'C', 'F', 'R', 'S', 'U', 'H', 'u', ' ']);\r\nlet excUsers = _GetWatchlist('SAP - Excluded Users'); // Users that should be removed from query\r\nlet fixedExcUsers = datatable(User:string)\r\n// Maintain these if WatchList is not available    \r\n    [\"SYSWF\"]\r\n; \r\nlet UnitedExcUsers =\r\ntoscalar(union excUsers, fixedExcUsers\r\n| summarize Users = make_set(User));\r\nlet IPThreshold = 1;\r\n// Query Logic\r\nABAPAuditLog_CL \r\n| where MessageID_s in (AuditClasses)\r\n| where Variable1_s in (DialogLogonTypes)\r\n| where User_s !in (UnitedExcUsers)\r\n| summarize CountIP = dcount(TerminalIPv6_s), IPs = make_set(TerminalIPv6_s), StartTime = min(TimeGenerated), EndTime = max(TimeGenerated) by SystemID_s, ClientID_s, User_s, Email_s\r\n| where CountIP > IPThreshold // Count of IP logins from the user is higher than threshold\r\n| mv-expand IPs to typeof(string ) // Show for each IP\r\n| project SystemID_s, ClientID_s, User_s, StartTime, EndTime,\r\n    Email_s, IPs",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "tactics": [
                    "PreAttack",
                    "CredentialAccess",
                    "InitialAccess",
                    "Collection"
                ],
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5M",
                        "matchingMethod": "AllEntities"
                    }
                },
                "eventGroupingSettings": {
                    "aggregationKind": "SingleAlert"
                },
                "customDetails": {
                    "SAP_Client": "ClientID_s",
                    "SAP_System_I_D": "SystemID_s"
                },
                "entityMappings": [
                    {
                        "entityType": "Account",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Email_s"
                            }
                        ]
                    },
                    {
                        "entityType": "IP",
                        "fieldMappings": [
                            {
                                "identifier": "Address",
                                "columnName": "IPs"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic38-id'))]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2021-03-01-preview",
            "properties": {
                "displayName": "(Preview) SAP - Medium - Multiple Spool Executions",
                "description": "Identifies multiple spools for a user within a specific timerange.\n\nSource Action: Create and execute multiple Spool Jobs from any type by a user. (SP01)\n\n*Data Sources: SAPcon -  Spool Log*",
                "severity": "Medium",
                "enabled": true,
                "query": "// Define variables\r\nlet AuditLogIn = dynamic(['AU1', 'AU5']); // Messages of connect with user\r\nlet NumberOfRequests = 3; // Number of requests as threshold\r\nlet HoursBucket = 2h; // // How much time between buckets\r\n// Query logic\r\nlet LastLogin = \r\nABAPAuditLog_CL\r\n| where MessageID_s in (AuditLogIn)\r\n| summarize TimeGenerated = arg_max(TimeGenerated, *) by SystemID_s, ClientID_s, User_s, Instance_s; // Get last connection date for user\r\nABAPSpoolLog_CL // Get all spool requests\r\n| summarize UserRequests = count() by bin(TimeGenerated, HoursBucket), SystemID_s, ClientID_s, User_s, Instance_s\r\n| where UserRequests >= NumberOfRequests // User requested to print more than threshold\r\n| lookup kind=inner LastLogin on User_s // Check IP of last login\r\n| project TimeGenerated, Instance_s, SystemID_s, ClientID_s, User_s, Email_s, TerminalIPv6_s, Host_s, UserRequests",
                "queryFrequency": "PT12H",
                "queryPeriod": "PT12H",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "tactics": [
                    "CredentialAccess",
                    "Collection",
                    "Exfiltration"
                ],
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5M",
                        "matchingMethod": "AllEntities"
                    }
                },
                "eventGroupingSettings": {
                    "aggregationKind": "SingleAlert"
                },
                "customDetails": {
                    "SAP_User": "User_s",
                    "SAP_Instance": "Instance_s",
                    "SAP_System_I_D": "SystemID_s",
                    "SAP_Client": "ClientID_s"
                },
                "entityMappings": [
                    {
                        "entityType": "Account",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Email_s"
                            }
                        ]
                    },
                    {
                        "entityType": "IP",
                        "fieldMappings": [
                            {
                                "identifier": "Address",
                                "columnName": "TerminalIPv6_s"
                            }
                        ]
                    },
                    {
                        "entityType": "Host",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Host_s"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic39-id'))]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2021-03-01-preview",
            "properties": {
                "displayName": "(Preview) SAP - Medium - Multiple Spool Output Executions",
                "description": "Identifies multiple spools for a user within a specific timerange.\n\nSource Action: Create and execute multiple Spool Jobs from any type by a user. (SP01)\n\n*Data Sources: SAPcon -  Spool Log*",
                "severity": "Medium",
                "enabled": true,
                "query": "// Define variables\r\nlet AuditLogIn = dynamic(['AU1', 'AU5']); // Messeges of connect with user\r\nlet NumberOfPrints = 3; // Number of prints as threshold\r\nlet HoursBucket = 2h; // // How much time between buckets\r\n// Query logic\r\nlet LastLogin =\r\nABAPAuditLog_CL\r\n| where MessageID_s in (AuditLogIn)\r\n| summarize arg_max(TimeGenerated, *) by SystemID_s, ClientID_s, User_s, Instance_s; // Get last connection date for user\r\nABAPSpoolOutputLog_CL // Get all spool outputs\r\n| summarize UserPrints = count() by bin(TimeGenerated, HoursBucket), SystemID_s, ClientID_s, User_s, Instance_s\r\n| where UserPrints >= NumberOfPrints // User requested to print more than threshold\r\n| lookup kind=inner LastLogin on User_s // Get IP of last login\r\n| project TimeGenerated, Instance_s, SystemID_s, ClientID_s, User_s, Email_s, TerminalIPv6_s,  Host_s, UserPrints",
                "queryFrequency": "PT12H",
                "queryPeriod": "PT12H",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "tactics": [
                    "CredentialAccess",
                    "Collection",
                    "Exfiltration"
                ],
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5M",
                        "matchingMethod": "AllEntities"
                    }
                },
                "eventGroupingSettings": {
                    "aggregationKind": "SingleAlert"
                },
                "customDetails": {
                    "SAP_Instance": "Instance_s",
                    "SAP_Client": "ClientID_s",
                    "SAP_System_I_D": "SystemID_s",
                    "SAP_User": "User_s"
                },
                "entityMappings": [
                    {
                        "entityType": "Account",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Email_s"
                            }
                        ]
                    },
                    {
                        "entityType": "Host",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Host_s"
                            }
                        ]
                    },
                    {
                        "entityType": "IP",
                        "fieldMappings": [
                            {
                                "identifier": "Address",
                                "columnName": "TerminalIPv6_s"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic40-id'))]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2021-03-01-preview",
            "properties": {
                "displayName": "(Preview) SAP - Medium - Security Audit Log Configuration Change",
                "description": "Idenitifes changes for configuration in Securiy Audit Log\n\nSource Action: change any  Security Audit Log Configuration using SM19/RSAU_CONFIG. (Filters/Status/Recording mode etc..)\n\n*Data Sources: SAPcon -  Audit Log*",
                "severity": "Medium",
                "enabled": true,
                "query": "// Audit Log Classes - Audit Log Configuration Events\r\nlet AuditClasses = dynamic(['AUE','AUF','AUI','AUJ','FU0','E05']); // Relevant messages\r\nABAPAuditLog_CL \r\n| where MessageID_s in (AuditClasses)\r\n| project \r\n// Details\r\nTimeGenerated, Instance_s, SystemID_s, User_s, MessageText_s,\r\nEmail_s, TerminalIPv6_s, Host_s",
                "queryFrequency": "PT6H",
                "queryPeriod": "PT6H",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "tactics": [
                    "Persistence",
                    "Exfiltration",
                    "DefenseEvasion"
                ],
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5M",
                        "matchingMethod": "AllEntities"
                    }
                },
                "eventGroupingSettings": {
                    "aggregationKind": "SingleAlert"
                },
                "customDetails": {
                    "SAP_User": "User_s",
                    "SAP_System_I_D": "SystemID_s",
                    "SAP_Instance": "Instance_s"
                },
                "entityMappings": [
                    {
                        "entityType": "IP",
                        "fieldMappings": [
                            {
                                "identifier": "Address",
                                "columnName": "TerminalIPv6_s"
                            }
                        ]
                    },
                    {
                        "entityType": "Account",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Email_s"
                            }
                        ]
                    },
                    {
                        "entityType": "Host",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Host_s"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic41-id'))]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2021-03-01-preview",
            "properties": {
                "displayName": "(Preview) SAP - Medium - Sensitive Roles Changes",
                "description": "Identifies changes in sensitive roles. \nSource Action: Change a role using PFCG.\nSensitive roles should be maintained in \"SAP - Sensitive Roles\" Watchlist\n\n*Data Sources: SAPcon - Change Documents Log*",
                "severity": "Medium",
                "enabled": true,
                "query": "// Define variables\r\nlet RoleObjectClass = \"PFCG\";\r\nlet ChangeType = \"U\";\r\nlet AuditLogIn = dynamic(['AU1', 'AU5']); // Messages of connect with user\r\nlet SensitiveRoles = _GetWatchlist(\"SAP - Sensitive Roles\");\r\n// Maintain if watchlist is not available\r\nlet fixedRoles = datatable(Role: string)['SAP_BC_BASIS_ADMIN', 'SAP_BC_AUTH_PROFILE_ADMIN'];\r\nlet UnitedRoles =\r\ntoscalar(union fixedRoles, SensitiveRoles\r\n| summarize Roles = make_list(Role));\r\n// Query logic\r\nlet LastLogin = \r\nABAPAuditLog_CL\r\n| where MessageID_s in (AuditLogIn)\r\n| summarize TimeGenerated = arg_max(TimeGenerated, *) by SystemID_s, ClientID_s, User_s; // Get last connection date for user\r\nABAPChangeDocsLog_CL\r\n| where ObjectClass_s == RoleObjectClass // Relevant role object class\r\n| where ObjectID_s in (UnitedRoles) // Role is sensitive\r\n| where TypeofChange_Item_s == ChangeType\r\n| extend AuthorizationObj = extract(@\"\\S+\\s+(\\S+)\\s+\", 1, ChangedTableKey_s, typeof(string)) // Extract Authorization Object\r\n| extend Authorization = extract(@\"\\S+\\s+\\S+\\s+(\\S+\\d+)\", 1, ChangedTableKey_s, typeof(string)) // Extract Authorization\r\n| lookup kind=inner LastLogin on User_s // Get IP\r\n| project TimeGenerated, Instance_s, SystemID_s, ClientID_s, Email_s, User_s, TerminalIPv6_s, Host_s, Role = ObjectID_s, FieldName_s , AuthorizationObj, Authorization, OldValue = ValueOld_s, NewValue = ValueNew_s",
                "queryFrequency": "PT12H",
                "queryPeriod": "PT12H",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "tactics": [
                    "Impact",
                    "PrivilegeEscalation",
                    "Persistence"
                ],
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5M",
                        "matchingMethod": "AllEntities"
                    }
                },
                "eventGroupingSettings": {
                    "aggregationKind": "SingleAlert"
                },
                "customDetails": {
                    "SAP_Instance": "Instance_s",
                    "SAP_Client": "ClientID_s",
                    "SAP_System_I_D": "SystemID_s",
                    "SAP_User": "User_s"
                },
                "entityMappings": [
                    {
                        "entityType": "Account",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Email_s"
                            }
                        ]
                    },
                    {
                        "entityType": "IP",
                        "fieldMappings": [
                            {
                                "identifier": "Address",
                                "columnName": "TerminalIPv6_s"
                            }
                        ]
                    },
                    {
                        "entityType": "Host",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Host_s"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic42-id'))]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2021-03-01-preview",
            "properties": {
                "displayName": "(Preview) SAP - Medium - Sensitive Tables Direct Access By RFC Logon",
                "description": "Identifies generic table access by RFC logon\n\nSource Action: Open table contents using SE11/SE16/SE16N.\n\n**Recommended for Production only**\n\nTables should be maintained in \"SAP - Sensitive Tables\" Watchlist.\n\n*Data Sources: SAPcon -  Audit Log*",
                "severity": "Medium",
                "enabled": true,
                "query": "// Define variables\r\nlet Role = \"Production\";\r\nlet AuditClasses = dynamic(['CUZ']); // RFC, Audit Log Classes - Generic Table Access \r\nlet allSystemRoles = dynamic(['Sandbox','Developement','QualityAssurance','Training','Production']); // Available System Roles\r\nlet allSystemUsage = dynamic (['ERP','CRM','BW','Solman','Gateway','Enterprise Portal']); // Available System Usages\r\n// Get Relevant Systems from WatchList\r\nlet systemID = _GetWatchlist('SAP - Systems');\r\nlet fixedSID = datatable(SystemID:string, SystemRole:string, SystemUsage:string)\r\n// Maintain these if WatchList is not available    \r\n    [\"S4H\",\"Production\",\"ERP\",\r\n    \"XXX\",\"Sandbox\",\"BW\"]\r\n; \r\n// Get Relevant Tables\r\nlet SensitiveTables = _GetWatchlist('SAP - Sensitive Tables');\r\nlet fixedTables = datatable(Table:string)\r\n// Maintain these if WatchList is not available    \r\n    [\"USR02\"]\r\n; \r\nlet RelSystemID = union systemID, fixedSID // Create a variable that stores relevent Systems\r\n| where SystemRole == Role // Reccommended is Production only\r\n//| where SystemRole in (allSystemRoles); // Use this for all system roles\r\n| summarize by SystemID;\r\nlet SensitiveUnionTables = union SensitiveTables, fixedTables // Create a variable that stores relevent sensitive tables\r\n    | summarize by Table;\r\n// Query logic\r\nABAPAuditLog_CL \r\n    | project-rename Table = Variable1_s, Activity = Variable2_s\r\n    | where MessageID_s in (AuditClasses)\r\n    | where SystemID_s in (RelSystemID)\r\n    | where Table in (SensitiveUnionTables)\r\n    | order by TimeGenerated asc\r\n    | project TimeGenerated,Instance_s, SystemID_s, ClientID_s, User_s, TransactionCode_s, ABAPProgramName_s, Table,   Activity, MessageText_s, MessageID_s,\r\nEmail_s, TerminalIPv6_s, Host_s",
                "queryFrequency": "PT12H",
                "queryPeriod": "PT12H",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "tactics": [
                    "Collection",
                    "Exfiltration",
                    "CredentialAccess"
                ],
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5M",
                        "matchingMethod": "AllEntities"
                    }
                },
                "eventGroupingSettings": {
                    "aggregationKind": "SingleAlert"
                },
                "customDetails": {
                    "SAP_User": "User_s",
                    "SAP_Client": "ClientID_s",
                    "SAP_System_I_D": "SystemID_s",
                    "SAP_Instance": "Instance_s"
                },
                "entityMappings": [
                    {
                        "entityType": "Account",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Email_s"
                            }
                        ]
                    },
                    {
                        "entityType": "IP",
                        "fieldMappings": [
                            {
                                "identifier": "Address",
                                "columnName": "TerminalIPv6_s"
                            }
                        ]
                    },
                    {
                        "entityType": "Host",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Host_s"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic43-id'))]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2021-03-01-preview",
            "properties": {
                "displayName": "(Preview) SAP - Medium - Spool Takeover",
                "description": "Identifies a user printing a spool request which was created by someone else.\n\nSource Action: Create a Spool Request using one user, Output it in using another user.\n\n*Data Sources: SAPcon -  Spool Log*\n*Data Sources: SAPcon -  Spool Output Log*",
                "severity": "Medium",
                "enabled": true,
                "query": "// Define variables\r\nlet AuditLogIn = dynamic(['AU1', 'AU5']); // Messages of connect with user\r\n// Query logic\r\nlet LastLogin = \r\nABAPAuditLog_CL\r\n| where MessageID_s in (AuditLogIn)\r\n| summarize TimeGenerated = arg_max(TimeGenerated, *) by SystemID_s, ClientID_s, User_s; // Get last connection date for user\r\n// Query Logic\r\nABAPSpoolOutputLog_CL // Get all spool outputs\r\n| lookup kind=inner ABAPSpoolLog_CL on SpoolRequestNumber_d\r\n| lookup kind=inner LastLogin on User_s\r\n| where User_s != User_s1 // The user that created the request is not the one that printed it\r\n| project TimeGenerated, Instance_s, SystemID_s, ClientID_s, UserCreated = User_s1, UserPrinted = User_s, SpoolRequestNumber_d, Email_s, TerminalIPv6_s, Host_s",
                "queryFrequency": "PT12H",
                "queryPeriod": "PT12H",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "tactics": [
                    "Collection",
                    "Exfiltration",
                    "CommandAndControl"
                ],
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5M",
                        "matchingMethod": "AllEntities"
                    }
                },
                "eventGroupingSettings": {
                    "aggregationKind": "SingleAlert"
                },
                "customDetails": {
                    "SAP_Client": "ClientID_s",
                    "SAP_Instance": "Instance_s",
                    "SAP_System_I_D": "SystemID_s",
                    "SAP_User": "UserPrinted"
                },
                "entityMappings": [
                    {
                        "entityType": "Account",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Email_s"
                            }
                        ]
                    },
                    {
                        "entityType": "IP",
                        "fieldMappings": [
                            {
                                "identifier": "Address",
                                "columnName": "TerminalIPv6_s"
                            }
                        ]
                    },
                    {
                        "entityType": "Host",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Host_s"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic44-id'))]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2021-03-01-preview",
            "properties": {
                "displayName": "(Preview) SAP - Medium - Transaction is unlocked",
                "description": "Identifies unlocking of a transaction. \n\nSource Action: Unlock a transaction code using SM01/SM01_DEV/SM01_CUS.\n\n*Data Sources: SAPcon -  Audit Log*\n",
                "severity": "Medium",
                "enabled": true,
                "query": "// Audit Log Classes - Transaction UnLock Events\r\n// AUP - Transaction Locked\r\nlet AuditClasses = dynamic(['AUQ']); // AUQ - Transaction Unlocked\r\nABAPAuditLog_CL \r\n| where MessageID_s in (AuditClasses)\r\n| project-rename TransactionCode = Variable1_s\r\n| parse TransactionCode with \"( TR ) \" _TCODE \" - \" ClientTR // Parse to _TCODE and ClientTR\r\n// Specific Client Action (SM01_CUS) / Cross Client (SM01_DEV)\r\n| extend TransactionCode = iif(_TCODE != \"\",_TCODE, TransactionCode) // Check if _TCODE is not empty\r\n| extend ClientTR = iif(ClientTR != \"\",ClientTR, \"CrossClient\") // Check if ClientTR is not empty\r\n| project \r\n// Details\r\nTimeGenerated, Instance_s, SystemID_s, User_s, MessageText_s,TransactionCode, ClientTR,\r\nEmail_s, TerminalIPv6_s, Host_s\r\n\r\n",
                "queryFrequency": "P1D",
                "queryPeriod": "P1D",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "tactics": [
                    "Persistence",
                    "Execution"
                ],
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5M",
                        "matchingMethod": "AllEntities"
                    }
                },
                "eventGroupingSettings": {
                    "aggregationKind": "SingleAlert"
                },
                "customDetails": {
                    "SAP_Client": "ClientTR",
                    "SAP_System_I_D": "SystemID_s",
                    "SAP_User": "User_s",
                    "SAP_Instance": "Instance_s"
                },
                "entityMappings": [
                    {
                        "entityType": "Account",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Email_s"
                            }
                        ]
                    },
                    {
                        "entityType": "IP",
                        "fieldMappings": [
                            {
                                "identifier": "Address",
                                "columnName": "TerminalIPv6_s"
                            }
                        ]
                    },
                    {
                        "entityType": "Host",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Host_s"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic45-id'))]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2021-03-01-preview",
            "properties": {
                "displayName": "(Preview) SAP - Low - Dynamic ABAP Program",
                "description": "Identifies execution of dynamic ABAP programming. For example, ABAP code was dynamically created/changed/deleted. Source Action: Create an ABAP Report which uses ABAP program generation commands such as \"INSERT REPORT\" and execute it. Excluded Transaction Codes can be maintained in \"SAP - Transactions for ABAP Generations\" watchlist. *Data Sources: SAPcon - Audit Log*",
                "severity": "Low",
                "enabled": true,
                "query": "// Define variables\r\nlet AuditClasses = dynamic(['BU4']); // Message of dynamic ABAP program\r\nlet TranForABAPGen = _GetWatchlist(\"SAP - Transactions for ABAP Generations\"); // Transactions to exclude\r\n// Maintain if watchlist is not available\r\nlet fixedTran = datatable(TransactionCode:string)['SE11','SE12', \"SE16\", \"SE16N\"];\r\nlet UnitedTransactions =\r\ntoscalar(union TranForABAPGen, fixedTran\r\n| summarize Transactions = make_set(TransactionCode));\r\n// Query logic\r\nABAPAuditLog_CL\r\n| where MessageID_s in (AuditClasses)\r\n| where TransactionCode_s !in (UnitedTransactions) // Exclude transactions\r\n| project TimeGenerated, Instance_s, User_s, SystemID_s, ClientID_s, Email_s, TerminalIPv6_s, Host_s, ABAPProgramName_s",
                "queryFrequency": "PT6H",
                "queryPeriod": "PT6H",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "tactics": [
                    "Discovery",
                    "CommandAndControl",
                    "Impact"
                ],
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5M",
                        "matchingMethod": "AllEntities"
                    }
                },
                "eventGroupingSettings": {
                    "aggregationKind": "SingleAlert"
                },
                "customDetails": {
                    "SAP_Client": "ClientID_s",
                    "SAP_Instance": "Instance_s",
                    "SAP_User": "User_s",
                    "SAP_System_I_D": "SystemID_s"
                },
                "entityMappings": [
                    {
                        "entityType": "Account",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Email_s"
                            }
                        ]
                    },
                    {
                        "entityType": "IP",
                        "fieldMappings": [
                            {
                                "identifier": "Address",
                                "columnName": "TerminalIPv6_s"
                            }
                        ]
                    },
                    {
                        "entityType": "Host",
                        "fieldMappings": [
                            {
                                "identifier": "HostName",
                                "columnName": "Host_s"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic46-id'))]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2021-03-01-preview",
            "properties": {
                "displayName": "(Preview) SAP - Low - Dynamic RFC Destination",
                "description": "Identifies execution of RFC using dynamic destinations. Source Action: Execute an ABAP report which is using dynamic destinations (cl_dynamic_destination). Sample report: DEMO_RFC_DYNAMIC_DEST. *Data Sources: SAPcon - Audit Log*",
                "severity": "Low",
                "enabled": true,
                "query": "// Define variables\r\nlet AuditClasses = dynamic(['FU1']); // Message of dynamic RFC execution using dynamic destination\r\n// Query logic\r\nABAPAuditLog_CL\r\n| where MessageID_s in (AuditClasses)\r\n| parse Variable3_s with \"id=\" Created_RFC_Name\r\n| project TimeGenerated,Instance_s, SystemID_s, ClientID_s, User_s, Email_s, TerminalIPv6_s, Host_s, ABAPProgramName_s, ExecutedProgram = Variable2_s, Created_RFC_Name",
                "queryFrequency": "PT6H",
                "queryPeriod": "PT6H",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "tactics": [
                    "Collection",
                    "Exfiltration"
                ],
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5M",
                        "matchingMethod": "AllEntities"
                    }
                },
                "eventGroupingSettings": {
                    "aggregationKind": "SingleAlert"
                },
                "customDetails": {
                    "SAP_Client": "ClientID_s",
                    "SAP_User": "User_s",
                    "SAP_System_I_D": "SystemID_s",
                    "SAP_Instance": "Instance_s"
                },
                "entityMappings": [
                    {
                        "entityType": "Account",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Email_s"
                            }
                        ]
                    },
                    {
                        "entityType": "IP",
                        "fieldMappings": [
                            {
                                "identifier": "Address",
                                "columnName": "TerminalIPv6_s"
                            }
                        ]
                    },
                    {
                        "entityType": "Host",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Host_s"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic47-id'))]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2021-03-01-preview",
            "properties": {
                "displayName": "(Preview) SAP - Low - Multiple Password Changes by User",
                "description": "Identifies multiple password changes by user.\n\nSource Action: Change user password\n\n*Data Sources: SAPcon -  Audit Log*",
                "severity": "Low",
                "enabled": true,
                "query": "// Define variables\r\nlet systemsPerUser = 3; // Systems Clients per User\r\nlet AuditClasses = dynamic(['BU2']); // Audit Log Classes - Password Changed\r\n// Query logic\r\nABAPAuditLog_CL \r\n| where MessageID_s in (AuditClasses)\r\n| project-rename UserReset = Variable2_s\r\n| extend DetailsBy = pack(\"SystemID\", SystemID_s, \"ClientID\", ClientID_s)\r\n| summarize CountSysClient = dcount(strcat(SystemID_s, ClientID_s)), Details = make_set(DetailsBy), StartTime = min(TimeGenerated), EndTime = max(TimeGenerated) \r\n    by UserReset, User_s, Email_s, TerminalIPv6_s\r\n| where CountSysClient > systemsPerUser // Number of passwords changed by user\r\n| mv-expand Details\r\n| evaluate bag_unpack(Details, \"Details_\") // Unpack the details to a couple of fields\r\n| project \r\n    StartTime, EndTime, UserReset, User_s, Email_s, TerminalIPv6_s,\r\n    SystemID = column_ifexists(\"Details_SystemID\", \"\"),\r\n    ClientID = column_ifexists(\"Details_ClientID\", \"\")",
                "queryFrequency": "PT3H",
                "queryPeriod": "PT3H",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "tactics": [
                    "CredentialAccess"
                ],
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5M",
                        "matchingMethod": "AllEntities"
                    }
                },
                "eventGroupingSettings": {
                    "aggregationKind": "SingleAlert"
                },
                "customDetails": {
                    "SAP_Client": "ClientID",
                    "SAP_System_I_D": "SystemID",
                    "SAP_User": "User_s"
                },
                "entityMappings": [
                    {
                        "entityType": "Account",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Email_s"
                            }
                        ]
                    },
                    {
                        "entityType": "IP",
                        "fieldMappings": [
                            {
                                "identifier": "Address",
                                "columnName": "TerminalIPv6_s"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic48-id'))]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2021-03-01-preview",
            "properties": {
                "displayName": "(Preview) SAP - Low - Sensitive Tables Direct Access By Dialog Logon",
                "description": "Identifies generic table access by dialog logon\n\nSource Action: Open table contents using SE11/SE16/SE16N.\n\n**Recommended for Production only**\n\nTables should be maintained in \"\"SAP - Sensitive Tables\"\" Watchlist.\n\n*Data Sources: SAPcon -  Audit Log*",
                "severity": "Low",
                "enabled": true,
                "query": "// Define variables\r\nlet Role = \"Production\";\r\nlet AuditClasses = dynamic(['DU9']); // Dialog, Audit Log Classes - Generic Table Access \r\nlet allSystemRoles = dynamic(['Sandbox','Developement','QualityAssurance','Training','Production']); // Available System Roles\r\nlet allSystemUsage = dynamic (['ERP','CRM','BW','Solman','Gateway','Enterprise Portal']); // Available System Usages\r\n// Get Relevant Systems from WatchList\r\nlet systemID = _GetWatchlist('SAP - Systems');\r\nlet fixedSID = datatable(SystemID:string, SystemRole:string, SystemUsage:string)\r\n// Maintain these if WatchList is not available    \r\n    [\"S4H\",\"Production\",\"ERP\",\r\n    \"XXX\",\"Sandbox\",\"BW\"]\r\n; \r\n// Get Relevant Tables\r\nlet SensitiveTables = _GetWatchlist('SAP - Sensitive Tables');\r\nlet fixedTables = datatable(Table:string)\r\n// Maintain these if WatchList is not available    \r\n    [\"USR02\"]\r\n; \r\nlet RelSystemID = union systemID, fixedSID // Create a variable that stores relevant Systems\r\n| where SystemRole == Role // Recommended  is Production only\r\n//| where SystemRole in (allSystemRoles); // Use this for all system roles\r\n| summarize by SystemID;\r\nlet SensitiveUnionTables = union SensitiveTables, fixedTables // Create a variable that stores relevant sensitive tables\r\n    | summarize by Table;\r\n// Query logic\r\nABAPAuditLog_CL \r\n    | project-rename Table = Variable1_s, Activity = Variable2_s\r\n    | where MessageID_s in (AuditClasses)\r\n    | where SystemID_s in (RelSystemID)\r\n    | where Table in (SensitiveUnionTables)\r\n    | order by TimeGenerated asc\r\n    | project TimeGenerated, Instance_s, SystemID_s, ClientID_s, User_s, TransactionCode_s, ABAPProgramName_s, Table,   Activity, MessageText_s, MessageID_s,\r\nEmail_s, TerminalIPv6_s, Host_s",
                "queryFrequency": "PT12H",
                "queryPeriod": "PT12H",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "tactics": [
                    "Discovery"
                ],
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5M",
                        "matchingMethod": "AllEntities"
                    }
                },
                "eventGroupingSettings": {
                    "aggregationKind": "SingleAlert"
                },
                "customDetails": {
                    "SAP_Client": "ClientID_s",
                    "SAP_System_I_D": "SystemID_s",
                    "SAP_Instance": "Instance_s",
                    "SAP_User": "User_s"
                },
                "entityMappings": [
                    {
                        "entityType": "Account",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Email_s"
                            }
                        ]
                    },
                    {
                        "entityType": "IP",
                        "fieldMappings": [
                            {
                                "identifier": "Address",
                                "columnName": "TerminalIPv6_s"
                            }
                        ]
                    },
                    {
                        "entityType": "Host",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Host_s"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic49-id'))]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2021-03-01-preview",
            "properties": {
                "displayName": "(Preview) SAP - Informational - Lifecycle - SAP Notes were implemented in system",
                "description": "Identifies SAP Notes implementation in the system.\n\nSource Action: Implement SAP Note using SNOTE/TCI.\n\n*Data Sources: SAPcon -  Change Requests*",
                "severity": "Informational",
                "enabled": true,
                "query": "// Define variables\r\nlet VarNote = \"NOTE\";\r\nlet AuditLogIn = dynamic(['AU1', 'AU5']); // Messages of connect with user\r\n// Query logic\r\nlet LastLogin = \r\nABAPAuditLog_CL\r\n| where MessageID_s in (AuditLogIn)\r\n| summarize TimeGenerated = arg_max(TimeGenerated, *) by SystemID_s, ClientID_s, User_s; // Get last connection date for user\r\nABAPCRLog_CL \r\n| where ObjectType_s == VarNote // Type is NOTE\r\n| lookup kind=inner LastLogin on $left.Owner_s == $right.User_s // Get last login details\r\n| summarize by TimeGenerated, Instance_s, SystemID_s, SystemNumber_s, ClientID_s, Owner_s, Request_s, Description_s, ObjectName_s, Category, Status_s, Email_s, TerminalIPv6_s, Host_s",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5M",
                        "matchingMethod": "AllEntities"
                    }
                },
                "eventGroupingSettings": {
                    "aggregationKind": "SingleAlert"
                },
                "customDetails": {
                    "SAP_Client": "ClientID_s",
                    "SAP_System_I_D": "SystemID_s",
                    "SAP_User": "Owner_s",
                    "SAP_Instance": "Instance_s"
                },
                "entityMappings": [
                    {
                        "entityType": "Account",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Email_s"
                            }
                        ]
                    },
                    {
                        "entityType": "IP",
                        "fieldMappings": [
                            {
                                "identifier": "Address",
                                "columnName": "TerminalIPv6_s"
                            }
                        ]
                    },
                    {
                        "entityType": "Host",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Host_s"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/Watchlists",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('watchlist1-id'))]",
            "apiVersion": "2021-03-01-preview",
            "properties": {
                "description": "Critical Authorizations object which their assignment should be governed.",
                "displayName": "SAP - Critical Authorizations",
                "source": "CSV",
                "provider": "Microsoft",
                "numberOfLinesToSkip": 0,
                "itemsSearchKey": "AuthorizationObject",
                "rawContent": "AuthorizationObject,AuthorizationField,AuthorizationValue,ActivityField,Activity,Description\nS_DEVELOP,OBJTYPE,DEBUG,ACTVT,02,Debug Change Authorizations\nS_DEVELOP,OBJTYPE,*,ACTVT,02,All development activities - include debug\nS_DEVELOP,OBJTYPE,DEBUG,ACTVT,*,Debug All Activites (Including Change)\nS_DEVELOP,OBJTYPE,*,ACTVT,*,All development activities - include debug\nS_RFC,RFCNAME,*,ACTVT,16,Execution of all RFC Services\nS_RFC,RFCNAME,*,ACTVT,*,Execution of all RFC Services\nS_TCODE,TCD,*,NOT_IN_USE,nan,All Transaction Codes - Example without Activity\nS_TZONE,ACTVT,*,NOT_IN_USE,nan,Maintain System Time Zone - Example only with Activity\n",
                "contentType": "text/csv"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/Watchlists",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('watchlist2-id'))]",
            "apiVersion": "2021-03-01-preview",
            "properties": {
                "description": "Internal and maintenance of excluded networks for ignoring web dispatchers, terminal servers etc.",
                "displayName": "SAP - Excluded Networks",
                "source": "CSV",
                "provider": "Microsoft",
                "numberOfLinesToSkip": 0,
                "itemsSearchKey": "Network",
                "rawContent": "Network,Description\n111.68.128.0/1,My Terminal Server\n123.68.128.0/1,My Citrix\n",
                "contentType": "text/csv"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/Watchlists",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('watchlist3-id'))]",
            "apiVersion": "2021-03-01-preview",
            "properties": {
                "description": "System users which are logged in the systems need to be ignored. (for example Multiple logons by user alert)",
                "displayName": "SAP - Excluded Users",
                "source": "CSV",
                "provider": "Microsoft",
                "numberOfLinesToSkip": 0,
                "itemsSearchKey": "User",
                "rawContent": "User,Description\nSYSWF,WF\n",
                "contentType": "text/csv"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/Watchlists",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('watchlist4-id'))]",
            "apiVersion": "2021-03-01-preview",
            "properties": {
                "description": "FTP Servers for identification of unauthorized connections.",
                "displayName": "SAP - FTP Servers",
                "source": "CSV",
                "provider": "Microsoft",
                "numberOfLinesToSkip": 0,
                "itemsSearchKey": "Client",
                "rawContent": "Client,FTP_Server_Name,FTP_Server_Port,Description\n100,http://ourorgftpserver.com/,22,description\n",
                "contentType": "text/csv"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/Watchlists",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('watchlist5-id'))]",
            "apiVersion": "2021-03-01-preview",
            "properties": {
                "description": "Internal and maintenance networks for identification of unauthorized logins.",
                "displayName": "SAP - Networks",
                "source": "CSV",
                "provider": "Microsoft",
                "numberOfLinesToSkip": 0,
                "itemsSearchKey": "Network",
                "rawContent": "Network,Description\n111.68.128.0/17,Our internal Network\n5.8.0.0/19,SAP Support Network\n223.255.254.0/24,Our Support Network\n",
                "contentType": "text/csv"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/Watchlists",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('watchlist6-id'))]",
            "apiVersion": "2021-03-01-preview",
            "properties": {
                "description": "Obsolete Function Modules which their execution should be governed.",
                "displayName": "SAP - Obsolete Function Modules",
                "source": "CSV",
                "provider": "Microsoft",
                "numberOfLinesToSkip": 0,
                "itemsSearchKey": "FunctionModule",
                "rawContent": "FunctionModule,Description\nTH_SAPREL,Get SAP Release Information\nTH_SAPREL2,Get SAP Release Information\nTH_SAPREL3,Get SAP Release Information\nSUSR_RFC_USER_INTERFACE,Users from External Systems\nRFC_ABAP_INSTALL_AND_RUN,Install ABAP Program\n",
                "contentType": "text/csv"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/Watchlists",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('watchlist7-id'))]",
            "apiVersion": "2021-03-01-preview",
            "properties": {
                "description": "Obsolete ABAP programs (reports) which their execution should be governed.",
                "displayName": "SAP - Obsolete Programs",
                "source": "CSV",
                "provider": "Microsoft",
                "numberOfLinesToSkip": 0,
                "itemsSearchKey": "ABAPProgram",
                "rawContent": "ABAPProgram,Description\nRSAU_READ_LOG,just as example\n",
                "contentType": "text/csv"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/Watchlists",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('watchlist8-id'))]",
            "apiVersion": "2021-03-01-preview",
            "properties": {
                "description": "Privileged users which are under extra restrictions.",
                "displayName": "SAP - Privileged Users",
                "source": "CSV",
                "provider": "Microsoft",
                "numberOfLinesToSkip": 0,
                "itemsSearchKey": "User",
                "rawContent": "User,Description\nSAP*,SAP*\nDDIC,Dictionary, Internal\nALEREMOTE,BW User\nBWREMOTE,BW User\nSAPSYS,SAP System, Internal\nWF-BATCH,Workflow Batch\n",
                "contentType": "text/csv"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/Watchlists",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('watchlist9-id'))]",
            "apiVersion": "2021-03-01-preview",
            "properties": {
                "description": "Sensitive ABAP programs (reports) which their execution should be governed.",
                "displayName": "SAP - Sensitive ABAP Programs",
                "source": "CSV",
                "provider": "Microsoft",
                "numberOfLinesToSkip": 0,
                "itemsSearchKey": "ABAPProgram",
                "rawContent": "ABAPProgram,Description\nRSPFLDOC,Profile Parameter Maintenance\n/1BCDWB/DBUSR02,Data Browser - USR02\n/1BCDWB/DBUSH02,Data Browser - USH02\n/1BCDWB/DBUSRPWDHISTORY,Data Browser - USRPWDHISTORY\nRDDGENBB,DD: Dispatcher for Converter and Distributor\nRSBDCOS0,Execute OS Command (Logged in SYSLOG and Trace Files)\nRSCDOK99,Delete Change Documents\nRSTBPDEL,Table Log Database Management: Delete Logs\n",
                "contentType": "text/csv"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/Watchlists",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('watchlist10-id'))]",
            "apiVersion": "2021-03-01-preview",
            "properties": {
                "description": "Sensitive Function Modules which their execution should be governed.",
                "displayName": "SAP - Sensitive Function Modules",
                "source": "CSV",
                "provider": "Microsoft",
                "numberOfLinesToSkip": 0,
                "itemsSearchKey": "FunctionModule",
                "rawContent": "FunctionModule,Description\nRSAU_CLEAR_AUDIT_LOG,Delete Audit Log\nBAPI_USER_CREATE,Create User\nBAPI_USER_CREATE1,Create User\nBAPI_USER_DELETE,Delete user\nBAPI_USER_GET_DETAIL,Read User Details\nBAPI_USER_PROFILES_ASSIGN,Change User-Profile Assignments\nEPS_GET_DIRECTORY_LISTING,nan\nPFL_CHECK_OS_FILE_EXISTENCE,nan\nPRGN_INTERFACE_USER,nan\nRFC_ABAP_INSTALL_AND_RUN,nan\nRFC_GET_TABLE_ENTRIES,Read table entries\nRFC_READ_TABLE,External access to R/3 tables via RFC\nRS_FUNCTIONMODULE_INSERT,nan\nRZL_READ_DIR_LOCAL,nan\nSUSR_RFC_USER_INTERFACE,nan\nSXPG_CALL_SYSTEM,Execute an External Command\nSXPG_COMMAND_EXECUTE,Execute an External Command\nSXPG_COMMAND_EXECUTE_LONG,Execute an External Command\nTABLE_ENTRIES_GET_VIA_RFC,nan\nTH_REMOTE_TRANSACTION,Start Remote Transaction\nTH_SAPREL,nan\nTMS_CI_START_SERVICE,nan\n",
                "contentType": "text/csv"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/Watchlists",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('watchlist11-id'))]",
            "apiVersion": "2021-03-01-preview",
            "properties": {
                "description": "Sensitive profiles which their assignment should be governed.",
                "displayName": "SAP - Sensitive Profiles",
                "source": "CSV",
                "provider": "Microsoft",
                "numberOfLinesToSkip": 0,
                "itemsSearchKey": "Profile",
                "rawContent": "Profile,Description\nSAP_ALL,All SAP Systems Authorizations\nSAP_NEW,New Authorizations Checks\n",
                "contentType": "text/csv"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/Watchlists",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('watchlist12-id'))]",
            "apiVersion": "2021-03-01-preview",
            "properties": {
                "description": "Sensitive roles which their assignment should be governed.",
                "displayName": "SAP - Sensitive Roles",
                "source": "CSV",
                "provider": "Microsoft",
                "numberOfLinesToSkip": 0,
                "itemsSearchKey": "Role",
                "rawContent": "Role,Description\nZ_FIGL_POSTING_ADMIN,Custom example role\nSAP_BC_AUTH_DATA_ADMIN,Authorization Data Administrator\nSAP_BC_AUTH_PROFILE_ADMIN,Authorization Profile Administrator\nSAP_BC_BASIS_ADMIN,System Administrator\n",
                "contentType": "text/csv"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/Watchlists",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('watchlist13-id'))]",
            "apiVersion": "2021-03-01-preview",
            "properties": {
                "description": "Sensitive tables which their access should be governed.",
                "displayName": "SAP - Sensitive Tables",
                "source": "CSV",
                "provider": "Microsoft",
                "numberOfLinesToSkip": 0,
                "itemsSearchKey": "Table",
                "rawContent": "Table,Description\nUSR02,Logon Data\nPA0008,Basic Pay Infotype\nUSH02,Change history for logon data\nUSRPWDHISTORY,Change History for Logon Data: Last Entries from Archive\n",
                "contentType": "text/csv"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/Watchlists",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('watchlist14-id'))]",
            "apiVersion": "2021-03-01-preview",
            "properties": {
                "description": "Sensitive transactions which their execution should be governed.",
                "displayName": "SAP - Sensitive Transactions",
                "source": "CSV",
                "provider": "Microsoft",
                "numberOfLinesToSkip": 0,
                "itemsSearchKey": "TransactionCode",
                "rawContent": "TransactionCode,Description\nRSAU_CONFIG,Audit Log Configuration\nRZ11,Profile Parameter Maintenance\n",
                "contentType": "text/csv"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/Watchlists",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('watchlist15-id'))]",
            "apiVersion": "2021-03-01-preview",
            "properties": {
                "description": "Describes the landscape of SAP systems according to role and usage.",
                "displayName": "SAP - Systems",
                "source": "CSV",
                "provider": "Microsoft",
                "numberOfLinesToSkip": 0,
                "itemsSearchKey": "SystemID",
                "rawContent": "SystemID,SystemRole,SystemUsage\nS4X,Sandbox,ERP\nS4D,Development,ERP\nS4Q,QualityAssurance,ERP\nS4T,Training,ERP\nS4P,Production,ERP\nS4H,Production,ERP\nB4X,Sandbox,BW\nB4D,Development,BW\nB4Q,QualityAssurance,BW\nB4T,Training,BW\nB4P,Production,BW\nSMX,Sandbox,Solman\nSMD,QualityAssurance,Solman\nSMQ,Training,Solman\nSMP,Production,Solman\nC4X,Sandbox,CRM\nC4D,Development,CRM\nC4Q,QualityAssurance,CRM\nC4T,Training,CRM\nC4P,Production,CRM\nGWX,Sandbox,Gateway\nGWD,Development,Gateway\nGWQ,QualityAssurance,Gateway\nGWT,Training,Gateway\nGWP,Production,Gateway\nEPS,Sandbox,Enterpirse Portal\nEPD,Development,Enterpirse Portal\nEPQ,QualityAssurance,Enterpirse Portal\nEPT,Training,Enterpirse Portal\nEPP,Production,Enterpirse Portal\n",
                "contentType": "text/csv"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/Watchlists",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('watchlist16-id'))]",
            "apiVersion": "2021-03-01-preview",
            "properties": {
                "description": "Transactions for ABAP generations which their execution should be governed.",
                "displayName": "SAP - Transactions for ABAP Generations",
                "source": "CSV",
                "provider": "Microsoft",
                "numberOfLinesToSkip": 0,
                "itemsSearchKey": "TransactionCode",
                "rawContent": "TransactionCode,Description\nSE11,ABAP Dictionary Maintenance\nSE12,ABAP Dictionary Display\nSE16,Data Browser\nSE16N,General Table Display\n",
                "contentType": "text/csv"
            }
        }
    ],
    "outputs": {}
}