{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 11,
      "content": {
        "version": "LinkItem/1.0",
        "style": "tabs",
        "links": [
          {
            "id": "535fad95-5f51-44b2-b495-aae7bfd163b0",
            "cellValue": "wb-param",
            "linkTarget": "parameter",
            "linkLabel": "Authorizations",
            "subTarget": "auth",
            "preText": "Authorizations",
            "style": "link"
          },
          {
            "id": "ff1fffea-e52a-44a3-b123-437c37b873a0",
            "cellValue": "wb-param",
            "linkTarget": "parameter",
            "linkLabel": "Suspicious Activity",
            "subTarget": "susp",
            "style": "link"
          },
          {
            "id": "afd01f38-fe2d-498b-809f-b550372bb1ce",
            "cellValue": "wb-param",
            "linkTarget": "parameter",
            "linkLabel": "Changes in Authorizations",
            "subTarget": "ch",
            "style": "link"
          }
        ]
      },
      "name": "links - 1"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "670edd22-935b-4b15-8f95-5cbc1c4fed9a",
            "version": "KqlParameterItem/1.0",
            "name": "TimeSelect",
            "label": "Time Range",
            "type": 4,
            "isGlobal": true,
            "value": {
              "durationMs": 7776000000
            },
            "typeSettings": {
              "selectableValues": [
                {
                  "durationMs": 300000
                },
                {
                  "durationMs": 900000
                },
                {
                  "durationMs": 1800000
                },
                {
                  "durationMs": 3600000
                },
                {
                  "durationMs": 14400000
                },
                {
                  "durationMs": 43200000
                },
                {
                  "durationMs": 86400000
                },
                {
                  "durationMs": 172800000
                },
                {
                  "durationMs": 259200000
                },
                {
                  "durationMs": 604800000
                },
                {
                  "durationMs": 1209600000
                },
                {
                  "durationMs": 2419200000
                },
                {
                  "durationMs": 2592000000
                },
                {
                  "durationMs": 5184000000
                },
                {
                  "durationMs": 7776000000
                }
              ],
              "allowCustom": true
            },
            "timeContext": {
              "durationMs": 86400000
            }
          },
          {
            "id": "66b0cd24-062e-44db-93d0-8cc242219b45",
            "version": "KqlParameterItem/1.0",
            "name": "Systems",
            "label": "System",
            "type": 2,
            "isRequired": true,
            "isGlobal": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "ABAPAuditLog_CL | summarize  by  SystemID_s ",
            "value": [
              "value::all"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "showDefault": false
            },
            "timeContext": {
              "durationMs": 2592000000
            },
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          }
        ],
        "style": "above",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "name": "parameters - 4"
    },
    {
      "type": 1,
      "content": {
        "json": "<tr><td><h2 style=\"font-family: 'Enriqueta', arial, serif; line-height: 1.25; margin: 0 0 10px; font-size: 24px; font-weight: bold;\"><B>Changes in Roles</b></h2>\r\n<tr><td><p style=\"color: #333; font-family: 'Muli', sans-serif; margin-bottom: 15px; font-size: 14px;\"><B>Identifies changes in sensitive roles.</b></p>"
      },
      "conditionalVisibility": {
        "parameterName": "wb-param",
        "comparison": "isEqualTo",
        "value": "ch"
      },
      "name": "text - 7"
    },
    {
      "type": 1,
      "content": {
        "json": "<tr><td><h2 style=\"font-family: 'Enriqueta', arial, serif; line-height: 1.25; margin: 0 0 10px; font-size: 24px; font-weight: bold;\"><b>Sensitive Privileged Users - Actions & Changes</b></h2>\r\n<tr><td><p style=\"color: #333; font-family: 'Muli', sans-serif; margin-bottom: 15px; font-size: 14px;\"><b>Identifies activity of sensitive privileged users or other suspicious activity.</b></p>"
      },
      "conditionalVisibility": {
        "parameterName": "wb-param",
        "comparison": "isEqualTo",
        "value": "susp"
      },
      "name": "text - 6"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let SensProfiles = _GetWatchlist('SAP - Sensitive Profiles') | summarize  by Profile;\nlet SensRoles = _GetWatchlist('SAP - Sensitive Roles') | summarize  by Role;\n// Maintain these if System doesn't have CR's\nlet FixedUserMD = datatable(TimeGenerated : datetime, UserName_s : string, RoleMembership_s : string)[];\n// Priveleged Users by sensitive role/profile based on user master data\nlet ABAPUserMd = \nunion isfuzzy=true table(\"ABAPUserMD_CL\"), FixedUserMD;\nlet PrivUserdByMD = ABAPUserMd\n| extend Roles = parse_json(RoleMembership_s)[\"SapRole\"], Profiles = parse_json(RoleMembership_s)[\"SapProfile\"]\n| mv-expand Roles, Profiles\n| where Roles in (SensRoles) or Profiles in (SensProfiles)\n| summarize by User = UserName_s;\nlet PrivUsers = _GetWatchlist('SAP - Privileged Users') | summarize by User | union PrivUserdByMD;\nABAPAuditLog_CL\n| where TimeGenerated {TimeSelect}\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\n| where User_s in (PrivUsers)\n| summarize count() by bin(TimeGenerated,1h), User_s",
              "size": 0,
              "title": "Events of Sensitive Privileged Users",
              "color": "redBright",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "visualization": "timechart",
              "chartSettings": {
                "xAxis": "TimeGenerated",
                "showDataPoints": true
              }
            },
            "name": "query - 2"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let SensProfiles = _GetWatchlist('SAP - Sensitive Profiles') | summarize  by Profile;\nlet SensRoles = _GetWatchlist('SAP - Sensitive Roles') | summarize  by Role;\n// Maintain these if System doesn't have CR's\nlet FixedUserMD = datatable(TimeGenerated : datetime, UserName_s : string, RoleMembership_s : string)[];\n// Priveleged Users by sensitive role/profile based on user master data\nlet ABAPUserMd = \nunion isfuzzy=true table(\"ABAPUserMD_CL\"), FixedUserMD;\nlet PrivUserdByMD = ABAPUserMd\n| extend Roles = parse_json(RoleMembership_s)[\"SapRole\"], Profiles = parse_json(RoleMembership_s)[\"SapProfile\"]\n| mv-expand Roles, Profiles\n| where Roles in (SensRoles) or Profiles in (SensProfiles)\n| summarize by User = UserName_s;\nlet PrivUsers = _GetWatchlist('SAP - Privileged Users') | summarize by User | union PrivUserdByMD;\nABAPAuditLog_CL\n| where TimeGenerated {TimeSelect}\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\n| where User_s in (PrivUsers)\n| summarize Events = count() by Time = bin(TimeGenerated,1h), User_s\n| make-series Events=avg(Events) on Time from ago(30d) to ago(0d) step 1h by User_s\n| extend (Anomalies, Score, Baseline) = series_decompose_anomalies(Events, 1.5, -1, 'linefit')\n| project-away Score",
              "size": 0,
              "title": "Anomalies of Sensitive Privileged Users",
              "color": "redBright",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "visualization": "timechart",
              "chartSettings": {
                "showDataPoints": true
              }
            },
            "name": "query - 2 - Copy"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "// Audit Log Classes - User Master Changes\r\nlet AuditClasses = dynamic(['AUD']);\r\n// Get Relevant User from WatchList\r\nlet PrivelegedUsers = _GetWatchlist('SAP - Privileged Users');\r\nlet fixedUsers = datatable(User: string)\r\n    // Maintain these if WatchList is not available    \r\n    [\"SAP*\", \"DDIC\"]\r\n;\r\nlet SensProfiles = _GetWatchlist('SAP - Sensitive Profiles') | summarize  by Profile;\r\nlet SensRoles = _GetWatchlist('SAP - Sensitive Roles') | summarize  by Role;\r\n// Maintain these if System doesn't have CR's\r\nlet FixedUserMD = datatable(TimeGenerated : datetime, UserName_s : string, RoleMembership_s : string)[];\r\n// Priveleged Users by sensitive role/profile based on user master data\r\nlet ABAPUserMd = \r\nunion isfuzzy=true table(\"ABAPUserMD_CL\"), FixedUserMD;\r\nlet PrivUserdByMD = ABAPUserMd\r\n| extend Roles = parse_json(RoleMembership_s)[\"SapRole\"], Profiles = parse_json(RoleMembership_s)[\"SapProfile\"]\r\n| mv-expand Roles, Profiles\r\n| where Roles in (SensRoles) or Profiles in (SensProfiles)\r\n| summarize by User = UserName_s;\r\nlet UnitedPrivleged = union PrivelegedUsers, fixedUsers, PrivUserdByMD\r\n| summarize by User;\r\nABAPAuditLog_CL \r\n| where TimeGenerated {TimeSelect}\r\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\r\n| where MessageID_s in (AuditClasses)\r\n| where User_s in (UnitedPrivleged) // The user that makes a change is a sensitive privileged user\r\n| summarize count() by User_s\r\n",
              "size": 1,
              "title": "Count of Users Changed by Sensitive Priviledged Users (Press to Investigate)",
              "exportFieldName": "User_s",
              "exportParameterName": "UserChange2",
              "exportDefaultValue": "SAP",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "visualization": "tiles",
              "tileSettings": {
                "showBorder": false,
                "titleContent": {
                  "columnMatch": "User_s",
                  "formatter": 1
                },
                "leftContent": {
                  "columnMatch": "count_",
                  "formatter": 12,
                  "formatOptions": {
                    "palette": "auto"
                  },
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "maximumSignificantDigits": 3,
                      "maximumFractionDigits": 2
                    }
                  }
                }
              },
              "chartSettings": {
                "seriesLabelSettings": [
                  {
                    "seriesName": "TEMP",
                    "color": "orange"
                  },
                  {
                    "seriesName": "TEMP2",
                    "color": "green"
                  }
                ],
                "ySettings": {
                  "max": 20
                }
              }
            },
            "customWidth": "50",
            "name": "query - 4",
            "styleSettings": {
              "margin": "0px"
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "// Audit Log Classes - User Master Changes\r\nlet AuditClasses = dynamic(['AU7', 'BUV', 'BUW', 'AU8', 'AU9', 'AUA', 'AUB', 'AUD', 'DUH', 'BU2']);\r\n// Get Relevant User from WatchList\r\nlet PrivelegedUsers = _GetWatchlist('SAP - Privileged Users');\r\nlet fixedUsers = datatable(User: string)\r\n    // Maintain these if WatchList is not available    \r\n    [\"SAP*\", \"DDIC\"]\r\n;\r\nlet SensProfiles = _GetWatchlist('SAP - Sensitive Profiles') | summarize  by Profile;\r\nlet SensRoles = _GetWatchlist('SAP - Sensitive Roles') | summarize  by Role;\r\n// Maintain these if System doesn't have CR's\r\nlet FixedUserMD = datatable(TimeGenerated : datetime, UserName_s : string, RoleMembership_s : string)[];\r\n// Priveleged Users by sensitive role/profile based on user master data\r\nlet ABAPUserMd = \r\nunion isfuzzy=true table(\"ABAPUserMD_CL\"), FixedUserMD;\r\nlet PrivUserdByMD = ABAPUserMd\r\n| extend Roles = parse_json(RoleMembership_s)[\"SapRole\"], Profiles = parse_json(RoleMembership_s)[\"SapProfile\"]\r\n| mv-expand Roles, Profiles\r\n| where Roles in (SensRoles) or Profiles in (SensProfiles)\r\n| summarize by User = UserName_s;\r\nlet UnitedPrivleged = union PrivelegedUsers, fixedUsers, PrivUserdByMD\r\n| summarize by User;\r\nABAPAuditLog_CL \r\n| where TimeGenerated {TimeSelect}\r\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\r\n| where MessageID_s in (AuditClasses)\r\n| where Variable1_s in (UnitedPrivleged) // The user that we are making change in is a sensitive privileged user\r\n| summarize by Variable1_s\r\n",
              "size": 1,
              "title": "Sensitive Priviledged Users were Changed (Press to Investigate)",
              "exportFieldName": "Variable1_s",
              "exportParameterName": "ChangedUser",
              "exportDefaultValue": "SAP",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "visualization": "tiles",
              "tileSettings": {
                "showBorder": false,
                "titleContent": {
                  "columnMatch": "Variable1_s",
                  "formatter": 1
                },
                "leftContent": {
                  "columnMatch": "count_",
                  "formatter": 12,
                  "formatOptions": {
                    "palette": "auto"
                  },
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "maximumSignificantDigits": 3,
                      "maximumFractionDigits": 2
                    }
                  }
                }
              }
            },
            "customWidth": "50",
            "name": "query - 5"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "// Audit Log Classes - User Master Changes\r\nlet AuditClasses = dynamic(['AUD']);\r\n// Get Relevant User from WatchList\r\nlet PrivelegedUsers = _GetWatchlist('SAP - Privileged Users');\r\nlet fixedUsers = datatable(User: string)\r\n    // Maintain these if WatchList is not available    \r\n    [\"SAP*\", \"DDIC\"]\r\n;\r\nlet UnitedPrivleged = union PrivelegedUsers, fixedUsers\r\n| summarize by User;\r\nABAPAuditLog_CL \r\n| where TimeGenerated {TimeSelect}\r\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\r\n| where MessageID_s in (AuditClasses)\r\n| lookup kind=inner ABAPChangeDocsLog_CL on User_s\r\n| where TypeofChange_Header_s == \"U\"\r\n| where User_s == '{UserChange2}'\r\n| project TimeGenerated ,SystemID_s, ClientID_s, UserChanged = Variable1_s,Table = TableName_s, ObjectClass_s, ChangedTableKey_s, Field = FieldName_s, ObjectID_s , OldValue = ValueOld_s, NewValue = ValueNew_s\r\n",
              "size": 0,
              "title": "Users Changed by {UserChange2}",
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "visualization": "table",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "UserChanged",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "warning",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  }
                ]
              },
              "chartSettings": {
                "seriesLabelSettings": [
                  {
                    "seriesName": "TEMP",
                    "color": "orange"
                  },
                  {
                    "seriesName": "TEMP2",
                    "color": "green"
                  }
                ],
                "ySettings": {
                  "max": 20
                }
              }
            },
            "customWidth": "50",
            "conditionalVisibility": {
              "parameterName": "UserChange2",
              "comparison": "isNotEqualTo",
              "value": "SAP"
            },
            "name": "query - 4 - Copy",
            "styleSettings": {
              "margin": "10px"
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "// Audit Log Classes - User Master Changes\r\nlet AuditClasses = dynamic(['AU7', 'BUV', 'BUW', 'AU8', 'AU9', 'AUA', 'AUB', 'AUD', 'DUH', 'BU2']);\r\n// Get Relevant User from WatchList\r\nlet PrivelegedUsers = _GetWatchlist('SAP - Privileged Users');\r\nlet fixedUsers = datatable(User: string)\r\n    // Maintain these if WatchList is not available    \r\n    [\"SAP*\", \"DDIC\"]\r\n;\r\nlet SensProfiles = _GetWatchlist('SAP - Sensitive Profiles') | summarize  by Profile;\r\nlet SensRoles = _GetWatchlist('SAP - Sensitive Roles') | summarize  by Role;\r\n// Maintain these if System doesn't have CR's\r\nlet FixedUserMD = datatable(TimeGenerated : datetime, UserName_s : string, RoleMembership_s : string)[];\r\n// Priveleged Users by sensitive role/profile based on user master data\r\nlet ABAPUserMd = \r\nunion isfuzzy=true table(\"ABAPUserMD_CL\"), FixedUserMD;\r\nlet PrivUserdByMD = ABAPUserMd\r\n| extend Roles = parse_json(RoleMembership_s)[\"SapRole\"], Profiles = parse_json(RoleMembership_s)[\"SapProfile\"]\r\n| mv-expand Roles, Profiles\r\n| where Roles in (SensRoles) or Profiles in (SensProfiles)\r\n| summarize by User = UserName_s;\r\nlet UnitedPrivleged = union PrivelegedUsers, fixedUsers, PrivUserdByMD\r\n| summarize by User;\r\nABAPAuditLog_CL \r\n| where MessageID_s in (AuditClasses)\r\n| where TimeGenerated {TimeSelect}\r\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\r\n| where Variable1_s == '{ChangedUser}'\r\n| lookup kind=inner ABAPChangeDocsLog_CL on User_s\r\n| where TypeofChange_Header_s == \"U\"\r\n| project TimeGenerated ,SystemID_s, ClientID_s, UserAction = User_s, Table = TableName_s, ObjectClass_s, ChangedTableKey_s, Field = FieldName_s, ObjectID_s , OldValue = ValueOld_s, NewValue = ValueNew_s",
              "size": 0,
              "title": "Users made a Change in Sensitive Priviledged User: {ChangedUser}",
              "exportFieldName": "Variable1_s",
              "exportParameterName": "ChangedUser",
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "visualization": "table",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "UserAction",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "warning",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  }
                ]
              },
              "tileSettings": {
                "showBorder": false,
                "titleContent": {
                  "columnMatch": "Variable1_s",
                  "formatter": 1
                },
                "leftContent": {
                  "columnMatch": "count_",
                  "formatter": 12,
                  "formatOptions": {
                    "palette": "auto"
                  },
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "maximumSignificantDigits": 3,
                      "maximumFractionDigits": 2
                    }
                  }
                }
              }
            },
            "customWidth": "50",
            "conditionalVisibility": {
              "parameterName": "ChangedUser",
              "comparison": "isNotEqualTo",
              "value": "SAP"
            },
            "name": "query - 5 - Copy",
            "styleSettings": {
              "margin": "10px"
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "// Define variables\r\nlet MinutesThreshold = 15; // Difference by minutes between Unlock and Connect\r\nlet AuditUserUnlocked = dynamic(['AUA']); // Message of unlock user\r\nlet AuditLogIn = dynamic(['AU1', 'AU5']); // Messages of connect with user\r\n// Query Logic\r\nlet UserUnlocked = // Get users unlocked\r\nABAPAuditLog_CL\r\n| where MessageID_s in (AuditUserUnlocked)\r\n| project-rename UserUnlockTimeGenerated = TimeGenerated, UserUnlocked = Variable1_s;\r\nABAPAuditLog_CL // Get users connections\r\n| where TimeGenerated {TimeSelect}\r\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\r\n| where MessageID_s in (AuditLogIn)\r\n| lookup kind=inner UserUnlocked on TerminalIPv6_s, $left.User_s == $right.UserUnlocked // Lookup of user unlocked to user log in\r\n| where abs(datetime_diff('Minute', TimeGenerated, UserUnlockTimeGenerated)) <= MinutesThreshold // Connect after unlock\r\n| summarize by TimeGenerated, SystemID_s, ClientID_s, UserAction = User_s1, UserUnlocked = User_s, AccountCustomEntity = Email_s, IPCustomEntity = TerminalIPv6_s, HostCustomEntity = Host_s",
              "size": 0,
              "title": "Unlocking a User and Logging into to it From the Same IP",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "visualization": "table",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "UserAction",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "1",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  }
                ]
              }
            },
            "name": "query - 5"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "// Define variables\r\nlet ChangeAndLoginThreshold = 5; // Difference by minutes between Change in user to connect\r\nlet LoginAndRestThreshold = 3; // Difference by minutes between Connect and password reset\r\nlet AuditUserChange = dynamic(['AUD']); // Message of change in user\r\nlet AuditLogIn = dynamic(['AU1', 'AU5']); // Messages of connect with user\r\nlet AuditUserPassReset = dynamic(['BU2']); // Message of user password change\r\nlet PrivUsers = _GetWatchlist(\"SAP - Privileged Users\");\r\nlet fixedUsers = datatable(User: string)\r\n    // Maintain these if WatchList is not available    \r\n    [\"SAP*\", \"DDIC\"]\r\n;\r\nlet SensProfiles = _GetWatchlist('SAP - Sensitive Profiles') | summarize  by Profile;\r\nlet SensRoles = _GetWatchlist('SAP - Sensitive Roles') | summarize  by Role;\r\n// Maintain these if System doesn't have CR's\r\nlet FixedUserMD = datatable(TimeGenerated : datetime, UserName_s : string, RoleMembership_s : string)[];\r\n// Priveleged Users by sensitive role/profile based on user master data\r\nlet ABAPUserMd = \r\nunion isfuzzy=true table(\"ABAPUserMD_CL\"), FixedUserMD;\r\nlet PrivUserdByMD = ABAPUserMd\r\n| extend Roles = parse_json(RoleMembership_s)[\"SapRole\"], Profiles = parse_json(RoleMembership_s)[\"SapProfile\"]\r\n| mv-expand Roles, Profiles\r\n| where Roles in (SensRoles) or Profiles in (SensProfiles)\r\n| summarize by User = UserName_s;\r\nlet UnitedPrivleged = toscalar(union PrivUsers, fixedUsers, PrivUserdByMD\r\n| summarize Users = make_set(User));\r\n// Query Logic\r\nlet UserChange = // Get users change activity\r\nABAPAuditLog_CL\r\n| where MessageID_s in (AuditUserChange)\r\n| where Variable1_s in (UnitedPrivleged) // The user with the changed password is privileged user\r\n| project-rename UserChangeTimeGenerated = TimeGenerated, UserPassChanged = Variable1_s;\r\nlet UserLogIn = // Get users connections\r\nABAPAuditLog_CL\r\n| where MessageID_s in (AuditLogIn)\r\n| project-rename UserLogInTimeGenerated = TimeGenerated;\r\nABAPAuditLog_CL // Get users password reset\r\n| where TimeGenerated {TimeSelect}\r\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\r\n| where MessageID_s in (AuditUserPassReset)\r\n| where User_s in (UnitedPrivleged) // The user with the changed password is privileged user\r\n| lookup kind=inner UserLogIn on TerminalIPv6_s, User_s // Lookup of user reset to user login\r\n| lookup kind=inner UserChange on TerminalIPv6_s, $left.User_s == $right.UserPassChanged // Lookup of user reset to user change\r\n| where abs(datetime_diff('Minute', UserChangeTimeGenerated, UserLogInTimeGenerated)) <= ChangeAndLoginThreshold // Connect after a change in user\r\n| where abs(datetime_diff('Minute', TimeGenerated, UserLogInTimeGenerated)) <= LoginAndRestThreshold // Change password after connection\r\n// | summarize by TimeGenerated, SystemID_s, ClientID_s, UserAction = User_s1, PrivUserPassChanged = User_s, AccountCustomEntity = Email_s, IPCustomEntity = TerminalIPv6_s, HostCustomEntity = Host_s\r\n| summarize by User_s\r\n",
              "size": 1,
              "title": "Sensitive User Password was Changed and then Login into to the System (Press to Investigate)",
              "exportFieldName": "User_s",
              "exportParameterName": "User",
              "exportDefaultValue": "SAP",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "visualization": "tiles",
              "tileSettings": {
                "showBorder": false,
                "titleContent": {
                  "columnMatch": "User_s",
                  "formatter": 1
                },
                "leftContent": {
                  "columnMatch": "count_",
                  "formatter": 12,
                  "formatOptions": {
                    "palette": "auto"
                  },
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "maximumSignificantDigits": 3,
                      "maximumFractionDigits": 2
                    }
                  }
                }
              }
            },
            "customWidth": "50",
            "name": "query - 5"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "ABAPAuditLog_CL\r\n| where TimeGenerated {TimeSelect}\r\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\r\n| where User_s == \"{User}\"\r\n| order by TimeGenerated desc\r\n| project TimeGenerated, SystemID_s, ClientID_s, MessageID_s ,MessageClass_s, MessageText_s\r\n| take 20",
              "size": 1,
              "title": "Detailed Activity of Suspicious User: {User} ",
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "customWidth": "50",
            "conditionalVisibility": {
              "parameterName": "User",
              "comparison": "isNotEqualTo",
              "value": "SAP"
            },
            "name": "query - 6"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "wb-param",
        "comparison": "isEqualTo",
        "value": "susp"
      },
      "name": "group - 2"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "<tr><td><B><h2 style=\"font-family: 'Enriqueta', arial, serif; line-height: 1.25; margin: 0 0 10px; font-size: 24px; font-weight: bold;\">Sensitive Assignments</b></h2>\r\n<tr><td><B><p style=\"color: #333; font-family: 'Muli', sans-serif; margin-bottom: 15px; font-size: 14px;\">Identifies new assignments for a sensitive role or profile to a user.</b><p>"
                  },
                  "conditionalVisibility": {
                    "parameterName": "wb-param",
                    "comparison": "isEqualTo",
                    "value": "auth"
                  },
                  "name": "text - 3"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "// Define Variables\r\nlet Roles = 'PFCG';\r\nlet UsersRoles = 'AGR_USERS';\r\nlet Insert = \"I\";\r\nlet logsThreshold = 10; // 10 seconds\r\n// Audit Log Classes - Authorizations for user changed\r\nlet AuditClasses = dynamic(['AUB', 'AUD']); // Authorizations for user &A changed.\r\n// Maintain these if WatchList is not available\r\nlet SensitiveRoles =  _GetWatchlist('SAP - Sensitive Roles');\r\nlet fixedRoles = datatable(Role: string)['SAP_BC_BASIS_ADMIN', 'SAP_BC_AUTH_PROFILE_ADMIN'];\r\n// Maintain these if System doesn't have CR's\r\nlet fixedChangeDocs = datatable(User_s : string, ObjectClass_s : string, TableName_s : string, TypeofChange_Item_s : string ,\r\nChangedTableKey_s : string, ObjectID_s : string, TimeGenerated : datetime, ValueNew_s : string, SystemID_s : string)[];\r\nlet ChangeDocs = \r\nunion isfuzzy=true table(\"ABAPChangeDocsLog_CL\"), fixedChangeDocs;\r\nlet ChangeCheck =\r\nChangeDocs  \r\n| where ObjectClass_s == Roles // Roles\r\n    and TableName_s == UsersRoles // Users Roles\r\n    and TypeofChange_Item_s == Insert // Insert \r\n| extend UserAssigned = extract(@\"^.{1,33}\\s*?(.{1,12})\\s*?\\d{16}\", 1, ChangedTableKey_s)\r\n| extend Role = ObjectID_s;\r\nlet UnitedRoles =\r\ntoscalar(union fixedRoles, SensitiveRoles\r\n| summarize Roles = make_list(Role));\r\n// Query logic\r\nABAPAuditLog_CL \r\n| where TimeGenerated {TimeSelect}\r\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\r\n| where MessageID_s in (AuditClasses)\r\n| summarize by TimeGenerated, TerminalIPv6_s, User_s, Host_s, Email_s\r\n| lookup kind = leftouter (ChangeCheck) on User_s\r\n| where Role in (UnitedRoles)\r\n| project-rename TimeGenAudit = TimeGenerated1\r\n| where abs(datetime_diff('second', TimeGenerated, TimeGenAudit)) <= logsThreshold\r\nor isnull(TimeGenAudit)\r\n| project \r\n    // Details\r\n    TimeGenerated, SystemID_s, ClientID_s, Role, User_s, UserAssigned",
                    "size": 1,
                    "title": "Sensitive Role Assignments (Press to Investigate)",
                    "exportFieldName": "User_s",
                    "exportParameterName": "User_r",
                    "exportDefaultValue": "SAP",
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Role",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "warning",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  "name": "query - 2"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "// Define Variables\r\nlet Roles = 'PFCG';\r\nlet UsersRoles = 'AGR_USERS';\r\nlet Insert = \"I\";\r\nlet logsThreshold = 10; // 10 seconds\r\n// Audit Log Classes - Authorizations for user changed\r\nlet AuditClasses = dynamic(['AUB', 'AUD']); // Authorizations for user &A changed.\r\n// Maintain these if WatchList is not available\r\nlet SensitiveRoles =  _GetWatchlist('SAP - Sensitive Roles');\r\nlet fixedRoles = datatable(Role: string)['SAP_BC_BASIS_ADMIN', 'SAP_BC_AUTH_PROFILE_ADMIN'];\r\n// Maintain these if System doesn't have CR's\r\nlet fixedChangeDocs = datatable(User_s : string, ObjectClass_s : string, TableName_s : string, TypeofChange_Item_s : string ,\r\nChangedTableKey_s : string, ObjectID_s : string, TimeGenerated : datetime, ValueNew_s : string, SystemID_s : string)[];\r\nlet ChangeDocs = \r\nunion isfuzzy=true table(\"ABAPChangeDocsLog_CL\"), fixedChangeDocs;\r\nlet ChangeCheck =\r\nChangeDocs  \r\n| where ObjectClass_s == Roles // Roles\r\n    and TableName_s == UsersRoles // Users Roles\r\n    and TypeofChange_Item_s == Insert // Insert \r\n| extend UserAssigned = extract(@\"^.{1,33}\\s*?(.{1,12})\\s*?\\d{16}\", 1, ChangedTableKey_s)\r\n| extend Role = ObjectID_s;\r\nlet UnitedRoles =\r\ntoscalar(union fixedRoles, SensitiveRoles\r\n| summarize Roles = make_list(Role));\r\n// Query logic\r\nABAPAuditLog_CL \r\n| where TimeGenerated {TimeSelect}\r\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\r\n| where MessageID_s in (AuditClasses)\r\n| summarize by TimeGenerated, TerminalIPv6_s, User_s, Host_s, Email_s\r\n| lookup kind = leftouter (ChangeCheck) on User_s\r\n| where Role in (UnitedRoles)\r\n| project-rename TimeGenAudit = TimeGenerated1\r\n| where abs(datetime_diff('second', TimeGenerated, TimeGenAudit)) <= logsThreshold\r\nor isnull(TimeGenAudit)\r\n| summarize count() by Role",
                    "size": 1,
                    "title": "Sensitive Roles Distribution",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "visualization": "piechart"
                  },
                  "customWidth": "50",
                  "name": "query - 4"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "ABAPAuditLog_CL \r\n| where TimeGenerated {TimeSelect}\r\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\r\n| where User_s=='{User_r}'\r\n| order by TimeGenerated desc\r\n| project TimeGenerated, SystemID_s, ClientID_s, MessageID_s ,MessageClass_s, MessageText_s\r\n| take 20",
                    "size": 1,
                    "title": "Detailed Activity of Suspicious User: {User_r}",
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "visualization": "table"
                  },
                  "customWidth": "50",
                  "conditionalVisibility": {
                    "parameterName": "User_r",
                    "comparison": "isNotEqualTo",
                    "value": "SAP"
                  },
                  "name": "query - 3"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "// Define Variables\r\n// Audit Log Classes - Authorizations for user changed\r\nlet Identity = 'IDENTITY';\r\nlet ProfileChangeDoc = 'SUSR_UST04';\r\nlet Insert = \"I\";\r\nlet logsThreshold = 10; // 10 seconds\r\nlet AuditClasses = dynamic(['AUB']); // Authorizations for user &A changed.\r\n// Maintain these if WatchList is not available\r\nlet SensitiveProfiles =  _GetWatchlist('SAP - Sensitive Profiles');\r\nlet fixedProfile = datatable(Profile:string)['SAP_ALL','SAP_NEW'];\r\n// Maintain these if System doesn't have CR's\r\nlet fixedChangeDocs = datatable(User_s : string, ObjectClass_s : string, TableName_s : string, TypeofChange_Item_s : string , ChangedTableKey_s : string, ObjectID_s : string, TimeGenerated : datetime, ValueNew_s : string, SystemID_s : string)[];\r\nlet ChangeDocs = \r\nunion isfuzzy=true table(\"ABAPChangeDocsLog_CL\"), fixedChangeDocs;\r\nlet IdentityChangeDocuments =\r\n// Identity Change documents which represents profiles assignment\r\n    ChangeDocs  \r\n    | where ObjectClass_s == Identity // Identity\r\n    and TableName_s == ProfileChangeDoc // Profile Change Doc\r\n    and TypeofChange_Item_s == Insert // Insert \r\n    | extend Profile = ChangedTableKey_s\r\n    | extend UserAssigned = ObjectID_s;\r\nlet UnitedProfiles =\r\ntoscalar(union fixedProfile, SensitiveProfiles\r\n| summarize Profiles = make_list(Profile));\r\n// Query logic\r\nABAPAuditLog_CL \r\n| where TimeGenerated {TimeSelect}\r\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\r\n| where MessageID_s in (AuditClasses)\r\n| summarize by TimeGenerated, TerminalIPv6_s, User_s, Host_s, Email_s\r\n| lookup kind = leftouter (IdentityChangeDocuments) on User_s\r\n| where Profile in (UnitedProfiles)\r\n| project-rename  TimeGenAudit = TimeGenerated1    \r\n| where abs(datetime_diff('second',TimeGenerated,TimeGenAudit)) <= logsThreshold\r\nor isnull(TimeGenAudit)\r\n| project \r\n// Details\r\nTimeGenerated, SystemID_s, ClientID_s, Profile, User_s, UserAssigned",
                    "size": 1,
                    "title": "Sensitive Profile Assignments (Press to Investigate)",
                    "exportFieldName": "User_s",
                    "exportParameterName": "User_p",
                    "exportDefaultValue": "SAP",
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Profile",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "warning",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  "name": "query - 4"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "// Define Variables\r\n// Audit Log Classes - Authorizations for user changed\r\nlet Identity = 'IDENTITY';\r\nlet ProfileChangeDoc = 'SUSR_UST04';\r\nlet Insert = \"I\";\r\nlet logsThreshold = 10; // 10 seconds\r\nlet AuditClasses = dynamic(['AUB']); // Authorizations for user &A changed.\r\n// Maintain these if WatchList is not available\r\nlet SensitiveProfiles =  _GetWatchlist('SAP - Sensitive Profiles');\r\nlet fixedProfile = datatable(Profile:string)['SAP_ALL','SAP_NEW'];\r\n// Maintain these if System doesn't have CR's\r\nlet fixedChangeDocs = datatable(User_s : string, ObjectClass_s : string, TableName_s : string, TypeofChange_Item_s : string , ChangedTableKey_s : string, ObjectID_s : string, TimeGenerated : datetime, ValueNew_s : string, SystemID_s : string)[];\r\nlet ChangeDocs = \r\nunion isfuzzy=true table(\"ABAPChangeDocsLog_CL\"), fixedChangeDocs;\r\nlet IdentityChangeDocuments =\r\n// Identity Change documents which represents profiles assignment\r\n    ChangeDocs  \r\n    | where ObjectClass_s == Identity // Identity\r\n    and TableName_s == ProfileChangeDoc // Profile Change Doc\r\n    and TypeofChange_Item_s == Insert // Insert \r\n    | extend Profile = ChangedTableKey_s\r\n    | extend UserAssigned = ObjectID_s;\r\nlet UnitedProfiles =\r\ntoscalar(union fixedProfile, SensitiveProfiles\r\n| summarize Profiles = make_list(Profile));\r\n// Query logic\r\nABAPAuditLog_CL \r\n| where TimeGenerated {TimeSelect}\r\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\r\n| where MessageID_s in (AuditClasses)\r\n| summarize by TimeGenerated, TerminalIPv6_s, User_s, Host_s, Email_s\r\n| lookup kind = leftouter (IdentityChangeDocuments) on User_s\r\n| where Profile in (UnitedProfiles)\r\n| project-rename  TimeGenAudit = TimeGenerated1    \r\n| where abs(datetime_diff('second',TimeGenerated,TimeGenAudit)) <= logsThreshold\r\nor isnull(TimeGenAudit)\r\n| summarize count() by Profile",
                    "size": 1,
                    "title": "Sensitive Profiles Distribution",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "visualization": "piechart"
                  },
                  "customWidth": "50",
                  "name": "query - 5"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "ABAPAuditLog_CL \r\n| where TimeGenerated {TimeSelect}\r\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\r\n| where User_s=='{User_p}'\r\n| order by TimeGenerated desc\r\n| project TimeGenerated, SystemID_s, ClientID_s, MessageID_s ,MessageClass_s, MessageText_s\r\n| take 20",
                    "size": 1,
                    "title": "Detailed Activity of Suspicious User: {User_p}",
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  "customWidth": "50",
                  "conditionalVisibility": {
                    "parameterName": "User_p",
                    "comparison": "isNotEqualTo",
                    "value": "SAP"
                  },
                  "name": "query - 6"
                }
              ]
            },
            "name": "group - 7"
          },
          {
            "type": 1,
            "content": {
              "json": "<tr><td><h2 style=\"font-family: 'Enriqueta', arial, serif; line-height: 1.25; margin: 0 0 10px; font-size: 24px; font-weight: bold;\"><B>Critical Authorizations</b></h2>\r\n<tr><td><p style=\"color: #333; font-family: 'Muli', sans-serif; margin-bottom: 15px; font-size: 14px;\"><B>Identifies assignment of a critical authorization object value to a new user.</b></p>"
            },
            "conditionalVisibility": {
              "parameterName": "wb-param",
              "comparison": "isEqualTo",
              "value": "auth"
            },
            "name": "text - 3"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "// New Assigned Users\r\nlet ObjectClassRoles = 'PFCG';\r\nlet TableName = 'CD1251';\r\nlet UsersRoles = 'AGR_USERS';\r\nlet Insert = \"I\";\r\nlet NotInUse = 'NOT_IN_USE';\r\nlet logsThreshold = 3; // 3 seconds\r\n// Audit Log Classes - Authorizations for user changed\r\nlet AuditClasses = dynamic(['AUB','AUD']); // Authorizations for user &A changed. User Master Record Changed\r\n// Roles Change Documents - Extract Auth Object and Obj Field\r\n// Maintain these if System doesn't have CR's\r\nlet fixedChangeDocs = datatable(User_s : string, ObjectClass_s : string, TableName_s : string, TypeofChange_Item_s : string , ChangedTableKey_s : string, ObjectID_s : string, TimeGenerated : datetime, ValueNew_s : string, SystemID_s : string)[];\r\nlet ChangeDocs = \r\nunion isfuzzy=true table(\"ABAPChangeDocsLog_CL\"), fixedChangeDocs;\r\nlet RolesAuthObject = ChangeDocs  \r\n    | where TimeGenerated {TimeSelect}\r\n    | where ObjectClass_s == ObjectClassRoles and TableName_s == TableName // Role-Obj-Profile-ObjField\r\n    | where TypeofChange_Item_s in ('J', 'I', 'U') //  Insert\r\n    | extend RoleObjProfileObjFieldVer = ChangedTableKey_s, Role = ObjectID_s\r\n    | extend ObjFieldValue = ValueNew_s    \r\n    | extend ObjField = trim(@\"\\s*?\", extract(@\"(^.{1,30})\\s*?(.{1,10})\\s*?(.{1,12})\\s*?(.{1,10})\\s*?\\d{6}\", 4, RoleObjProfileObjFieldVer, typeof(string)))\r\n    | extend AuthObject = trim(@\"\\s*?\", extract(@\"(^.{1,30})\\s*?(.{1,10})\\s*?(.{1,12})\\s*?(.{1,10})\\s*?\\d{6}\", 2, RoleObjProfileObjFieldVer, typeof(string)))\r\n    | summarize by SystemID_s, Role, AuthObject, ObjField, ObjFieldValue;\r\nlet ComplexAuth = _GetWatchlist('SAP - Critical Authorizations');\r\nlet SimpleAuth = _GetWatchlist('SAP - Critical Authorizations');\r\nlet fixedComplexAuth = datatable(AuthorizationObject: string, AuthorizationField: string, AuthorizationValue: string, ActivityField: string, Activity: string)\r\n    ['S_DEVELOP', 'OBJTYPE', 'DEBUG', 'ACTVT', '*',\r\n    'S_DEVELOP', 'OBJTYPE', 'DEBUG', 'ACTVT', '02']; // Maintain these if WatchList is not available\r\nlet fixedSimpleAuth = datatable(AuthorizationObject: string, AuthorizationField: string, AuthorizationValue: string, ActivityField: string, Activity: string)\r\n    ['S_TCODE', 'TCD', '*', 'NOT_IN_USE', '',\r\n    'S_TZONE', 'ACTVT', '*', 'NOT_IN_USE', '']; // Maintain these if WatchList is not available\r\nlet usersinRole = \r\n    ChangeDocs  \r\n    | where TimeGenerated {TimeSelect}\r\n    | where ObjectClass_s == ObjectClassRoles // Roles\r\n        and TableName_s == UsersRoles // Users Roles\r\n        and TypeofChange_Item_s == Insert // Insert \r\n    | extend UserAssigned = extract(@\"^.{1,33}\\s*?(.{1,12})\\s*?\\d{16}\", 1, ChangedTableKey_s)\r\n    | extend Role = ObjectID_s\r\n    | extend TimeGenUserinRole = TimeGenerated;\r\n    //| summarize by TimeGenerated, SystemID_s, ClientID_s, Role, UserAssigned, User_s\r\nlet RolesAuthObjectCheck =     \r\n        RolesAuthObject     \r\n        | extend ObjFieldVal = ObjFieldValue\r\n        | lookup kind = leftouter \r\n            (RolesAuthObject \r\n            | extend ActivityVal = ObjFieldValue)\r\n            on Role, AuthObject;\r\nlet complexScenario = \r\n    union ComplexAuth, fixedComplexAuth\r\n    | where ActivityField != NotInUse\r\n    | summarize by AuthorizationObject, AuthorizationField, AuthorizationValue, ActivityField, Activity\r\n    | lookup kind = inner (RolesAuthObjectCheck)\r\n        on $left.AuthorizationObject == $right.AuthObject \r\n        and $left.AuthorizationField == $right.ObjField \r\n        and $left.AuthorizationValue == $right.ObjFieldValue\r\n        and $left.ActivityField == $right.ObjField1\r\n        and $left.Activity == $right.ActivityVal;\r\nlet simpleScenario = \r\n    union SimpleAuth, fixedSimpleAuth\r\n    | where ActivityField == NotInUse\r\n    | summarize by AuthorizationObject, AuthorizationField, AuthorizationValue, ActivityField, Activity \r\n    | lookup kind = inner (RolesAuthObject)\r\n        on $left.AuthorizationObject == $right.AuthObject \r\n        and $left.AuthorizationField == $right.ObjField \r\n        and $left.AuthorizationValue == $right.ObjFieldValue;\r\nlet GetEntites =     \r\n    ABAPAuditLog_CL \r\n    | where TimeGenerated {TimeSelect}\r\n    | where MessageID_s in (AuditClasses)\r\n    | summarize by TimeGenerated, TerminalIPv6_s, ClientID_s, User_s, Host_s, Email_s\r\n    | extend TimeGenAudit = TimeGenerated;  \r\nunion complexScenario, simpleScenario\r\n| lookup kind = inner (usersinRole) on SystemID_s, Role\r\n| lookup kind = leftouter (GetEntites) on User_s\r\n| where TimeGenAudit {TimeSelect}\r\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\r\n| where abs(datetime_diff('second', TimeGenUserinRole, TimeGenAudit)) <= logsThreshold or\r\nisnull(TimeGenAudit)\r\n| project \r\n    // Details\r\nTimeGenerated = TimeGenUserinRole, SystemID_s, ClientID_s, User_s, UserAssigned, Role, AuthorizationObject, AuthorizationField, AuthorizationValue, ActivityField, Activity",
              "size": 1,
              "title": "New User Assignment",
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "visualization": "table",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "AuthorizationObject",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "colors",
                      "thresholdsGrid": [
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "orange",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  }
                ]
              }
            },
            "name": "query - 5"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "wb-param",
        "comparison": "isEqualTo",
        "value": "auth"
      },
      "name": "group - 6"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "// Define variables\r\nlet RoleObjectClass = \"PFCG\";\r\nlet ChangeType = \"U\";\r\nlet AuditLogIn = dynamic(['AU1', 'AU5']); // Messages of connect with user\r\nlet SensitiveRoles = _GetWatchlist(\"SAP - Sensitive Roles\");\r\n// Maintain if watchlist is not available\r\nlet fixedRoles = datatable(Role: string)['SAP_BC_BASIS_ADMIN', 'SAP_BC_AUTH_PROFILE_ADMIN'];\r\nlet UnitedRoles =\r\ntoscalar(union fixedRoles, SensitiveRoles\r\n| summarize Roles = make_list(Role));\r\n// Query logic\r\nlet LastLogin = \r\nABAPAuditLog_CL\r\n| where TimeGenerated {TimeSelect}\r\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\r\n| where MessageID_s in (AuditLogIn)\r\n| summarize TimeGenerated = arg_max(TimeGenerated, *) by SystemID_s, ClientID_s, User_s; // Get last connection date for user\r\nABAPChangeDocsLog_CL\r\n| where TimeGenerated {TimeSelect}\r\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\r\n| where ObjectClass_s == RoleObjectClass // Relevant role object class\r\n// | where ObjectID_s in (UnitedRoles) // Role is sensitive\r\n| where TypeofChange_Item_s == ChangeType\r\n| extend AuthorizationObj = extract(@\"\\S+\\s+(\\S+)\\s+\", 1, ChangedTableKey_s, typeof(string)) // Extract Authorization Object\r\n| extend Authorization = extract(@\"\\S+\\s+\\S+\\s+(\\S+\\d+)\", 1, ChangedTableKey_s, typeof(string)) // Extract Authorization\r\n| lookup kind=inner LastLogin on User_s // Get IP\r\n| project TimeGenerated, SystemID_s, ClientID_s, Role = ObjectID_s, AccountCustomEntity = Email_s, IPCustomEntity = TerminalIPv6_s, HostCustomEntity = Host_s, FieldName_s , AuthorizationObj, Authorization, OldValue = ValueOld_s, NewValue = ValueNew_s",
              "size": 1,
              "title": "Roles Changes",
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "visualization": "table",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Role",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Blank",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  }
                ]
              }
            },
            "customWidth": "50",
            "name": "query - 3"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "// Define variables\r\nlet RoleObjectClass = \"PFCG\";\r\nlet ChangeType = \"U\";\r\nlet AuditLogIn = dynamic(['AU1', 'AU5']); // Messages of connect with user\r\nlet SensitiveRoles = _GetWatchlist(\"SAP - Sensitive Roles\");\r\n// Maintain if watchlist is not available\r\nlet fixedRoles = datatable(Role: string)['SAP_BC_BASIS_ADMIN', 'SAP_BC_AUTH_PROFILE_ADMIN'];\r\nlet UnitedRoles =\r\ntoscalar(union fixedRoles, SensitiveRoles\r\n| summarize Roles = make_list(Role));\r\n// Query logic\r\nlet LastLogin = \r\nABAPAuditLog_CL\r\n| where TimeGenerated {TimeSelect}\r\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\r\n| where MessageID_s in (AuditLogIn)\r\n| summarize TimeGenerated = arg_max(TimeGenerated, *) by SystemID_s, ClientID_s, User_s; // Get last connection date for user\r\nABAPChangeDocsLog_CL\r\n| where TimeGenerated {TimeSelect}\r\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\r\n| where ObjectClass_s == RoleObjectClass // Relevant role object class\r\n// | where ObjectID_s in (UnitedRoles) // Role is sensitive\r\n| where TypeofChange_Item_s == ChangeType\r\n| lookup kind=inner LastLogin on User_s // Get IP\r\n| summarize count() by ObjectID_s",
              "size": 1,
              "title": "Role Change Distribution",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "visualization": "piechart"
            },
            "customWidth": "50",
            "name": "query - 2"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "// Define variables\r\nlet RoleObjectClass = \"PFCG\";\r\nlet ChangeType = \"U\";\r\nlet AuditLogIn = dynamic(['AU1', 'AU5']); // Messages of connect with user\r\nlet SensitiveRoles = _GetWatchlist(\"SAP - Sensitive Roles\");\r\n// Maintain if watchlist is not available\r\nlet fixedRoles = datatable(Role: string)['SAP_BC_BASIS_ADMIN', 'SAP_BC_AUTH_PROFILE_ADMIN'];\r\nlet UnitedRoles =\r\ntoscalar(union fixedRoles, SensitiveRoles\r\n| summarize Roles = make_list(Role));\r\n// Query logic\r\nlet LastLogin = \r\nABAPAuditLog_CL\r\n| where TimeGenerated {TimeSelect}\r\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\r\n| where MessageID_s in (AuditLogIn)\r\n| summarize TimeGenerated = arg_max(TimeGenerated, *) by SystemID_s, ClientID_s, User_s; // Get last connection date for user\r\nABAPChangeDocsLog_CL\r\n| where TimeGenerated {TimeSelect}\r\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\r\n| where ObjectClass_s == RoleObjectClass // Relevant role object class\r\n// | where ObjectID_s in (UnitedRoles) // Role is sensitive\r\n| where TypeofChange_Item_s == ChangeType\r\n| extend AuthorizationObj = extract(@\"\\S+\\s+(\\S+)\\s+\", 1, ChangedTableKey_s, typeof(string)) // Extract Authorization Object\r\n| extend Authorization = extract(@\"\\S+\\s+\\S+\\s+(\\S+\\d+)\", 1, ChangedTableKey_s, typeof(string)) // Extract Authorization\r\n| lookup kind=inner LastLogin on User_s // Get IP\r\n| project TimeGenerated, SystemID_s, ClientID_s, AccountCustomEntity = Email_s, IPCustomEntity = TerminalIPv6_s, HostCustomEntity = Host_s, Role = ObjectID_s, FieldName_s , AuthorizationObj, Authorization, OldValue = ValueOld_s, NewValue = ValueNew_s\r\n| summarize count() by bin(TimeGenerated, 24h)\r\n| project-rename Changes = count_",
              "size": 0,
              "title": "Changes in Authorizations By Time",
              "color": "purpleDark",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "visualization": "areachart",
              "chartSettings": {
                "ySettings": {
                  "max": 10
                }
              }
            },
            "name": "query - 4"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "// Define variables\r\nlet RoleObjectClass = \"PFCG\";\r\nlet ChangeType = \"U\";\r\nlet AuditLogIn = dynamic(['AU1', 'AU5']); // Messages of connect with user\r\nlet SensitiveRoles = _GetWatchlist(\"SAP - Sensitive Roles\");\r\n// Maintain if watchlist is not available\r\nlet fixedRoles = datatable(Role: string)['SAP_BC_BASIS_ADMIN', 'SAP_BC_AUTH_PROFILE_ADMIN'];\r\nlet UnitedRoles =\r\ntoscalar(union fixedRoles, SensitiveRoles\r\n| summarize Roles = make_list(Role));\r\n// Query logic\r\nlet LastLogin = \r\nABAPAuditLog_CL\r\n| where TimeGenerated {TimeSelect}\r\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\r\n| where MessageID_s in (AuditLogIn)\r\n| summarize TimeGenerated = arg_max(TimeGenerated, *) by SystemID_s, ClientID_s, User_s; // Get last connection date for user\r\nABAPChangeDocsLog_CL\r\n| where TimeGenerated {TimeSelect}\r\n| where (SystemID_s in ({Systems}) or  '*' in ({Systems}))\r\n| where ObjectClass_s == RoleObjectClass // Relevant role object class\r\n// | where ObjectID_s in (UnitedRoles) // Role is sensitive\r\n| where TypeofChange_Item_s == ChangeType\r\n| extend AuthorizationObj = extract(@\"\\S+\\s+(\\S+)\\s+\", 1, ChangedTableKey_s, typeof(string)) // Extract Authorization Object\r\n| extend Authorization = extract(@\"\\S+\\s+\\S+\\s+(\\S+\\d+)\", 1, ChangedTableKey_s, typeof(string)) // Extract Authorization\r\n| lookup kind=inner LastLogin on User_s // Get IP\r\n| project TimeGenerated, SystemID_s, ClientID_s, AccountCustomEntity = Email_s, IPCustomEntity = TerminalIPv6_s, HostCustomEntity = Host_s, Role = ObjectID_s, FieldName_s , AuthorizationObj, Authorization, OldValue = ValueOld_s, NewValue = ValueNew_s\r\n| summarize count() by bin(TimeGenerated, 24h)\r\n| project-rename Changes = count_\r\n| make-series Changes=avg(Changes) on TimeGenerated from ago(30d) to ago(0d) step 1h\r\n| extend (Anomalies, Score, Baseline) = series_decompose_anomalies(Changes, 1.5, -1, 'linefit') \r\n| project-away Score",
              "size": 0,
              "title": "Changes in Authorizations Anomalies",
              "color": "purpleDark",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "visualization": "timechart",
              "chartSettings": {
                "ySettings": {
                  "max": 10
                }
              }
            },
            "name": "query - 4 - Copy"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "wb-param",
        "comparison": "isEqualTo",
        "value": "ch"
      },
      "name": "group - 4"
    }
  ],
  "fallbackResourceIds": [
    "/subscriptions/fdee8146-8bcf-460f-86f3-3f788c285efd/resourcegroups/iprosis/providers/microsoft.operationalinsights/workspaces/s4h-sentinel-development"
  ],
  "fromTemplateId": "sentinel-UserWorkbook",
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}